//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace II_VI_Incorporated_SCM.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class IIVILocalDB : DbContext
    {
        public IIVILocalDB()
            : base("name=IIVILocalDB")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<ADD_INS> ADD_INS { get; set; }
        public virtual DbSet<ApplicationGroupRole> ApplicationGroupRoles { get; set; }
        public virtual DbSet<ApplicationGroup> ApplicationGroups { get; set; }
        public virtual DbSet<ApplicationUserGroup> ApplicationUserGroups { get; set; }
        public virtual DbSet<APPROVAL> APPROVALs { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<AspNetUsers_bk> AspNetUsers_bk { get; set; }
        public virtual DbSet<ASSIGN> ASSIGNs { get; set; }
        public virtual DbSet<ATTACHMENT> ATTACHMENTs { get; set; }
        public virtual DbSet<ATTCH_TEMP> ATTCH_TEMP { get; set; }
        public virtual DbSet<CCN> CCNs { get; set; }
        public virtual DbSet<CHANGED_SPL> CHANGED_SPL { get; set; }
        public virtual DbSet<ChangeItem> ChangeItems { get; set; }
        public virtual DbSet<C> CS { get; set; }
        public virtual DbSet<DESCRIPTION> DESCRIPTIONs { get; set; }
        public virtual DbSet<DETAILQUESTION> DETAILQUESTIONs { get; set; }
        public virtual DbSet<DIMENSION_STD_BY_PART> DIMENSION_STD_BY_PART { get; set; }
        public virtual DbSet<DISPOSITION> DISPOSITIONs { get; set; }
        public virtual DbSet<DOC_by_ITEM> DOC_by_ITEM { get; set; }
        public virtual DbSet<DOC_by_PO> DOC_by_PO { get; set; }
        public virtual DbSet<EEP_REPORT> EEP_REPORT { get; set; }
        public virtual DbSet<ESCAPING_PPM> ESCAPING_PPM { get; set; }
        public virtual DbSet<Family> Families { get; set; }
        public virtual DbSet<FIRSTLOT> FIRSTLOTs { get; set; }
        public virtual DbSet<FIRSTLOT_APPROVE> FIRSTLOT_APPROVE { get; set; }
        public virtual DbSet<FIRSTLOT_REJECT> FIRSTLOT_REJECT { get; set; }
        public virtual DbSet<FIXTURE_STD_BY_PART_NoUse> FIXTURE_STD_BY_PART_NoUse { get; set; }
        public virtual DbSet<FIXTURE_STD_BY_PART_OLD_NoUse> FIXTURE_STD_BY_PART_OLD_NoUse { get; set; }
        public virtual DbSet<INS_RESULT> INS_RESULT { get; set; }
        public virtual DbSet<INS_RESULT_DEFECT> INS_RESULT_DEFECT { get; set; }
        public virtual DbSet<INS_RESULT_FINAL> INS_RESULT_FINAL { get; set; }
        public virtual DbSet<INS_RESULT_MEASURE_BY_SAMPLING> INS_RESULT_MEASURE_BY_SAMPLING { get; set; }
        public virtual DbSet<INS_RESULT_PARTIAL> INS_RESULT_PARTIAL { get; set; }
        public virtual DbSet<INS_RESULT_VIS_ITEM> INS_RESULT_VIS_ITEM { get; set; }
        public virtual DbSet<INS_RESULT_VISUAL_PARTIAL> INS_RESULT_VISUAL_PARTIAL { get; set; }
        public virtual DbSet<IT_PRO_PROJECT> IT_PRO_PROJECT { get; set; }
        public virtual DbSet<IT_PRO_REFER> IT_PRO_REFER { get; set; }
        public virtual DbSet<LAST_BATCH_NO> LAST_BATCH_NO { get; set; }
        public virtual DbSet<LAST_DRAW_REV> LAST_DRAW_REV { get; set; }
        public virtual DbSet<LAST_SKIP_LOT_LEVEL> LAST_SKIP_LOT_LEVEL { get; set; }
        public virtual DbSet<LAST_SKIP_LOT_LEVEL_bk> LAST_SKIP_LOT_LEVEL_bk { get; set; }
        public virtual DbSet<LOGIN> LOGINs { get; set; }
        public virtual DbSet<MAILHISTORY> MAILHISTORies { get; set; }
        public virtual DbSet<MAINQUESTION> MAINQUESTIONs { get; set; }
        public virtual DbSet<MEASUREMENT_STD_BY_PART> MEASUREMENT_STD_BY_PART { get; set; }
        public virtual DbSet<MEETING_ATT> MEETING_ATT { get; set; }
        public virtual DbSet<MEETING_ATTENDANT> MEETING_ATTENDANT { get; set; }
        public virtual DbSet<MEETING_NOTE> MEETING_NOTE { get; set; }
        public virtual DbSet<NC> NCs { get; set; }
        public virtual DbSet<NC_BY_PART> NC_BY_PART { get; set; }
        public virtual DbSet<NC_BY_PART_OLD> NC_BY_PART_OLD { get; set; }
        public virtual DbSet<NC_BY_PRODUCT_GRP> NC_BY_PRODUCT_GRP { get; set; }
        public virtual DbSet<NC_CAT_NoUse> NC_CAT_NoUse { get; set; }
        public virtual DbSet<NC_GROUP> NC_GROUP { get; set; }
        public virtual DbSet<NC_PART> NC_PART { get; set; }
        public virtual DbSet<NCR_DET> NCR_DET { get; set; }
        public virtual DbSet<NCR_DET_History> NCR_DET_History { get; set; }
        public virtual DbSet<NCR_DIS> NCR_DIS { get; set; }
        public virtual DbSet<NCR_DIS_History> NCR_DIS_History { get; set; }
        public virtual DbSet<NCR_EVI> NCR_EVI { get; set; }
        public virtual DbSet<NCR_HDR> NCR_HDR { get; set; }
        public virtual DbSet<NCR_HDR_History> NCR_HDR_History { get; set; }
        public virtual DbSet<NCR_History> NCR_History { get; set; }
        public virtual DbSet<NCRDispositionDay> NCRDispositionDays { get; set; }
        public virtual DbSet<ONESUPPLLIER_PPMRB> ONESUPPLLIER_PPMRB { get; set; }
        public virtual DbSet<OrderDisposition> OrderDispositions { get; set; }
        public virtual DbSet<PANEL_EXCEL> PANEL_EXCEL { get; set; }
        public virtual DbSet<PANEL_RP> PANEL_RP { get; set; }
        public virtual DbSet<PART_DRAW_Nouse> PART_DRAW_Nouse { get; set; }
        public virtual DbSet<PART_DRW_OLD> PART_DRW_OLD { get; set; }
        public virtual DbSet<PART_INFO> PART_INFO { get; set; }
        public virtual DbSet<PART_INFO_TEMP> PART_INFO_TEMP { get; set; }
        public virtual DbSet<PART_INS_REQ> PART_INS_REQ { get; set; }
        public virtual DbSet<PART_INS_REQ_APPROVE> PART_INS_REQ_APPROVE { get; set; }
        public virtual DbSet<PART_INS_REQ_DOC> PART_INS_REQ_DOC { get; set; }
        public virtual DbSet<PART_INS_REQ_OLD> PART_INS_REQ_OLD { get; set; }
        public virtual DbSet<PATH> PATHs { get; set; }
        public virtual DbSet<PO_REV> PO_REV { get; set; }
        public virtual DbSet<PO_REV_Temp> PO_REV_Temp { get; set; }
        public virtual DbSet<RECEIVER> RECEIVERs { get; set; }
        public virtual DbSet<RECEIVER_Org> RECEIVER_Org { get; set; }
        public virtual DbSet<RECEIVER_TEMP> RECEIVER_TEMP { get; set; }
        public virtual DbSet<RESPON> RESPONs { get; set; }
        public virtual DbSet<REWORK_COST> REWORK_COST { get; set; }
        public virtual DbSet<RTVProcess> RTVProcesses { get; set; }
        public virtual DbSet<SCAR_Category> SCAR_Category { get; set; }
        public virtual DbSet<SCAR_INFO_BACKUP> SCAR_INFO_BACKUP { get; set; }
        public virtual DbSet<SCAR_RESULT_D0> SCAR_RESULT_D0 { get; set; }
        public virtual DbSet<SCAR_RESULT_D1> SCAR_RESULT_D1 { get; set; }
        public virtual DbSet<SCAR_RESULT_D2> SCAR_RESULT_D2 { get; set; }
        public virtual DbSet<SCAR_RESULT_D3> SCAR_RESULT_D3 { get; set; }
        public virtual DbSet<SCAR_RESULT_D4> SCAR_RESULT_D4 { get; set; }
        public virtual DbSet<SCAR_RESULT_D5> SCAR_RESULT_D5 { get; set; }
        public virtual DbSet<SCAR_RESULT_D6> SCAR_RESULT_D6 { get; set; }
        public virtual DbSet<SCAR_RESULT_D7> SCAR_RESULT_D7 { get; set; }
        public virtual DbSet<SCAREMAIL> SCAREMAILs { get; set; }
        public virtual DbSet<SCARINFO> SCARINFOes { get; set; }
        public virtual DbSet<SCARnNCR> SCARnNCRs { get; set; }
        public virtual DbSet<SCRAP_REASON> SCRAP_REASON { get; set; }
        public virtual DbSet<SCRAPCategory> SCRAPCategories { get; set; }
        public virtual DbSet<STATUS> STATUS { get; set; }
        public virtual DbSet<SUPPLIER_PPM> SUPPLIER_PPM { get; set; }
        public virtual DbSet<SUPPLIER_PPM_RP> SUPPLIER_PPM_RP { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TASK_APPROVE> TASK_APPROVE { get; set; }
        public virtual DbSet<TASK_CATEGORY> TASK_CATEGORY { get; set; }
        public virtual DbSet<TASK_PHASE> TASK_PHASE { get; set; }
        public virtual DbSet<TASKCOMMENT> TASKCOMMENTs { get; set; }
        public virtual DbSet<TASKDETAIL> TASKDETAILs { get; set; }
        public virtual DbSet<TASKDOCUMENT> TASKDOCUMENTs { get; set; }
        public virtual DbSet<TaskHi> TaskHis { get; set; }
        public virtual DbSet<TASKLIST> TASKLISTs { get; set; }
        public virtual DbSet<tbDashboard_Guide_Show> tbDashboard_Guide_Show { get; set; }
        public virtual DbSet<tbEvent> tbEvents { get; set; }
        public virtual DbSet<TbFixture> TbFixtures { get; set; }
        public virtual DbSet<tbl_Inv_Apr_Process> tbl_Inv_Apr_Process { get; set; }
        public virtual DbSet<tbl_Inv_BoardDirector> tbl_Inv_BoardDirector { get; set; }
        public virtual DbSet<tbl_Inv_Cost_Saving> tbl_Inv_Cost_Saving { get; set; }
        public virtual DbSet<tbl_Inv_Cost_To_Score> tbl_Inv_Cost_To_Score { get; set; }
        public virtual DbSet<tbl_Inv_Email_Remind> tbl_Inv_Email_Remind { get; set; }
        public virtual DbSet<tbl_Inv_IdeaType> tbl_Inv_IdeaType { get; set; }
        public virtual DbSet<tbl_Inv_ImpMethod> tbl_Inv_ImpMethod { get; set; }
        public virtual DbSet<tbl_Inv_Role> tbl_Inv_Role { get; set; }
        public virtual DbSet<tbl_Inv_Score_Percent> tbl_Inv_Score_Percent { get; set; }
        public virtual DbSet<tbl_Inv_Step1_SubmitSuggestion> tbl_Inv_Step1_SubmitSuggestion { get; set; }
        public virtual DbSet<tbl_Inv_Step2_CIAproval> tbl_Inv_Step2_CIAproval { get; set; }
        public virtual DbSet<tbl_Inv_Step3_SponsorApr> tbl_Inv_Step3_SponsorApr { get; set; }
        public virtual DbSet<tbl_Inv_Step5_ProLeaderApr> tbl_Inv_Step5_ProLeaderApr { get; set; }
        public virtual DbSet<tbl_PT_CheckSheet> tbl_PT_CheckSheet { get; set; }
        public virtual DbSet<tbl_PT_Infor> tbl_PT_Infor { get; set; }
        public virtual DbSet<tbl_PT_Status> tbl_PT_Status { get; set; }
        public virtual DbSet<tbl_PT_Work_Center> tbl_PT_Work_Center { get; set; }
        public virtual DbSet<tbl_RP_DataSource_Para> tbl_RP_DataSource_Para { get; set; }
        public virtual DbSet<tbl_RP_Report> tbl_RP_Report { get; set; }
        public virtual DbSet<tbl_RP_Report_Para> tbl_RP_Report_Para { get; set; }
        public virtual DbSet<tbl_RP_Setting_BarChart> tbl_RP_Setting_BarChart { get; set; }
        public virtual DbSet<tbl_RP_Setting_DataGrid> tbl_RP_Setting_DataGrid { get; set; }
        public virtual DbSet<tbl_RP_Setting_LineChart> tbl_RP_Setting_LineChart { get; set; }
        public virtual DbSet<tbl_RP_Store_Parameter> tbl_RP_Store_Parameter { get; set; }
        public virtual DbSet<tbl_RP_StoreProcedure> tbl_RP_StoreProcedure { get; set; }
        public virtual DbSet<tbl_SQE_Ass_Period> tbl_SQE_Ass_Period { get; set; }
        public virtual DbSet<tbl_SQE_Ass_Resp> tbl_SQE_Ass_Resp { get; set; }
        public virtual DbSet<tbl_SQE_Ass_Resp_Status> tbl_SQE_Ass_Resp_Status { get; set; }
        public virtual DbSet<tbl_SQE_Ass_Vendor> tbl_SQE_Ass_Vendor { get; set; }
        public virtual DbSet<tbl_SQE_Category> tbl_SQE_Category { get; set; }
        public virtual DbSet<tbl_SQE_Category_Target> tbl_SQE_Category_Target { get; set; }
        public virtual DbSet<tbl_SQE_Customer_Claim> tbl_SQE_Customer_Claim { get; set; }
        public virtual DbSet<tbl_SQE_Develop_AuditVisit_Attachment> tbl_SQE_Develop_AuditVisit_Attachment { get; set; }
        public virtual DbSet<tbl_SQE_Develop_Category> tbl_SQE_Develop_Category { get; set; }
        public virtual DbSet<tbl_SQE_Develop_Goal> tbl_SQE_Develop_Goal { get; set; }
        public virtual DbSet<tbl_SQE_Develop_ImprovePlan> tbl_SQE_Develop_ImprovePlan { get; set; }
        public virtual DbSet<tbl_SQE_Develop_ProblemDesc> tbl_SQE_Develop_ProblemDesc { get; set; }
        public virtual DbSet<tbl_SQE_Develop_SourceFrom> tbl_SQE_Develop_SourceFrom { get; set; }
        public virtual DbSet<tbl_SQE_Develop_Status> tbl_SQE_Develop_Status { get; set; }
        public virtual DbSet<tbl_SQE_Develop_VisitAudit> tbl_SQE_Develop_VisitAudit { get; set; }
        public virtual DbSet<tbl_SQE_PCN> tbl_SQE_PCN { get; set; }
        public virtual DbSet<tbl_SQE_PCN_Attached> tbl_SQE_PCN_Attached { get; set; }
        public virtual DbSet<tbl_SQE_PCN_Class> tbl_SQE_PCN_Class { get; set; }
        public virtual DbSet<tbl_SQE_PCN_Contact> tbl_SQE_PCN_Contact { get; set; }
        public virtual DbSet<tbl_SQE_Premium_Freight> tbl_SQE_Premium_Freight { get; set; }
        public virtual DbSet<tbl_SQE_Report_Result> tbl_SQE_Report_Result { get; set; }
        public virtual DbSet<tbl_SQE_Report_Type> tbl_SQE_Report_Type { get; set; }
        public virtual DbSet<tbl_SQE_Report_Weight> tbl_SQE_Report_Weight { get; set; }
        public virtual DbSet<tbl_SQE_Res_Item> tbl_SQE_Res_Item { get; set; }
        public virtual DbSet<tbl_SQE_Score_Ref> tbl_SQE_Score_Ref { get; set; }
        public virtual DbSet<tbl_SQE_Score_Reponsiveness> tbl_SQE_Score_Reponsiveness { get; set; }
        public virtual DbSet<tbl_SQE_SupplierLog> tbl_SQE_SupplierLog { get; set; }
        public virtual DbSet<tbl_SQE_SupplierLog_Attached> tbl_SQE_SupplierLog_Attached { get; set; }
        public virtual DbSet<tbl_SQE_SupplierLog_BusinessType> tbl_SQE_SupplierLog_BusinessType { get; set; }
        public virtual DbSet<tbl_SQE_SupplierLog_CoC> tbl_SQE_SupplierLog_CoC { get; set; }
        public virtual DbSet<tbl_SQE_SupplierLog_CoCItem> tbl_SQE_SupplierLog_CoCItem { get; set; }
        public virtual DbSet<tbl_SQE_SupplierLog_Commodity> tbl_SQE_SupplierLog_Commodity { get; set; }
        public virtual DbSet<tbl_SQE_SupplierLog_Contact> tbl_SQE_SupplierLog_Contact { get; set; }
        public virtual DbSet<tbl_SQE_SupplierLog_ISO> tbl_SQE_SupplierLog_ISO { get; set; }
        public virtual DbSet<tbl_SQE_SupplierLog_MaterialSupplied> tbl_SQE_SupplierLog_MaterialSupplied { get; set; }
        public virtual DbSet<tbl_SQE_SupplierLog_QMSItem> tbl_SQE_SupplierLog_QMSItem { get; set; }
        public virtual DbSet<tbl_SQE_SupplierLog_Status> tbl_SQE_SupplierLog_Status { get; set; }
        public virtual DbSet<tbl_SQE_Vendor_Score_Ref> tbl_SQE_Vendor_Score_Ref { get; set; }
        public virtual DbSet<tbl_TP_Family> tbl_TP_Family { get; set; }
        public virtual DbSet<tbl_TP_Section> tbl_TP_Section { get; set; }
        public virtual DbSet<tbLaborScan> tbLaborScans { get; set; }
        public virtual DbSet<tbTargetOT> tbTargetOTs { get; set; }
        public virtual DbSet<TBTOOL> TBTOOLs { get; set; }
        public virtual DbSet<TEMPLATE_DET> TEMPLATE_DET { get; set; }
        public virtual DbSet<TEMPLATE_HDR> TEMPLATE_HDR { get; set; }
        public virtual DbSet<UserDispositionApproval> UserDispositionApprovals { get; set; }
        public virtual DbSet<UserLogin> UserLogins { get; set; }
        public virtual DbSet<VARIABLE_ACT_BY_SPL> VARIABLE_ACT_BY_SPL { get; set; }
        public virtual DbSet<VARIABLE_STD_BY_PART_NoUse> VARIABLE_STD_BY_PART_NoUse { get; set; }
        public virtual DbSet<VENDOR> VENDORs { get; set; }
        public virtual DbSet<VNMaterialTraceability> VNMaterialTraceabilities { get; set; }
        public virtual DbSet<Attribute> Attributes { get; set; }
        public virtual DbSet<CHANGED_SPL_BK> CHANGED_SPL_BK { get; set; }
        public virtual DbSet<CS_HIS> CS_HIS { get; set; }
        public virtual DbSet<DESCRIPTION_Temp> DESCRIPTION_Temp { get; set; }
        public virtual DbSet<FIXTURE_ACT_BY_SPL_NoUse> FIXTURE_ACT_BY_SPL_NoUse { get; set; }
        public virtual DbSet<INS_RESULT_HIS> INS_RESULT_HIS { get; set; }
        public virtual DbSet<INS_RESULT_VISUAL_LOT> INS_RESULT_VISUAL_LOT { get; set; }
        public virtual DbSet<INSPECTOR> INSPECTORs { get; set; }
        public virtual DbSet<MEASUREMENT_STD_BY_PART_CHANGED_SPL> MEASUREMENT_STD_BY_PART_CHANGED_SPL { get; set; }
        public virtual DbSet<NCR_HDR_PUR> NCR_HDR_PUR { get; set; }
        public virtual DbSet<NCR_WH_OPEN_COMMENT> NCR_WH_OPEN_COMMENT { get; set; }
        public virtual DbSet<PART_INS_REQ_VISUAL> PART_INS_REQ_VISUAL { get; set; }
        public virtual DbSet<PART_REJECT> PART_REJECT { get; set; }
        public virtual DbSet<PARTIAL_INS_RESULT> PARTIAL_INS_RESULT { get; set; }
        public virtual DbSet<PARTIAL_NC> PARTIAL_NC { get; set; }
        public virtual DbSet<PO> POes { get; set; }
        public virtual DbSet<PO_BK> PO_BK { get; set; }
        public virtual DbSet<receiver_bk> receiver_bk { get; set; }
        public virtual DbSet<SKIP_LOT_LEVEL> SKIP_LOT_LEVEL { get; set; }
        public virtual DbSet<SKIP_LOT_LEVEL_bk> SKIP_LOT_LEVEL_bk { get; set; }
        public virtual DbSet<STDCOST> STDCOSTs { get; set; }
        public virtual DbSet<STDCOST_Temp> STDCOST_Temp { get; set; }
        public virtual DbSet<tbl_Inv_File_Attach> tbl_Inv_File_Attach { get; set; }
        public virtual DbSet<tbl_Inv_ScoreCost_4_Mem> tbl_Inv_ScoreCost_4_Mem { get; set; }
        public virtual DbSet<tbl_PT_Dept_PIC> tbl_PT_Dept_PIC { get; set; }
        public virtual DbSet<tbl_PT_Dept_PIC_BuyPart> tbl_PT_Dept_PIC_BuyPart { get; set; }
        public virtual DbSet<tbl_PT_TaskList> tbl_PT_TaskList { get; set; }
        public virtual DbSet<tbl_RP_Advance_Setting> tbl_RP_Advance_Setting { get; set; }
        public virtual DbSet<tbl_RP_Data_Source> tbl_RP_Data_Source { get; set; }
        public virtual DbSet<tbl_SQE_6Panel_TopNCPart> tbl_SQE_6Panel_TopNCPart { get; set; }
        public virtual DbSet<tbl_SQE_PCN_Status> tbl_SQE_PCN_Status { get; set; }
        public virtual DbSet<tbl_SQE_Supplier_Finish6Panel> tbl_SQE_Supplier_Finish6Panel { get; set; }
        public virtual DbSet<tbl_SQE_SupplierLog_QMS> tbl_SQE_SupplierLog_QMS { get; set; }
        public virtual DbSet<TemporaryUpsizedTable2> TemporaryUpsizedTable2 { get; set; }
        public virtual DbSet<USER_PERMIT> USER_PERMIT { get; set; }
        public virtual DbSet<VENDOR_Temp> VENDOR_Temp { get; set; }
        public virtual DbSet<Work_Center> Work_Centers { get; set; }
        public virtual DbSet<DMS_WOLot> DMS_WOLot { get; set; }
        public virtual DbSet<PPM_RejectQty> PPM_RejectQty { get; set; }
        public virtual DbSet<v_AQL> v_AQL { get; set; }
        public virtual DbSet<V_AspNetUsers> V_AspNetUsers { get; set; }
        public virtual DbSet<v_INS_RESULT> v_INS_RESULT { get; set; }
        public virtual DbSet<V_Material_HadMake_FLupSerialNumber> V_Material_HadMake_FLupSerialNumber { get; set; }
        public virtual DbSet<v_Operator> v_Operator { get; set; }
        public virtual DbSet<V_WO_Issue> V_WO_Issue { get; set; }
        public virtual DbSet<vNCR_DET> vNCR_DET { get; set; }
        public virtual DbSet<vNCR_DET_2> vNCR_DET_2 { get; set; }
        public virtual DbSet<vNCR_HDR> vNCR_HDR { get; set; }
        public virtual DbSet<tbl_Inv_Step4_DirApr> tbl_Inv_Step4_DirApr { get; set; }
        public virtual DbSet<tbl_SOR_Attached_ForItemReview> tbl_SOR_Attached_ForItemReview { get; set; }
        public virtual DbSet<tbl_SOR_Cur_Review_List> tbl_SOR_Cur_Review_List { get; set; }
        public virtual DbSet<tbl_SOR_Family_Setup_Qty> tbl_SOR_Family_Setup_Qty { get; set; }
        public virtual DbSet<tbl_SOR_His_Review_List> tbl_SOR_His_Review_List { get; set; }
        public virtual DbSet<tbl_SOR_Item_Review> tbl_SOR_Item_Review { get; set; }
        public virtual DbSet<tbl_SOR_Review_Pic> tbl_SOR_Review_Pic { get; set; }
        public virtual DbSet<tbl_SOR_Cur_Review_Detail> tbl_SOR_Cur_Review_Detail { get; set; }
        public virtual DbSet<tbl_SOR_His_Review_Detail> tbl_SOR_His_Review_Detail { get; set; }
    
        [DbFunction("Entities", "f_NCR_DET_1")]
        public virtual IQueryable<f_NCR_DET_1_Result> f_NCR_DET_1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<f_NCR_DET_1_Result>("[Entities].[f_NCR_DET_1]()");
        }
    
        [DbFunction("Entities", "SplitString")]
        public virtual IQueryable<SplitString_Result> SplitString(string input, string character)
        {
            var inputParameter = input != null ?
                new ObjectParameter("Input", input) :
                new ObjectParameter("Input", typeof(string));
    
            var characterParameter = character != null ?
                new ObjectParameter("Character", character) :
                new ObjectParameter("Character", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitString_Result>("[Entities].[SplitString](@Input, @Character)", inputParameter, characterParameter);
        }
    
        [DbFunction("Entities", "STRING_SPLIT")]
        public virtual IQueryable<STRING_SPLIT_Result> STRING_SPLIT(string input, string character)
        {
            var inputParameter = input != null ?
                new ObjectParameter("Input", input) :
                new ObjectParameter("Input", typeof(string));
    
            var characterParameter = character != null ?
                new ObjectParameter("Character", character) :
                new ObjectParameter("Character", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<STRING_SPLIT_Result>("[Entities].[STRING_SPLIT](@Input, @Character)", inputParameter, characterParameter);
        }
    
        public virtual int pAQL_Cal(Nullable<double> rec_qty, ObjectParameter sampling)
        {
            var rec_qtyParameter = rec_qty.HasValue ?
                new ObjectParameter("rec_qty", rec_qty) :
                new ObjectParameter("rec_qty", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pAQL_Cal", rec_qtyParameter, sampling);
        }
    
        public virtual ObjectResult<Nullable<int>> pCheck_Login(string user_ID, string pwd, ObjectParameter result)
        {
            var user_IDParameter = user_ID != null ?
                new ObjectParameter("User_ID", user_ID) :
                new ObjectParameter("User_ID", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("Pwd", pwd) :
                new ObjectParameter("Pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("pCheck_Login", user_IDParameter, pwdParameter, result);
        }
    
        public virtual ObjectResult<string> pCheck_PART_INS_REQ(string iTEM, string lAST_DRAW_REV, string lAST_REV, ObjectParameter result)
        {
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var lAST_DRAW_REVParameter = lAST_DRAW_REV != null ?
                new ObjectParameter("LAST_DRAW_REV", lAST_DRAW_REV) :
                new ObjectParameter("LAST_DRAW_REV", typeof(string));
    
            var lAST_REVParameter = lAST_REV != null ?
                new ObjectParameter("LAST_REV", lAST_REV) :
                new ObjectParameter("LAST_REV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("pCheck_PART_INS_REQ", iTEMParameter, lAST_DRAW_REVParameter, lAST_REVParameter, result);
        }
    
        public virtual int pCreate_INS_RESULT(string rEC_RECEIVER, string rEC_REC_LINE, string cS_INSP_STAT, string cS_DOC_REQ, string cS_QUAL, string pART_INS_REQ_AQL_VIS, string pART_INS_REQ_AQL_MEA, string dRAW_REV, string cCN)
        {
            var rEC_RECEIVERParameter = rEC_RECEIVER != null ?
                new ObjectParameter("REC_RECEIVER", rEC_RECEIVER) :
                new ObjectParameter("REC_RECEIVER", typeof(string));
    
            var rEC_REC_LINEParameter = rEC_REC_LINE != null ?
                new ObjectParameter("REC_REC_LINE", rEC_REC_LINE) :
                new ObjectParameter("REC_REC_LINE", typeof(string));
    
            var cS_INSP_STATParameter = cS_INSP_STAT != null ?
                new ObjectParameter("CS_INSP_STAT", cS_INSP_STAT) :
                new ObjectParameter("CS_INSP_STAT", typeof(string));
    
            var cS_DOC_REQParameter = cS_DOC_REQ != null ?
                new ObjectParameter("CS_DOC_REQ", cS_DOC_REQ) :
                new ObjectParameter("CS_DOC_REQ", typeof(string));
    
            var cS_QUALParameter = cS_QUAL != null ?
                new ObjectParameter("CS_QUAL", cS_QUAL) :
                new ObjectParameter("CS_QUAL", typeof(string));
    
            var pART_INS_REQ_AQL_VISParameter = pART_INS_REQ_AQL_VIS != null ?
                new ObjectParameter("PART_INS_REQ_AQL_VIS", pART_INS_REQ_AQL_VIS) :
                new ObjectParameter("PART_INS_REQ_AQL_VIS", typeof(string));
    
            var pART_INS_REQ_AQL_MEAParameter = pART_INS_REQ_AQL_MEA != null ?
                new ObjectParameter("PART_INS_REQ_AQL_MEA", pART_INS_REQ_AQL_MEA) :
                new ObjectParameter("PART_INS_REQ_AQL_MEA", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pCreate_INS_RESULT", rEC_RECEIVERParameter, rEC_REC_LINEParameter, cS_INSP_STATParameter, cS_DOC_REQParameter, cS_QUALParameter, pART_INS_REQ_AQL_VISParameter, pART_INS_REQ_AQL_MEAParameter, dRAW_REVParameter, cCNParameter);
        }
    
        public virtual ObjectResult<pGet_MEASUREMENT_STD_BY_PART_Result> pGet_MEASUREMENT_STD_BY_PART(string rECEIVER, string rEC_LINE, string cCN, string iTEM, string dRAW_REV, string rEV)
        {
            var rECEIVERParameter = rECEIVER != null ?
                new ObjectParameter("RECEIVER", rECEIVER) :
                new ObjectParameter("RECEIVER", typeof(string));
    
            var rEC_LINEParameter = rEC_LINE != null ?
                new ObjectParameter("REC_LINE", rEC_LINE) :
                new ObjectParameter("REC_LINE", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pGet_MEASUREMENT_STD_BY_PART_Result>("pGet_MEASUREMENT_STD_BY_PART", rECEIVERParameter, rEC_LINEParameter, cCNParameter, iTEMParameter, dRAW_REVParameter, rEVParameter);
        }
    
        public virtual ObjectResult<string> pImp_Receiver(ObjectParameter lAST_BATCH)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("pImp_Receiver", lAST_BATCH);
        }
    
        public virtual ObjectResult<string> pImp_Receiver_Auto()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("pImp_Receiver_Auto");
        }
    
        public virtual ObjectResult<string> pImp_Receiver_test(ObjectParameter lAST_BATCH)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("pImp_Receiver_test", lAST_BATCH);
        }
    
        public virtual ObjectResult<pList_CHECKSHEET_by_Reverse_Result> pList_CHECKSHEET_by_Reverse()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pList_CHECKSHEET_by_Reverse_Result>("pList_CHECKSHEET_by_Reverse");
        }
    
        public virtual ObjectResult<pList_CHECKSHEET_by_SearchPartLotDate_Result> pList_CHECKSHEET_by_SearchPartLotDate(string part, string lot, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var partParameter = part != null ?
                new ObjectParameter("Part", part) :
                new ObjectParameter("Part", typeof(string));
    
            var lotParameter = lot != null ?
                new ObjectParameter("Lot", lot) :
                new ObjectParameter("Lot", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pList_CHECKSHEET_by_SearchPartLotDate_Result>("pList_CHECKSHEET_by_SearchPartLotDate", partParameter, lotParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<pList_CHECKSHEET_by_Status_Result> pList_CHECKSHEET_by_Status(string cS_STATUS)
        {
            var cS_STATUSParameter = cS_STATUS != null ?
                new ObjectParameter("CS_STATUS", cS_STATUS) :
                new ObjectParameter("CS_STATUS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pList_CHECKSHEET_by_Status_Result>("pList_CHECKSHEET_by_Status", cS_STATUSParameter);
        }
    
        public virtual ObjectResult<pList_CHECKSHEET_by_Status_Web_Result> pList_CHECKSHEET_by_Status_Web(string cS_STATUS)
        {
            var cS_STATUSParameter = cS_STATUS != null ?
                new ObjectParameter("CS_STATUS", cS_STATUS) :
                new ObjectParameter("CS_STATUS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pList_CHECKSHEET_by_Status_Web_Result>("pList_CHECKSHEET_by_Status_Web", cS_STATUSParameter);
        }
    
        public virtual ObjectResult<pList_Receiver_by_Status_Result> pList_Receiver_by_Status(string rEC_STATUS)
        {
            var rEC_STATUSParameter = rEC_STATUS != null ?
                new ObjectParameter("REC_STATUS", rEC_STATUS) :
                new ObjectParameter("REC_STATUS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pList_Receiver_by_Status_Result>("pList_Receiver_by_Status", rEC_STATUSParameter);
        }
    
        public virtual ObjectResult<string> pManual_Receiver()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("pManual_Receiver");
        }
    
        public virtual ObjectResult<string> pManual_Receiver_ByReceiver(string cCN2, string receiver, string rec_Line)
        {
            var cCN2Parameter = cCN2 != null ?
                new ObjectParameter("CCN2", cCN2) :
                new ObjectParameter("CCN2", typeof(string));
    
            var receiverParameter = receiver != null ?
                new ObjectParameter("Receiver", receiver) :
                new ObjectParameter("Receiver", typeof(string));
    
            var rec_LineParameter = rec_Line != null ?
                new ObjectParameter("Rec_Line", rec_Line) :
                new ObjectParameter("Rec_Line", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("pManual_Receiver_ByReceiver", cCN2Parameter, receiverParameter, rec_LineParameter);
        }
    
        public virtual int pReceiver_Cal(ObjectParameter rec_qty)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pReceiver_Cal", rec_qty);
        }
    
        public virtual ObjectResult<pSKIP_LOT_LEVEL_Result> pSKIP_LOT_LEVEL(string iTEM, string vENDOR, string cCN, ObjectParameter sKIP_LOT_LEVEL, ObjectParameter iNSP_STAT, ObjectParameter lEVEL, ObjectParameter lOT_SKIP)
        {
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var vENDORParameter = vENDOR != null ?
                new ObjectParameter("VENDOR", vENDOR) :
                new ObjectParameter("VENDOR", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSKIP_LOT_LEVEL_Result>("pSKIP_LOT_LEVEL", iTEMParameter, vENDORParameter, cCNParameter, sKIP_LOT_LEVEL, iNSP_STAT, lEVEL, lOT_SKIP);
        }
    
        public virtual int pSKIP_LOT_LEVEL_BK(string iTEM, string vENDOR, string cCN, ObjectParameter sKIP_LOT_LEVEL, ObjectParameter iNSP_STAT, ObjectParameter lEVEL, ObjectParameter lOT_SKIP)
        {
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var vENDORParameter = vENDOR != null ?
                new ObjectParameter("VENDOR", vENDOR) :
                new ObjectParameter("VENDOR", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pSKIP_LOT_LEVEL_BK", iTEMParameter, vENDORParameter, cCNParameter, sKIP_LOT_LEVEL, iNSP_STAT, lEVEL, lOT_SKIP);
        }
    
        public virtual int pUpdate_INS_RESULT(string rEC_RECEIVER, string rEC_REC_LINE, string step, string uSER_, Nullable<System.DateTime> uSER_DATE, string pC_NAME, string result)
        {
            var rEC_RECEIVERParameter = rEC_RECEIVER != null ?
                new ObjectParameter("REC_RECEIVER", rEC_RECEIVER) :
                new ObjectParameter("REC_RECEIVER", typeof(string));
    
            var rEC_REC_LINEParameter = rEC_REC_LINE != null ?
                new ObjectParameter("REC_REC_LINE", rEC_REC_LINE) :
                new ObjectParameter("REC_REC_LINE", typeof(string));
    
            var stepParameter = step != null ?
                new ObjectParameter("step", step) :
                new ObjectParameter("step", typeof(string));
    
            var uSER_Parameter = uSER_ != null ?
                new ObjectParameter("USER_", uSER_) :
                new ObjectParameter("USER_", typeof(string));
    
            var uSER_DATEParameter = uSER_DATE.HasValue ?
                new ObjectParameter("USER_DATE", uSER_DATE) :
                new ObjectParameter("USER_DATE", typeof(System.DateTime));
    
            var pC_NAMEParameter = pC_NAME != null ?
                new ObjectParameter("PC_NAME", pC_NAME) :
                new ObjectParameter("PC_NAME", typeof(string));
    
            var resultParameter = result != null ?
                new ObjectParameter("result", result) :
                new ObjectParameter("result", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pUpdate_INS_RESULT", rEC_RECEIVERParameter, rEC_REC_LINEParameter, stepParameter, uSER_Parameter, uSER_DATEParameter, pC_NAMEParameter, resultParameter);
        }
    
        public virtual int pUpdate_INS_RESULT_WhenChangeSample(string rEC_RECEIVER, string rEC_REC_LINE)
        {
            var rEC_RECEIVERParameter = rEC_RECEIVER != null ?
                new ObjectParameter("REC_RECEIVER", rEC_RECEIVER) :
                new ObjectParameter("REC_RECEIVER", typeof(string));
    
            var rEC_REC_LINEParameter = rEC_REC_LINE != null ?
                new ObjectParameter("REC_REC_LINE", rEC_REC_LINE) :
                new ObjectParameter("REC_REC_LINE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pUpdate_INS_RESULT_WhenChangeSample", rEC_RECEIVERParameter, rEC_REC_LINEParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_ChartH(string part, string lot, string para, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var partParameter = part != null ?
                new ObjectParameter("part", part) :
                new ObjectParameter("part", typeof(string));
    
            var lotParameter = lot != null ?
                new ObjectParameter("lot", lot) :
                new ObjectParameter("lot", typeof(string));
    
            var paraParameter = para != null ?
                new ObjectParameter("para", para) :
                new ObjectParameter("para", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ChartH", partParameter, lotParameter, paraParameter, fromParameter, toParameter);
        }
    
        public virtual int sp_ChartHG(string part, string lot, string para, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var partParameter = part != null ?
                new ObjectParameter("part", part) :
                new ObjectParameter("part", typeof(string));
    
            var lotParameter = lot != null ?
                new ObjectParameter("lot", lot) :
                new ObjectParameter("lot", typeof(string));
    
            var paraParameter = para != null ?
                new ObjectParameter("para", para) :
                new ObjectParameter("para", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ChartHG", partParameter, lotParameter, paraParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<string> sp_CheckAttRequireDOC(string cNN, string iTEM, string dRAW_REV, string rEV)
        {
            var cNNParameter = cNN != null ?
                new ObjectParameter("CNN", cNN) :
                new ObjectParameter("CNN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_CheckAttRequireDOC", cNNParameter, iTEMParameter, dRAW_REVParameter, rEVParameter);
        }
    
        public virtual ObjectResult<string> sp_CheckInputAttRequireDOC(string cNN, string iTEM, string dRAW_REV, string rEV, string rEC, string rEC_LINE)
        {
            var cNNParameter = cNN != null ?
                new ObjectParameter("CNN", cNN) :
                new ObjectParameter("CNN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            var rECParameter = rEC != null ?
                new ObjectParameter("REC", rEC) :
                new ObjectParameter("REC", typeof(string));
    
            var rEC_LINEParameter = rEC_LINE != null ?
                new ObjectParameter("REC_LINE", rEC_LINE) :
                new ObjectParameter("REC_LINE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_CheckInputAttRequireDOC", cNNParameter, iTEMParameter, dRAW_REVParameter, rEVParameter, rECParameter, rEC_LINEParameter);
        }
    
        public virtual int sp_CheckMachine_Skill_Oper(string oper, string mac)
        {
            var operParameter = oper != null ?
                new ObjectParameter("oper", oper) :
                new ObjectParameter("oper", typeof(string));
    
            var macParameter = mac != null ?
                new ObjectParameter("mac", mac) :
                new ObjectParameter("mac", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CheckMachine_Skill_Oper", operParameter, macParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_Delete(string cCN, string receiver, string rec_Line, string part)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var receiverParameter = receiver != null ?
                new ObjectParameter("Receiver", receiver) :
                new ObjectParameter("Receiver", typeof(string));
    
            var rec_LineParameter = rec_Line != null ?
                new ObjectParameter("Rec_Line", rec_Line) :
                new ObjectParameter("Rec_Line", typeof(string));
    
            var partParameter = part != null ?
                new ObjectParameter("Part", part) :
                new ObjectParameter("Part", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Delete", cCNParameter, receiverParameter, rec_LineParameter, partParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_GET_ListNC_Result> sp_GET_ListNC(string cCN, string iTEM, string dRAW_REV, string chuoi)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var chuoiParameter = chuoi != null ?
                new ObjectParameter("Chuoi", chuoi) :
                new ObjectParameter("Chuoi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GET_ListNC_Result>("sp_GET_ListNC", cCNParameter, iTEMParameter, dRAW_REVParameter, chuoiParameter);
        }
    
        public virtual ObjectResult<sp_GET_ListNC_BY_ListNCGroup_Result> sp_GET_ListNC_BY_ListNCGroup(string chuoi)
        {
            var chuoiParameter = chuoi != null ?
                new ObjectParameter("Chuoi", chuoi) :
                new ObjectParameter("Chuoi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GET_ListNC_BY_ListNCGroup_Result>("sp_GET_ListNC_BY_ListNCGroup", chuoiParameter);
        }
    
        public virtual ObjectResult<string> sp_GET_ListTool(string iTEM, string dRAW_REV, string mEASURE_PARA, string rEV, string cCN)
        {
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var mEASURE_PARAParameter = mEASURE_PARA != null ?
                new ObjectParameter("MEASURE_PARA", mEASURE_PARA) :
                new ObjectParameter("MEASURE_PARA", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GET_ListTool", iTEMParameter, dRAW_REVParameter, mEASURE_PARAParameter, rEVParameter, cCNParameter);
        }
    
        public virtual ObjectResult<sp_Get_Part_Result> sp_Get_Part(string cCN, string tYPE)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Get_Part_Result>("sp_Get_Part", cCNParameter, tYPEParameter);
        }
    
        public virtual ObjectResult<sp_getDataReceiver_Defect_Result> sp_getDataReceiver_Defect(string rECEIVER, string rEC_LINE)
        {
            var rECEIVERParameter = rECEIVER != null ?
                new ObjectParameter("RECEIVER", rECEIVER) :
                new ObjectParameter("RECEIVER", typeof(string));
    
            var rEC_LINEParameter = rEC_LINE != null ?
                new ObjectParameter("REC_LINE", rEC_LINE) :
                new ObjectParameter("REC_LINE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getDataReceiver_Defect_Result>("sp_getDataReceiver_Defect", rECEIVERParameter, rEC_LINEParameter);
        }
    
        public virtual int sp_getDataReceiver_Detail(string rECEIVER, string rEC_LINE)
        {
            var rECEIVERParameter = rECEIVER != null ?
                new ObjectParameter("RECEIVER", rECEIVER) :
                new ObjectParameter("RECEIVER", typeof(string));
    
            var rEC_LINEParameter = rEC_LINE != null ?
                new ObjectParameter("REC_LINE", rEC_LINE) :
                new ObjectParameter("REC_LINE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getDataReceiver_Detail", rECEIVERParameter, rEC_LINEParameter);
        }
    
        public virtual ObjectResult<sp_getDataReceiver_NC_Result> sp_getDataReceiver_NC(string rECEIVER, string rEC_LINE, string partialID)
        {
            var rECEIVERParameter = rECEIVER != null ?
                new ObjectParameter("RECEIVER", rECEIVER) :
                new ObjectParameter("RECEIVER", typeof(string));
    
            var rEC_LINEParameter = rEC_LINE != null ?
                new ObjectParameter("REC_LINE", rEC_LINE) :
                new ObjectParameter("REC_LINE", typeof(string));
    
            var partialIDParameter = partialID != null ?
                new ObjectParameter("PartialID", partialID) :
                new ObjectParameter("PartialID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getDataReceiver_NC_Result>("sp_getDataReceiver_NC", rECEIVERParameter, rEC_LINEParameter, partialIDParameter);
        }
    
        public virtual ObjectResult<sp_getDataReceiver_NC_AllPartial_Result> sp_getDataReceiver_NC_AllPartial(string rECEIVER, string rEC_LINE)
        {
            var rECEIVERParameter = rECEIVER != null ?
                new ObjectParameter("RECEIVER", rECEIVER) :
                new ObjectParameter("RECEIVER", typeof(string));
    
            var rEC_LINEParameter = rEC_LINE != null ?
                new ObjectParameter("REC_LINE", rEC_LINE) :
                new ObjectParameter("REC_LINE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getDataReceiver_NC_AllPartial_Result>("sp_getDataReceiver_NC_AllPartial", rECEIVERParameter, rEC_LINEParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_IMPROVEMENT_TRACKING(string nC_STRING, string nCR_STRING)
        {
            var nC_STRINGParameter = nC_STRING != null ?
                new ObjectParameter("NC_STRING", nC_STRING) :
                new ObjectParameter("NC_STRING", typeof(string));
    
            var nCR_STRINGParameter = nCR_STRING != null ?
                new ObjectParameter("NCR_STRING", nCR_STRING) :
                new ObjectParameter("NCR_STRING", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_IMPROVEMENT_TRACKING", nC_STRINGParameter, nCR_STRINGParameter);
        }
    
        public virtual int sp_IMPROVEMENT_TRACKINGAQL(string nC_STRING, string nCR_STRING)
        {
            var nC_STRINGParameter = nC_STRING != null ?
                new ObjectParameter("NC_STRING", nC_STRING) :
                new ObjectParameter("NC_STRING", typeof(string));
    
            var nCR_STRINGParameter = nCR_STRING != null ?
                new ObjectParameter("NCR_STRING", nCR_STRING) :
                new ObjectParameter("NCR_STRING", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_IMPROVEMENT_TRACKINGAQL", nC_STRINGParameter, nCR_STRINGParameter);
        }
    
        public virtual int sp_LAST_DRAW_REV_Update(string cCN, string iTEM, string lAST_DRAW_REV, string lAST_REV)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var lAST_DRAW_REVParameter = lAST_DRAW_REV != null ?
                new ObjectParameter("LAST_DRAW_REV", lAST_DRAW_REV) :
                new ObjectParameter("LAST_DRAW_REV", typeof(string));
    
            var lAST_REVParameter = lAST_REV != null ?
                new ObjectParameter("LAST_REV", lAST_REV) :
                new ObjectParameter("LAST_REV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LAST_DRAW_REV_Update", cCNParameter, iTEMParameter, lAST_DRAW_REVParameter, lAST_REVParameter);
        }
    
        public virtual ObjectResult<sp_LoadNC_Complete_Result> sp_LoadNC_Complete(string rECEIVER, string rECLINE, string cCN)
        {
            var rECEIVERParameter = rECEIVER != null ?
                new ObjectParameter("RECEIVER", rECEIVER) :
                new ObjectParameter("RECEIVER", typeof(string));
    
            var rECLINEParameter = rECLINE != null ?
                new ObjectParameter("RECLINE", rECLINE) :
                new ObjectParameter("RECLINE", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_LoadNC_Complete_Result>("sp_LoadNC_Complete", rECEIVERParameter, rECLINEParameter, cCNParameter);
        }
    
        public virtual ObjectResult<sp_NCR_Number_Infomation_Result> sp_NCR_Number_Infomation(string nCR_NUMBER)
        {
            var nCR_NUMBERParameter = nCR_NUMBER != null ?
                new ObjectParameter("NCR_NUMBER", nCR_NUMBER) :
                new ObjectParameter("NCR_NUMBER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_NCR_Number_Infomation_Result>("sp_NCR_Number_Infomation", nCR_NUMBERParameter);
        }
    
        public virtual ObjectResult<sp_Onesupplier4panelRecQty_Result> sp_Onesupplier4panelRecQty(Nullable<int> year, Nullable<int> month, string vENDOR)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var vENDORParameter = vENDOR != null ?
                new ObjectParameter("VENDOR", vENDOR) :
                new ObjectParameter("VENDOR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Onesupplier4panelRecQty_Result>("sp_Onesupplier4panelRecQty", yearParameter, monthParameter, vENDORParameter);
        }
    
        public virtual ObjectResult<sp_Onesupplier4panelRecQtyDataRaw_Result> sp_Onesupplier4panelRecQtyDataRaw(Nullable<int> year, Nullable<int> month, string vENDOR)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var vENDORParameter = vENDOR != null ?
                new ObjectParameter("VENDOR", vENDOR) :
                new ObjectParameter("VENDOR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Onesupplier4panelRecQtyDataRaw_Result>("sp_Onesupplier4panelRecQtyDataRaw", yearParameter, monthParameter, vENDORParameter);
        }
    
        public virtual ObjectResult<sp_Onesupplier4panelRejQty_Result> sp_Onesupplier4panelRejQty(Nullable<int> year, Nullable<int> month, string vENDOR)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var vENDORParameter = vENDOR != null ?
                new ObjectParameter("VENDOR", vENDOR) :
                new ObjectParameter("VENDOR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Onesupplier4panelRejQty_Result>("sp_Onesupplier4panelRejQty", yearParameter, monthParameter, vENDORParameter);
        }
    
        public virtual int SP_PART_INS_REQ_APPROVE(string cCN, string iTEM, string dRAW_REV, string rEV)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PART_INS_REQ_APPROVE", cCNParameter, iTEMParameter, dRAW_REVParameter, rEVParameter);
        }
    
        public virtual int SP_PART_INS_REQ_APPROVE_USER(string cCN, string iTEM, string dRAW_REV, string rEV, string uSER_APPROVE)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            var uSER_APPROVEParameter = uSER_APPROVE != null ?
                new ObjectParameter("USER_APPROVE", uSER_APPROVE) :
                new ObjectParameter("USER_APPROVE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PART_INS_REQ_APPROVE_USER", cCNParameter, iTEMParameter, dRAW_REVParameter, rEVParameter, uSER_APPROVEParameter);
        }
    
        public virtual int sp_PART_INS_REQ_Insert(string cCN, string iTEM, string dRAW_REV, string rEV, string pOL_GRP, string aQL_VISUAL, string aQL_MEASURE, string sERIAL_CTL, string sKIP_LOT_CTL, string dOC_REQUIRED, string tEST_ROSH_REQUIRED, string uSER_, Nullable<System.DateTime> uSER_DATE, string pC_NAME, string dRAWING_PATH, string uSER_APPROVE)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            var pOL_GRPParameter = pOL_GRP != null ?
                new ObjectParameter("POL_GRP", pOL_GRP) :
                new ObjectParameter("POL_GRP", typeof(string));
    
            var aQL_VISUALParameter = aQL_VISUAL != null ?
                new ObjectParameter("AQL_VISUAL", aQL_VISUAL) :
                new ObjectParameter("AQL_VISUAL", typeof(string));
    
            var aQL_MEASUREParameter = aQL_MEASURE != null ?
                new ObjectParameter("AQL_MEASURE", aQL_MEASURE) :
                new ObjectParameter("AQL_MEASURE", typeof(string));
    
            var sERIAL_CTLParameter = sERIAL_CTL != null ?
                new ObjectParameter("SERIAL_CTL", sERIAL_CTL) :
                new ObjectParameter("SERIAL_CTL", typeof(string));
    
            var sKIP_LOT_CTLParameter = sKIP_LOT_CTL != null ?
                new ObjectParameter("SKIP_LOT_CTL", sKIP_LOT_CTL) :
                new ObjectParameter("SKIP_LOT_CTL", typeof(string));
    
            var dOC_REQUIREDParameter = dOC_REQUIRED != null ?
                new ObjectParameter("DOC_REQUIRED", dOC_REQUIRED) :
                new ObjectParameter("DOC_REQUIRED", typeof(string));
    
            var tEST_ROSH_REQUIREDParameter = tEST_ROSH_REQUIRED != null ?
                new ObjectParameter("TEST_ROSH_REQUIRED", tEST_ROSH_REQUIRED) :
                new ObjectParameter("TEST_ROSH_REQUIRED", typeof(string));
    
            var uSER_Parameter = uSER_ != null ?
                new ObjectParameter("USER_", uSER_) :
                new ObjectParameter("USER_", typeof(string));
    
            var uSER_DATEParameter = uSER_DATE.HasValue ?
                new ObjectParameter("USER_DATE", uSER_DATE) :
                new ObjectParameter("USER_DATE", typeof(System.DateTime));
    
            var pC_NAMEParameter = pC_NAME != null ?
                new ObjectParameter("PC_NAME", pC_NAME) :
                new ObjectParameter("PC_NAME", typeof(string));
    
            var dRAWING_PATHParameter = dRAWING_PATH != null ?
                new ObjectParameter("DRAWING_PATH", dRAWING_PATH) :
                new ObjectParameter("DRAWING_PATH", typeof(string));
    
            var uSER_APPROVEParameter = uSER_APPROVE != null ?
                new ObjectParameter("USER_APPROVE", uSER_APPROVE) :
                new ObjectParameter("USER_APPROVE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PART_INS_REQ_Insert", cCNParameter, iTEMParameter, dRAW_REVParameter, rEVParameter, pOL_GRPParameter, aQL_VISUALParameter, aQL_MEASUREParameter, sERIAL_CTLParameter, sKIP_LOT_CTLParameter, dOC_REQUIREDParameter, tEST_ROSH_REQUIREDParameter, uSER_Parameter, uSER_DATEParameter, pC_NAMEParameter, dRAWING_PATHParameter, uSER_APPROVEParameter);
        }
    
        public virtual ObjectResult<string> sp_PerAccess(string uSERNAME, string fORMID)
        {
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            var fORMIDParameter = fORMID != null ?
                new ObjectParameter("FORMID", fORMID) :
                new ObjectParameter("FORMID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_PerAccess", uSERNAMEParameter, fORMIDParameter);
        }
    
        public virtual int sp_RemindFollowUpBy26Marlow()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RemindFollowUpBy26Marlow");
        }
    
        public virtual int sp_RemindSupplierResponse()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RemindSupplierResponse");
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<sp_Report_LotRejectRate_Result> sp_Report_LotRejectRate(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string part, string supplier)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var partParameter = part != null ?
                new ObjectParameter("Part", part) :
                new ObjectParameter("Part", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Report_LotRejectRate_Result>("sp_Report_LotRejectRate", fromParameter, toParameter, partParameter, supplierParameter);
        }
    
        public virtual ObjectResult<sp_Report_ParetoOfNC_Result> sp_Report_ParetoOfNC(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string part, string sup)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var partParameter = part != null ?
                new ObjectParameter("part", part) :
                new ObjectParameter("part", typeof(string));
    
            var supParameter = sup != null ?
                new ObjectParameter("sup", sup) :
                new ObjectParameter("sup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Report_ParetoOfNC_Result>("sp_Report_ParetoOfNC", fromParameter, toParameter, partParameter, supParameter);
        }
    
        public virtual ObjectResult<sp_Report_Receiver_Result> sp_Report_Receiver(string partNum, string lot, Nullable<System.DateTime> f, Nullable<System.DateTime> t)
        {
            var partNumParameter = partNum != null ?
                new ObjectParameter("PartNum", partNum) :
                new ObjectParameter("PartNum", typeof(string));
    
            var lotParameter = lot != null ?
                new ObjectParameter("Lot", lot) :
                new ObjectParameter("Lot", typeof(string));
    
            var fParameter = f.HasValue ?
                new ObjectParameter("F", f) :
                new ObjectParameter("F", typeof(System.DateTime));
    
            var tParameter = t.HasValue ?
                new ObjectParameter("T", t) :
                new ObjectParameter("T", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Report_Receiver_Result>("sp_Report_Receiver", partNumParameter, lotParameter, fParameter, tParameter);
        }
    
        public virtual ObjectResult<sp_Report_RejectLotBySupplier_Result> sp_Report_RejectLotBySupplier(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string part)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var partParameter = part != null ?
                new ObjectParameter("part", part) :
                new ObjectParameter("part", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Report_RejectLotBySupplier_Result>("sp_Report_RejectLotBySupplier", fromParameter, toParameter, partParameter);
        }
    
        public virtual ObjectResult<sp_Report_RejectPPMbySupplier_Result> sp_Report_RejectPPMbySupplier(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string part)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var partParameter = part != null ?
                new ObjectParameter("Part", part) :
                new ObjectParameter("Part", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Report_RejectPPMbySupplier_Result>("sp_Report_RejectPPMbySupplier", fromParameter, toParameter, partParameter);
        }
    
        public virtual int sp_Report_SamplingPPM(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string part, string supplier)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var partParameter = part != null ?
                new ObjectParameter("Part", part) :
                new ObjectParameter("Part", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Report_SamplingPPM", fromParameter, toParameter, partParameter, supplierParameter);
        }
    
        public virtual ObjectResult<sp_Report_SkiplotvsInspectedlot_Result> sp_Report_SkiplotvsInspectedlot(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string part, string supplier)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var partParameter = part != null ?
                new ObjectParameter("Part", part) :
                new ObjectParameter("Part", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Report_SkiplotvsInspectedlot_Result>("sp_Report_SkiplotvsInspectedlot", fromParameter, toParameter, partParameter, supplierParameter);
        }
    
        public virtual int sp_Reverse(string cCN, string receiver, string rec_Line, string part)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var receiverParameter = receiver != null ?
                new ObjectParameter("Receiver", receiver) :
                new ObjectParameter("Receiver", typeof(string));
    
            var rec_LineParameter = rec_Line != null ?
                new ObjectParameter("Rec_Line", rec_Line) :
                new ObjectParameter("Rec_Line", typeof(string));
    
            var partParameter = part != null ?
                new ObjectParameter("Part", part) :
                new ObjectParameter("Part", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Reverse", cCNParameter, receiverParameter, rec_LineParameter, partParameter);
        }
    
        public virtual int sp_SortNCR_Number(string nCR_NUMBER, string newReceiver)
        {
            var nCR_NUMBERParameter = nCR_NUMBER != null ?
                new ObjectParameter("NCR_NUMBER", nCR_NUMBER) :
                new ObjectParameter("NCR_NUMBER", typeof(string));
    
            var newReceiverParameter = newReceiver != null ?
                new ObjectParameter("NewReceiver", newReceiver) :
                new ObjectParameter("NewReceiver", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SortNCR_Number", nCR_NUMBERParameter, newReceiverParameter);
        }
    
        public virtual ObjectResult<sp_SupplierPPMReportReceiverQTY_Result> sp_SupplierPPMReportReceiverQTY(Nullable<int> year, Nullable<int> month, string vendor)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var vendorParameter = vendor != null ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SupplierPPMReportReceiverQTY_Result>("sp_SupplierPPMReportReceiverQTY", yearParameter, monthParameter, vendorParameter);
        }
    
        public virtual ObjectResult<sp_SupplierPPMReportReceiverQTYDataRaw_Result> sp_SupplierPPMReportReceiverQTYDataRaw(Nullable<int> year, string vendor)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var vendorParameter = vendor != null ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SupplierPPMReportReceiverQTYDataRaw_Result>("sp_SupplierPPMReportReceiverQTYDataRaw", yearParameter, vendorParameter);
        }
    
        public virtual ObjectResult<sp_SupplierPPMReportReceiverQTYNon_Result> sp_SupplierPPMReportReceiverQTYNon(Nullable<int> year, Nullable<int> month, string cCN)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SupplierPPMReportReceiverQTYNon_Result>("sp_SupplierPPMReportReceiverQTYNon", yearParameter, monthParameter, cCNParameter);
        }
    
        public virtual ObjectResult<sp_SupplierPPMReportRejNonStratery_Result> sp_SupplierPPMReportRejNonStratery(Nullable<int> year, Nullable<int> month, string cCN)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SupplierPPMReportRejNonStratery_Result>("sp_SupplierPPMReportRejNonStratery", yearParameter, monthParameter, cCNParameter);
        }
    
        public virtual ObjectResult<sp_SupplierPPMReportRejQTYDataRaw_Result> sp_SupplierPPMReportRejQTYDataRaw(Nullable<int> year, string cCN)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SupplierPPMReportRejQTYDataRaw_Result>("sp_SupplierPPMReportRejQTYDataRaw", yearParameter, cCNParameter);
        }
    
        public virtual ObjectResult<sp_SupplierPPMReportRejStratery_Result> sp_SupplierPPMReportRejStratery(Nullable<int> year, Nullable<int> month, string cCN)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SupplierPPMReportRejStratery_Result>("sp_SupplierPPMReportRejStratery", yearParameter, monthParameter, cCNParameter);
        }
    
        public virtual int sp_TEMP_PDF_PART_Insert(string cCN, string iTEM, string dRAW_REV, string rEV, byte[] dRAW_FILE, string fILE_NAME)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            var dRAW_FILEParameter = dRAW_FILE != null ?
                new ObjectParameter("DRAW_FILE", dRAW_FILE) :
                new ObjectParameter("DRAW_FILE", typeof(byte[]));
    
            var fILE_NAMEParameter = fILE_NAME != null ?
                new ObjectParameter("FILE_NAME", fILE_NAME) :
                new ObjectParameter("FILE_NAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_TEMP_PDF_PART_Insert", cCNParameter, iTEMParameter, dRAW_REVParameter, rEVParameter, dRAW_FILEParameter, fILE_NAMEParameter);
        }
    
        public virtual int sp_TEMP_PDF_PART_Insert_AttachDOC(string cCN, string iTEM, string dRAW_REV, string rEV, byte[] dRAW_FILE, string fILE_NAME, string rECEIVER)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            var dRAW_FILEParameter = dRAW_FILE != null ?
                new ObjectParameter("DRAW_FILE", dRAW_FILE) :
                new ObjectParameter("DRAW_FILE", typeof(byte[]));
    
            var fILE_NAMEParameter = fILE_NAME != null ?
                new ObjectParameter("FILE_NAME", fILE_NAME) :
                new ObjectParameter("FILE_NAME", typeof(string));
    
            var rECEIVERParameter = rECEIVER != null ?
                new ObjectParameter("RECEIVER", rECEIVER) :
                new ObjectParameter("RECEIVER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_TEMP_PDF_PART_Insert_AttachDOC", cCNParameter, iTEMParameter, dRAW_REVParameter, rEVParameter, dRAW_FILEParameter, fILE_NAMEParameter, rECEIVERParameter);
        }
    
        public virtual int sp_TrainferApprovers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_TrainferApprovers");
        }
    
        public virtual int SP_UPDATE_PART_INS_REQ(string cCN, string iTEM, string dRAW_REV, string rEV, string pOL_GRP, string aQL_VISUAL, string aQL_MEASURE, string sERIAL_CTL, string sKIP_LOT_CTL, string dOC_REQUIRED, string tEST_ROSH_REQUIRED, string uSER_, Nullable<System.DateTime> uSER_DATE, string pC_NAME, string dRAWING_PATH, string uSER_APPROVE)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            var pOL_GRPParameter = pOL_GRP != null ?
                new ObjectParameter("POL_GRP", pOL_GRP) :
                new ObjectParameter("POL_GRP", typeof(string));
    
            var aQL_VISUALParameter = aQL_VISUAL != null ?
                new ObjectParameter("AQL_VISUAL", aQL_VISUAL) :
                new ObjectParameter("AQL_VISUAL", typeof(string));
    
            var aQL_MEASUREParameter = aQL_MEASURE != null ?
                new ObjectParameter("AQL_MEASURE", aQL_MEASURE) :
                new ObjectParameter("AQL_MEASURE", typeof(string));
    
            var sERIAL_CTLParameter = sERIAL_CTL != null ?
                new ObjectParameter("SERIAL_CTL", sERIAL_CTL) :
                new ObjectParameter("SERIAL_CTL", typeof(string));
    
            var sKIP_LOT_CTLParameter = sKIP_LOT_CTL != null ?
                new ObjectParameter("SKIP_LOT_CTL", sKIP_LOT_CTL) :
                new ObjectParameter("SKIP_LOT_CTL", typeof(string));
    
            var dOC_REQUIREDParameter = dOC_REQUIRED != null ?
                new ObjectParameter("DOC_REQUIRED", dOC_REQUIRED) :
                new ObjectParameter("DOC_REQUIRED", typeof(string));
    
            var tEST_ROSH_REQUIREDParameter = tEST_ROSH_REQUIRED != null ?
                new ObjectParameter("TEST_ROSH_REQUIRED", tEST_ROSH_REQUIRED) :
                new ObjectParameter("TEST_ROSH_REQUIRED", typeof(string));
    
            var uSER_Parameter = uSER_ != null ?
                new ObjectParameter("USER_", uSER_) :
                new ObjectParameter("USER_", typeof(string));
    
            var uSER_DATEParameter = uSER_DATE.HasValue ?
                new ObjectParameter("USER_DATE", uSER_DATE) :
                new ObjectParameter("USER_DATE", typeof(System.DateTime));
    
            var pC_NAMEParameter = pC_NAME != null ?
                new ObjectParameter("PC_NAME", pC_NAME) :
                new ObjectParameter("PC_NAME", typeof(string));
    
            var dRAWING_PATHParameter = dRAWING_PATH != null ?
                new ObjectParameter("DRAWING_PATH", dRAWING_PATH) :
                new ObjectParameter("DRAWING_PATH", typeof(string));
    
            var uSER_APPROVEParameter = uSER_APPROVE != null ?
                new ObjectParameter("USER_APPROVE", uSER_APPROVE) :
                new ObjectParameter("USER_APPROVE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_PART_INS_REQ", cCNParameter, iTEMParameter, dRAW_REVParameter, rEVParameter, pOL_GRPParameter, aQL_VISUALParameter, aQL_MEASUREParameter, sERIAL_CTLParameter, sKIP_LOT_CTLParameter, dOC_REQUIREDParameter, tEST_ROSH_REQUIREDParameter, uSER_Parameter, uSER_DATEParameter, pC_NAMEParameter, dRAWING_PATHParameter, uSER_APPROVEParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int spSendEmail(string profile_name, string recipients, string copy_recipients, string body, string body_format, string subject, string file_attachments)
        {
            var profile_nameParameter = profile_name != null ?
                new ObjectParameter("profile_name", profile_name) :
                new ObjectParameter("profile_name", typeof(string));
    
            var recipientsParameter = recipients != null ?
                new ObjectParameter("recipients", recipients) :
                new ObjectParameter("recipients", typeof(string));
    
            var copy_recipientsParameter = copy_recipients != null ?
                new ObjectParameter("copy_recipients", copy_recipients) :
                new ObjectParameter("copy_recipients", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("body", body) :
                new ObjectParameter("body", typeof(string));
    
            var body_formatParameter = body_format != null ?
                new ObjectParameter("body_format", body_format) :
                new ObjectParameter("body_format", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var file_attachmentsParameter = file_attachments != null ?
                new ObjectParameter("file_attachments", file_attachments) :
                new ObjectParameter("file_attachments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSendEmail", profile_nameParameter, recipientsParameter, copy_recipientsParameter, bodyParameter, body_formatParameter, subjectParameter, file_attachmentsParameter);
        }
    
        public virtual ObjectResult<string> VisualResult_Search_Item(string item, string lot)
        {
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var lotParameter = lot != null ?
                new ObjectParameter("Lot", lot) :
                new ObjectParameter("Lot", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("VisualResult_Search_Item", itemParameter, lotParameter);
        }
    
        public virtual int pClearSample()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pClearSample");
        }
    
        public virtual int sp_getDataReceiver_Detail_CCN(string rECEIVER, string rEC_LINE, string cCN)
        {
            var rECEIVERParameter = rECEIVER != null ?
                new ObjectParameter("RECEIVER", rECEIVER) :
                new ObjectParameter("RECEIVER", typeof(string));
    
            var rEC_LINEParameter = rEC_LINE != null ?
                new ObjectParameter("REC_LINE", rEC_LINE) :
                new ObjectParameter("REC_LINE", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getDataReceiver_Detail_CCN", rECEIVERParameter, rEC_LINEParameter, cCNParameter);
        }
    
        public virtual int sp_ReportWHOpenNCRforMRBmeeting()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ReportWHOpenNCRforMRBmeeting");
        }
    
        public virtual ObjectResult<sp_Report_LotRejectRateTest_Result> sp_Report_LotRejectRateTest(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string part, string supplier)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var partParameter = part != null ?
                new ObjectParameter("Part", part) :
                new ObjectParameter("Part", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Report_LotRejectRateTest_Result>("sp_Report_LotRejectRateTest", fromParameter, toParameter, partParameter, supplierParameter);
        }
    
        public virtual ObjectResult<sp_Report_PPMByPart_Result> sp_Report_PPMByPart(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string part, string cCN)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var partParameter = part != null ?
                new ObjectParameter("Part", part) :
                new ObjectParameter("Part", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Report_PPMByPart_Result>("sp_Report_PPMByPart", fromParameter, toParameter, partParameter, cCNParameter);
        }
    
        public virtual ObjectResult<sp_GetNCRAging_Result1> sp_GetNCRAging()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetNCRAging_Result1>("sp_GetNCRAging");
        }
    
        public virtual ObjectResult<GetUserByRoleGroupId_Result> GetUserByRoleGroupId(string roleid)
        {
            var roleidParameter = roleid != null ?
                new ObjectParameter("roleid", roleid) :
                new ObjectParameter("roleid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserByRoleGroupId_Result>("GetUserByRoleGroupId", roleidParameter);
        }
    
        public virtual ObjectResult<sp_GetListSubmitNCRbyUser_Result> sp_GetListSubmitNCRbyUser(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetListSubmitNCRbyUser_Result>("sp_GetListSubmitNCRbyUser", userIdParameter);
        }
    
        public virtual int sp_RemindSubmitNCR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RemindSubmitNCR");
        }
    
        public virtual int sp_RemindApprovalNCR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RemindApprovalNCR");
        }
    
        public virtual int sp_RemindCompleteTaskNCR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RemindCompleteTaskNCR");
        }
    
        public virtual int sp_RemindDispositionNCR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RemindDispositionNCR");
        }
    
        public virtual int sp_RemindNCRValue10k()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RemindNCRValue10k");
        }
    
        public virtual int sp_RemindNCRValue10k30k()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RemindNCRValue10k30k");
        }
    
        public virtual int sp_RemindNCRValue30k()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RemindNCRValue30k");
        }
    
        public virtual int sp_SentMailMeetingPublish(string minutenum)
        {
            var minutenumParameter = minutenum != null ?
                new ObjectParameter("Minutenum", minutenum) :
                new ObjectParameter("Minutenum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SentMailMeetingPublish", minutenumParameter);
        }
    
        public virtual ObjectResult<getlistwaittingScar_Result> getlistwaittingScar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getlistwaittingScar_Result>("getlistwaittingScar");
        }
    
        public virtual int sp_SentMailSubmitProducTranfer(string iduser, string email)
        {
            var iduserParameter = iduser != null ?
                new ObjectParameter("iduser", iduser) :
                new ObjectParameter("iduser", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SentMailSubmitProducTranfer", iduserParameter, emailParameter);
        }
    
        public virtual int sp_SentmailVnOwer(string part, string email)
        {
            var partParameter = part != null ?
                new ObjectParameter("part", part) :
                new ObjectParameter("part", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SentmailVnOwer", partParameter, emailParameter);
        }
    
        public virtual int sp_Inv_SentmailSubmitTasKProductTranfer(string part, string iduser)
        {
            var partParameter = part != null ?
                new ObjectParameter("part", part) :
                new ObjectParameter("part", typeof(string));
    
            var iduserParameter = iduser != null ?
                new ObjectParameter("iduser", iduser) :
                new ObjectParameter("iduser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Inv_SentmailSubmitTasKProductTranfer", partParameter, iduserParameter);
        }
    
        public virtual ObjectResult<p_AgingTimeAQL_Parts_Result> p_AgingTimeAQL_Parts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_AgingTimeAQL_Parts_Result>("p_AgingTimeAQL_Parts");
        }
    
        public virtual ObjectResult<p_AgingTimeAQL_Parts_Detail_Result> p_AgingTimeAQL_Parts_Detail(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_AgingTimeAQL_Parts_Detail_Result>("p_AgingTimeAQL_Parts_Detail", dateParameter);
        }
    
        public virtual ObjectResult<p_AgingTimeNCR_Parts_Result> p_AgingTimeNCR_Parts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_AgingTimeNCR_Parts_Result>("p_AgingTimeNCR_Parts");
        }
    
        public virtual ObjectResult<p_AgingTimeNCR_Parts_Detail_Result> p_AgingTimeNCR_Parts_Detail(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_AgingTimeNCR_Parts_Detail_Result>("p_AgingTimeNCR_Parts_Detail", dateParameter);
        }
    
        public virtual ObjectResult<p_DOC_by_PO_View_Result> p_DOC_by_PO_View(Nullable<System.DateTime> f, Nullable<System.DateTime> t)
        {
            var fParameter = f.HasValue ?
                new ObjectParameter("f", f) :
                new ObjectParameter("f", typeof(System.DateTime));
    
            var tParameter = t.HasValue ?
                new ObjectParameter("t", t) :
                new ObjectParameter("t", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_DOC_by_PO_View_Result>("p_DOC_by_PO_View", fParameter, tParameter);
        }
    
        public virtual int p_merge_DESCRIPTION_Temp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_DESCRIPTION_Temp");
        }
    
        public virtual int p_merge_OTD_Report()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_OTD_Report");
        }
    
        public virtual int p_merge_PO_Need_CoC_4_IQC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_PO_Need_CoC_4_IQC");
        }
    
        public virtual int p_merge_STDCOST()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_STDCOST");
        }
    
        public virtual int p_merge_VENDOR_Temp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_VENDOR_Temp");
        }
    
        public virtual ObjectResult<pChartTaskOfEmp_Result> pChartTaskOfEmp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pChartTaskOfEmp_Result>("pChartTaskOfEmp");
        }
    
        public virtual ObjectResult<string> pImp_ReceiverOrg(ObjectParameter lAST_BATCH)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("pImp_ReceiverOrg", lAST_BATCH);
        }
    
        public virtual int pList_CHECKSHEET_Update_PriorityAndAssign(string cS_STATUS)
        {
            var cS_STATUSParameter = cS_STATUS != null ?
                new ObjectParameter("CS_STATUS", cS_STATUS) :
                new ObjectParameter("CS_STATUS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pList_CHECKSHEET_Update_PriorityAndAssign", cS_STATUSParameter);
        }
    
        public virtual ObjectResult<pList_Shorted_Result> pList_Shorted()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pList_Shorted_Result>("pList_Shorted");
        }
    
        public virtual int sp_ATTACHMENT_Insert(string rECEIVER, string rEC_LINE, string fILE_NAME, string aTT_FILE, string uSER_, Nullable<System.DateTime> uSER_DATE, string pC_NAME, string tYPE_REQ, Nullable<System.DateTime> entryDate, string operatorID, string remark, string result, string cCN, Nullable<int> status)
        {
            var rECEIVERParameter = rECEIVER != null ?
                new ObjectParameter("RECEIVER", rECEIVER) :
                new ObjectParameter("RECEIVER", typeof(string));
    
            var rEC_LINEParameter = rEC_LINE != null ?
                new ObjectParameter("REC_LINE", rEC_LINE) :
                new ObjectParameter("REC_LINE", typeof(string));
    
            var fILE_NAMEParameter = fILE_NAME != null ?
                new ObjectParameter("FILE_NAME", fILE_NAME) :
                new ObjectParameter("FILE_NAME", typeof(string));
    
            var aTT_FILEParameter = aTT_FILE != null ?
                new ObjectParameter("ATT_FILE", aTT_FILE) :
                new ObjectParameter("ATT_FILE", typeof(string));
    
            var uSER_Parameter = uSER_ != null ?
                new ObjectParameter("USER_", uSER_) :
                new ObjectParameter("USER_", typeof(string));
    
            var uSER_DATEParameter = uSER_DATE.HasValue ?
                new ObjectParameter("USER_DATE", uSER_DATE) :
                new ObjectParameter("USER_DATE", typeof(System.DateTime));
    
            var pC_NAMEParameter = pC_NAME != null ?
                new ObjectParameter("PC_NAME", pC_NAME) :
                new ObjectParameter("PC_NAME", typeof(string));
    
            var tYPE_REQParameter = tYPE_REQ != null ?
                new ObjectParameter("TYPE_REQ", tYPE_REQ) :
                new ObjectParameter("TYPE_REQ", typeof(string));
    
            var entryDateParameter = entryDate.HasValue ?
                new ObjectParameter("EntryDate", entryDate) :
                new ObjectParameter("EntryDate", typeof(System.DateTime));
    
            var operatorIDParameter = operatorID != null ?
                new ObjectParameter("OperatorID", operatorID) :
                new ObjectParameter("OperatorID", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ATTACHMENT_Insert", rECEIVERParameter, rEC_LINEParameter, fILE_NAMEParameter, aTT_FILEParameter, uSER_Parameter, uSER_DATEParameter, pC_NAMEParameter, tYPE_REQParameter, entryDateParameter, operatorIDParameter, remarkParameter, resultParameter, cCNParameter, statusParameter);
        }
    
        public virtual int sp_autoGetDOC(string cCN, string iTEM, string pO, string pOLine, string vENDOR, string inspector, string drawREV, string rev, string receiver, string recline, string pc)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var pOParameter = pO != null ?
                new ObjectParameter("PO", pO) :
                new ObjectParameter("PO", typeof(string));
    
            var pOLineParameter = pOLine != null ?
                new ObjectParameter("POLine", pOLine) :
                new ObjectParameter("POLine", typeof(string));
    
            var vENDORParameter = vENDOR != null ?
                new ObjectParameter("VENDOR", vENDOR) :
                new ObjectParameter("VENDOR", typeof(string));
    
            var inspectorParameter = inspector != null ?
                new ObjectParameter("inspector", inspector) :
                new ObjectParameter("inspector", typeof(string));
    
            var drawREVParameter = drawREV != null ?
                new ObjectParameter("drawREV", drawREV) :
                new ObjectParameter("drawREV", typeof(string));
    
            var revParameter = rev != null ?
                new ObjectParameter("rev", rev) :
                new ObjectParameter("rev", typeof(string));
    
            var receiverParameter = receiver != null ?
                new ObjectParameter("receiver", receiver) :
                new ObjectParameter("receiver", typeof(string));
    
            var reclineParameter = recline != null ?
                new ObjectParameter("recline", recline) :
                new ObjectParameter("recline", typeof(string));
    
            var pcParameter = pc != null ?
                new ObjectParameter("pc", pc) :
                new ObjectParameter("pc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_autoGetDOC", cCNParameter, iTEMParameter, pOParameter, pOLineParameter, vENDORParameter, inspectorParameter, drawREVParameter, revParameter, receiverParameter, reclineParameter, pcParameter);
        }
    
        public virtual int sp_ChangeUncomplete(string cCN, string receiver, string rec_Line)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var receiverParameter = receiver != null ?
                new ObjectParameter("Receiver", receiver) :
                new ObjectParameter("Receiver", typeof(string));
    
            var rec_LineParameter = rec_Line != null ?
                new ObjectParameter("Rec_Line", rec_Line) :
                new ObjectParameter("Rec_Line", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ChangeUncomplete", cCNParameter, receiverParameter, rec_LineParameter);
        }
    
        public virtual int sp_Dashboard_PerformanceIQC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Dashboard_PerformanceIQC");
        }
    
        public virtual ObjectResult<sp_DOC_by_ITEM_Result> sp_DOC_by_ITEM(string item)
        {
            var itemParameter = item != null ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DOC_by_ITEM_Result>("sp_DOC_by_ITEM", itemParameter);
        }
    
        public virtual int sp_DOC_by_ITEM_Insert(string item, string vendorName, string vendorNo, string cCN, string requiredDOC, string pathDOC, Nullable<System.DateTime> expiredDate, string uploadUser)
        {
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var vendorNameParameter = vendorName != null ?
                new ObjectParameter("VendorName", vendorName) :
                new ObjectParameter("VendorName", typeof(string));
    
            var vendorNoParameter = vendorNo != null ?
                new ObjectParameter("VendorNo", vendorNo) :
                new ObjectParameter("VendorNo", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var requiredDOCParameter = requiredDOC != null ?
                new ObjectParameter("RequiredDOC", requiredDOC) :
                new ObjectParameter("RequiredDOC", typeof(string));
    
            var pathDOCParameter = pathDOC != null ?
                new ObjectParameter("PathDOC", pathDOC) :
                new ObjectParameter("PathDOC", typeof(string));
    
            var expiredDateParameter = expiredDate.HasValue ?
                new ObjectParameter("ExpiredDate", expiredDate) :
                new ObjectParameter("ExpiredDate", typeof(System.DateTime));
    
            var uploadUserParameter = uploadUser != null ?
                new ObjectParameter("UploadUser", uploadUser) :
                new ObjectParameter("UploadUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_ITEM_Insert", itemParameter, vendorNameParameter, vendorNoParameter, cCNParameter, requiredDOCParameter, pathDOCParameter, expiredDateParameter, uploadUserParameter);
        }
    
        public virtual int sp_DOC_by_ITEM_Reject(string item, string vendorNo, string cCN, string requiredDOC)
        {
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var vendorNoParameter = vendorNo != null ?
                new ObjectParameter("VendorNo", vendorNo) :
                new ObjectParameter("VendorNo", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var requiredDOCParameter = requiredDOC != null ?
                new ObjectParameter("RequiredDOC", requiredDOC) :
                new ObjectParameter("RequiredDOC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_ITEM_Reject", itemParameter, vendorNoParameter, cCNParameter, requiredDOCParameter);
        }
    
        public virtual int sp_DOC_by_ITEM_Verify(string item, string vendorNo, string cCN, string requiredDOC, string verifiedDocUser)
        {
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var vendorNoParameter = vendorNo != null ?
                new ObjectParameter("VendorNo", vendorNo) :
                new ObjectParameter("VendorNo", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var requiredDOCParameter = requiredDOC != null ?
                new ObjectParameter("RequiredDOC", requiredDOC) :
                new ObjectParameter("RequiredDOC", typeof(string));
    
            var verifiedDocUserParameter = verifiedDocUser != null ?
                new ObjectParameter("VerifiedDocUser", verifiedDocUser) :
                new ObjectParameter("VerifiedDocUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_ITEM_Verify", itemParameter, vendorNoParameter, cCNParameter, requiredDOCParameter, verifiedDocUserParameter);
        }
    
        public virtual ObjectResult<sp_DOC_by_PO_Reject_Result> sp_DOC_by_PO_Reject(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DOC_by_PO_Reject_Result>("sp_DOC_by_PO_Reject", iDParameter);
        }
    
        public virtual int sp_DOC_by_PO_Upload(Nullable<int> iD, string pathDOC, string uploadUser)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var pathDOCParameter = pathDOC != null ?
                new ObjectParameter("PathDOC", pathDOC) :
                new ObjectParameter("PathDOC", typeof(string));
    
            var uploadUserParameter = uploadUser != null ?
                new ObjectParameter("UploadUser", uploadUser) :
                new ObjectParameter("UploadUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_PO_Upload", iDParameter, pathDOCParameter, uploadUserParameter);
        }
    
        public virtual int sp_DOC_by_PO_Verify(Nullable<int> iD, string verifiedDocUser)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verifiedDocUserParameter = verifiedDocUser != null ?
                new ObjectParameter("VerifiedDocUser", verifiedDocUser) :
                new ObjectParameter("VerifiedDocUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_PO_Verify", iDParameter, verifiedDocUserParameter);
        }
    
        public virtual ObjectResult<sp_Export_GuideLine_Result> sp_Export_GuideLine(string cCN, string iTEM, string drawREV, string rEV)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var drawREVParameter = drawREV != null ?
                new ObjectParameter("DrawREV", drawREV) :
                new ObjectParameter("DrawREV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Export_GuideLine_Result>("sp_Export_GuideLine", cCNParameter, iTEMParameter, drawREVParameter, rEVParameter);
        }
    
        public virtual ObjectResult<sp_Get_ListPart_Approve_Result> sp_Get_ListPart_Approve(string cCN, string iTEM, string dRAW_REV, string rEV, string approve)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            var approveParameter = approve != null ?
                new ObjectParameter("Approve", approve) :
                new ObjectParameter("Approve", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Get_ListPart_Approve_Result>("sp_Get_ListPart_Approve", cCNParameter, iTEMParameter, dRAW_REVParameter, rEVParameter, approveParameter);
        }
    
        public virtual ObjectResult<string> sp_getListDOC_ITEM(string item)
        {
            var itemParameter = item != null ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_getListDOC_ITEM", itemParameter);
        }
    
        public virtual ObjectResult<sp_getListITEM_CCN_Result> sp_getListITEM_CCN(string ccn)
        {
            var ccnParameter = ccn != null ?
                new ObjectParameter("ccn", ccn) :
                new ObjectParameter("ccn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getListITEM_CCN_Result>("sp_getListITEM_CCN", ccnParameter);
        }
    
        public virtual ObjectResult<sp_getListVENDOR_ITEM_Result> sp_getListVENDOR_ITEM(string item)
        {
            var itemParameter = item != null ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getListVENDOR_ITEM_Result>("sp_getListVENDOR_ITEM", itemParameter);
        }
    
        public virtual ObjectResult<string> sp_GetPartOTD(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GetPartOTD", fromParameter, toParameter);
        }
    
        public virtual int sp_GetSupplier(string type, Nullable<System.DateTime> f, Nullable<System.DateTime> t)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var fParameter = f.HasValue ?
                new ObjectParameter("f", f) :
                new ObjectParameter("f", typeof(System.DateTime));
    
            var tParameter = t.HasValue ?
                new ObjectParameter("t", t) :
                new ObjectParameter("t", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetSupplier", typeParameter, fParameter, tParameter);
        }
    
        public virtual int sp_GetSupplierOTD(string type, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetSupplierOTD", typeParameter, fromParameter, toParameter);
        }
    
        public virtual int sp_Import_VENDOR(string cCN, string vENDOR, string pUR_LOC, string vEN_NAM, string aDDRESS, string sTATE, string zIP, string cTRY, string cONTACT, string eMAIL, string fAX, string tEL)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var vENDORParameter = vENDOR != null ?
                new ObjectParameter("VENDOR", vENDOR) :
                new ObjectParameter("VENDOR", typeof(string));
    
            var pUR_LOCParameter = pUR_LOC != null ?
                new ObjectParameter("PUR_LOC", pUR_LOC) :
                new ObjectParameter("PUR_LOC", typeof(string));
    
            var vEN_NAMParameter = vEN_NAM != null ?
                new ObjectParameter("VEN_NAM", vEN_NAM) :
                new ObjectParameter("VEN_NAM", typeof(string));
    
            var aDDRESSParameter = aDDRESS != null ?
                new ObjectParameter("ADDRESS", aDDRESS) :
                new ObjectParameter("ADDRESS", typeof(string));
    
            var sTATEParameter = sTATE != null ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(string));
    
            var zIPParameter = zIP != null ?
                new ObjectParameter("ZIP", zIP) :
                new ObjectParameter("ZIP", typeof(string));
    
            var cTRYParameter = cTRY != null ?
                new ObjectParameter("CTRY", cTRY) :
                new ObjectParameter("CTRY", typeof(string));
    
            var cONTACTParameter = cONTACT != null ?
                new ObjectParameter("CONTACT", cONTACT) :
                new ObjectParameter("CONTACT", typeof(string));
    
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var fAXParameter = fAX != null ?
                new ObjectParameter("FAX", fAX) :
                new ObjectParameter("FAX", typeof(string));
    
            var tELParameter = tEL != null ?
                new ObjectParameter("TEL", tEL) :
                new ObjectParameter("TEL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Import_VENDOR", cCNParameter, vENDORParameter, pUR_LOCParameter, vEN_NAMParameter, aDDRESSParameter, sTATEParameter, zIPParameter, cTRYParameter, cONTACTParameter, eMAILParameter, fAXParameter, tELParameter);
        }
    
        public virtual int sp_Import_VN_MATERIAL_SHORTAGE_4_DASHBOARD(string wC, string item, string wONum, Nullable<decimal> orderQty, Nullable<decimal> completedQty, Nullable<System.DateTime> openDate, Nullable<System.DateTime> startDate, Nullable<System.DateTime> dueDate, string componentPart, string componentDescription, string flrStk, string anlst, string uM, Nullable<decimal> reqrdQty, Nullable<decimal> commQty, Nullable<decimal> issueQty, Nullable<decimal> sHORTQty, Nullable<decimal> totalOnHand, string shortage, Nullable<decimal> balanceRemains, Nullable<decimal> totalINSRIN, Nullable<decimal> totalVNSTK, Nullable<decimal> totalFLRSTK, Nullable<decimal> totalVNFIN, string wOstatus)
        {
            var wCParameter = wC != null ?
                new ObjectParameter("WC", wC) :
                new ObjectParameter("WC", typeof(string));
    
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var wONumParameter = wONum != null ?
                new ObjectParameter("WONum", wONum) :
                new ObjectParameter("WONum", typeof(string));
    
            var orderQtyParameter = orderQty.HasValue ?
                new ObjectParameter("OrderQty", orderQty) :
                new ObjectParameter("OrderQty", typeof(decimal));
    
            var completedQtyParameter = completedQty.HasValue ?
                new ObjectParameter("CompletedQty", completedQty) :
                new ObjectParameter("CompletedQty", typeof(decimal));
    
            var openDateParameter = openDate.HasValue ?
                new ObjectParameter("OpenDate", openDate) :
                new ObjectParameter("OpenDate", typeof(System.DateTime));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var dueDateParameter = dueDate.HasValue ?
                new ObjectParameter("DueDate", dueDate) :
                new ObjectParameter("DueDate", typeof(System.DateTime));
    
            var componentPartParameter = componentPart != null ?
                new ObjectParameter("ComponentPart", componentPart) :
                new ObjectParameter("ComponentPart", typeof(string));
    
            var componentDescriptionParameter = componentDescription != null ?
                new ObjectParameter("ComponentDescription", componentDescription) :
                new ObjectParameter("ComponentDescription", typeof(string));
    
            var flrStkParameter = flrStk != null ?
                new ObjectParameter("FlrStk", flrStk) :
                new ObjectParameter("FlrStk", typeof(string));
    
            var anlstParameter = anlst != null ?
                new ObjectParameter("Anlst", anlst) :
                new ObjectParameter("Anlst", typeof(string));
    
            var uMParameter = uM != null ?
                new ObjectParameter("UM", uM) :
                new ObjectParameter("UM", typeof(string));
    
            var reqrdQtyParameter = reqrdQty.HasValue ?
                new ObjectParameter("ReqrdQty", reqrdQty) :
                new ObjectParameter("ReqrdQty", typeof(decimal));
    
            var commQtyParameter = commQty.HasValue ?
                new ObjectParameter("CommQty", commQty) :
                new ObjectParameter("CommQty", typeof(decimal));
    
            var issueQtyParameter = issueQty.HasValue ?
                new ObjectParameter("IssueQty", issueQty) :
                new ObjectParameter("IssueQty", typeof(decimal));
    
            var sHORTQtyParameter = sHORTQty.HasValue ?
                new ObjectParameter("SHORTQty", sHORTQty) :
                new ObjectParameter("SHORTQty", typeof(decimal));
    
            var totalOnHandParameter = totalOnHand.HasValue ?
                new ObjectParameter("TotalOnHand", totalOnHand) :
                new ObjectParameter("TotalOnHand", typeof(decimal));
    
            var shortageParameter = shortage != null ?
                new ObjectParameter("shortage", shortage) :
                new ObjectParameter("shortage", typeof(string));
    
            var balanceRemainsParameter = balanceRemains.HasValue ?
                new ObjectParameter("BalanceRemains", balanceRemains) :
                new ObjectParameter("BalanceRemains", typeof(decimal));
    
            var totalINSRINParameter = totalINSRIN.HasValue ?
                new ObjectParameter("TotalINSRIN", totalINSRIN) :
                new ObjectParameter("TotalINSRIN", typeof(decimal));
    
            var totalVNSTKParameter = totalVNSTK.HasValue ?
                new ObjectParameter("TotalVNSTK", totalVNSTK) :
                new ObjectParameter("TotalVNSTK", typeof(decimal));
    
            var totalFLRSTKParameter = totalFLRSTK.HasValue ?
                new ObjectParameter("TotalFLRSTK", totalFLRSTK) :
                new ObjectParameter("TotalFLRSTK", typeof(decimal));
    
            var totalVNFINParameter = totalVNFIN.HasValue ?
                new ObjectParameter("TotalVNFIN", totalVNFIN) :
                new ObjectParameter("TotalVNFIN", typeof(decimal));
    
            var wOstatusParameter = wOstatus != null ?
                new ObjectParameter("WOstatus", wOstatus) :
                new ObjectParameter("WOstatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Import_VN_MATERIAL_SHORTAGE_4_DASHBOARD", wCParameter, itemParameter, wONumParameter, orderQtyParameter, completedQtyParameter, openDateParameter, startDateParameter, dueDateParameter, componentPartParameter, componentDescriptionParameter, flrStkParameter, anlstParameter, uMParameter, reqrdQtyParameter, commQtyParameter, issueQtyParameter, sHORTQtyParameter, totalOnHandParameter, shortageParameter, balanceRemainsParameter, totalINSRINParameter, totalVNSTKParameter, totalFLRSTKParameter, totalVNFINParameter, wOstatusParameter);
        }
    
        public virtual int sp_PART_REJECT_Insert(string cCN, string iTEM, string dRAW_REV, string rEV, string user, string com)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var comParameter = com != null ?
                new ObjectParameter("com", com) :
                new ObjectParameter("com", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PART_REJECT_Insert", cCNParameter, iTEMParameter, dRAW_REVParameter, rEVParameter, userParameter, comParameter);
        }
    
        public virtual int sp_RemindCompleteTask_Not_NCR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RemindCompleteTask_Not_NCR");
        }
    
        public virtual int sp_RemindNCRValue45k()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RemindNCRValue45k");
        }
    
        public virtual ObjectResult<sp_Report_MonthIQC_TEM_Result> sp_Report_MonthIQC_TEM(Nullable<System.DateTime> f, Nullable<System.DateTime> t)
        {
            var fParameter = f.HasValue ?
                new ObjectParameter("f", f) :
                new ObjectParameter("f", typeof(System.DateTime));
    
            var tParameter = t.HasValue ?
                new ObjectParameter("t", t) :
                new ObjectParameter("t", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Report_MonthIQC_TEM_Result>("sp_Report_MonthIQC_TEM", fParameter, tParameter);
        }
    
        public virtual int sp_Report_OTD_Supplier_byMonth(string viewBy, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string supType, string sup, string part)
        {
            var viewByParameter = viewBy != null ?
                new ObjectParameter("ViewBy", viewBy) :
                new ObjectParameter("ViewBy", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var supTypeParameter = supType != null ?
                new ObjectParameter("SupType", supType) :
                new ObjectParameter("SupType", typeof(string));
    
            var supParameter = sup != null ?
                new ObjectParameter("Sup", sup) :
                new ObjectParameter("Sup", typeof(string));
    
            var partParameter = part != null ?
                new ObjectParameter("Part", part) :
                new ObjectParameter("Part", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Report_OTD_Supplier_byMonth", viewByParameter, fromParameter, toParameter, supTypeParameter, supParameter, partParameter);
        }
    
        public virtual ObjectResult<sp_Report_PPM_Supplier_byMonth_Result> sp_Report_PPM_Supplier_byMonth(string viewBy, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string supType, string sup, string part)
        {
            var viewByParameter = viewBy != null ?
                new ObjectParameter("ViewBy", viewBy) :
                new ObjectParameter("ViewBy", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var supTypeParameter = supType != null ?
                new ObjectParameter("SupType", supType) :
                new ObjectParameter("SupType", typeof(string));
    
            var supParameter = sup != null ?
                new ObjectParameter("Sup", sup) :
                new ObjectParameter("Sup", typeof(string));
    
            var partParameter = part != null ?
                new ObjectParameter("Part", part) :
                new ObjectParameter("Part", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Report_PPM_Supplier_byMonth_Result>("sp_Report_PPM_Supplier_byMonth", viewByParameter, fromParameter, toParameter, supTypeParameter, supParameter, partParameter);
        }
    
        public virtual ObjectResult<sp_ReportWHOpenNCRforMRBmeeting_R02_Result> sp_ReportWHOpenNCRforMRBmeeting_R02()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ReportWHOpenNCRforMRBmeeting_R02_Result>("sp_ReportWHOpenNCRforMRBmeeting_R02");
        }
    
        public virtual int sp_Update_Assign(string rEC_RECEIVER, string rEC_REC_LINE, string cCN, string prio, string uSER_, string note)
        {
            var rEC_RECEIVERParameter = rEC_RECEIVER != null ?
                new ObjectParameter("REC_RECEIVER", rEC_RECEIVER) :
                new ObjectParameter("REC_RECEIVER", typeof(string));
    
            var rEC_REC_LINEParameter = rEC_REC_LINE != null ?
                new ObjectParameter("REC_REC_LINE", rEC_REC_LINE) :
                new ObjectParameter("REC_REC_LINE", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var prioParameter = prio != null ?
                new ObjectParameter("Prio", prio) :
                new ObjectParameter("Prio", typeof(string));
    
            var uSER_Parameter = uSER_ != null ?
                new ObjectParameter("USER_", uSER_) :
                new ObjectParameter("USER_", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("note", note) :
                new ObjectParameter("note", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Update_Assign", rEC_RECEIVERParameter, rEC_REC_LINEParameter, cCNParameter, prioParameter, uSER_Parameter, noteParameter);
        }
    
        public virtual int spINSERT_PARTS_SHORATGE_FOR_WO(Nullable<int> sq, string requestDate, string requestPerson, string part, Nullable<decimal> qty, string completedDate, string forWO, Nullable<bool> w, string note)
        {
            var sqParameter = sq.HasValue ?
                new ObjectParameter("Sq", sq) :
                new ObjectParameter("Sq", typeof(int));
    
            var requestDateParameter = requestDate != null ?
                new ObjectParameter("RequestDate", requestDate) :
                new ObjectParameter("RequestDate", typeof(string));
    
            var requestPersonParameter = requestPerson != null ?
                new ObjectParameter("RequestPerson", requestPerson) :
                new ObjectParameter("RequestPerson", typeof(string));
    
            var partParameter = part != null ?
                new ObjectParameter("Part", part) :
                new ObjectParameter("Part", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(decimal));
    
            var completedDateParameter = completedDate != null ?
                new ObjectParameter("CompletedDate", completedDate) :
                new ObjectParameter("CompletedDate", typeof(string));
    
            var forWOParameter = forWO != null ?
                new ObjectParameter("ForWO", forWO) :
                new ObjectParameter("ForWO", typeof(string));
    
            var wParameter = w.HasValue ?
                new ObjectParameter("W", w) :
                new ObjectParameter("W", typeof(bool));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spINSERT_PARTS_SHORATGE_FOR_WO", sqParameter, requestDateParameter, requestPersonParameter, partParameter, qtyParameter, completedDateParameter, forWOParameter, wParameter, noteParameter);
        }
    
        public virtual ObjectResult<GetListWaiitingDisposition_Result> GetListWaiitingDisposition()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetListWaiitingDisposition_Result>("GetListWaiitingDisposition");
        }
    
        public virtual ObjectResult<p_DOC_by_PO_View1_Result> p_DOC_by_PO_View1(Nullable<System.DateTime> f, Nullable<System.DateTime> t)
        {
            var fParameter = f.HasValue ?
                new ObjectParameter("f", f) :
                new ObjectParameter("f", typeof(System.DateTime));
    
            var tParameter = t.HasValue ?
                new ObjectParameter("t", t) :
                new ObjectParameter("t", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_DOC_by_PO_View1_Result>("p_DOC_by_PO_View1", fParameter, tParameter);
        }
    
        public virtual int p_merge_DESCRIPTION_Temp1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_DESCRIPTION_Temp1");
        }
    
        public virtual int p_merge_OTD_Report1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_OTD_Report1");
        }
    
        public virtual int p_merge_PO_Need_CoC_4_IQC1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_PO_Need_CoC_4_IQC1");
        }
    
        public virtual int p_merge_STDCOST1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_STDCOST1");
        }
    
        public virtual int p_merge_VENDOR_Temp1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_VENDOR_Temp1");
        }
    
        public virtual ObjectResult<pList_Shorted1_Result> pList_Shorted1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pList_Shorted1_Result>("pList_Shorted1");
        }
    
        public virtual int sp_ATTACHMENT_Insert1(string rECEIVER, string rEC_LINE, string fILE_NAME, string aTT_FILE, string uSER_, Nullable<System.DateTime> uSER_DATE, string pC_NAME, string tYPE_REQ, Nullable<System.DateTime> entryDate, string operatorID, string remark, string result, string cCN, Nullable<int> status)
        {
            var rECEIVERParameter = rECEIVER != null ?
                new ObjectParameter("RECEIVER", rECEIVER) :
                new ObjectParameter("RECEIVER", typeof(string));
    
            var rEC_LINEParameter = rEC_LINE != null ?
                new ObjectParameter("REC_LINE", rEC_LINE) :
                new ObjectParameter("REC_LINE", typeof(string));
    
            var fILE_NAMEParameter = fILE_NAME != null ?
                new ObjectParameter("FILE_NAME", fILE_NAME) :
                new ObjectParameter("FILE_NAME", typeof(string));
    
            var aTT_FILEParameter = aTT_FILE != null ?
                new ObjectParameter("ATT_FILE", aTT_FILE) :
                new ObjectParameter("ATT_FILE", typeof(string));
    
            var uSER_Parameter = uSER_ != null ?
                new ObjectParameter("USER_", uSER_) :
                new ObjectParameter("USER_", typeof(string));
    
            var uSER_DATEParameter = uSER_DATE.HasValue ?
                new ObjectParameter("USER_DATE", uSER_DATE) :
                new ObjectParameter("USER_DATE", typeof(System.DateTime));
    
            var pC_NAMEParameter = pC_NAME != null ?
                new ObjectParameter("PC_NAME", pC_NAME) :
                new ObjectParameter("PC_NAME", typeof(string));
    
            var tYPE_REQParameter = tYPE_REQ != null ?
                new ObjectParameter("TYPE_REQ", tYPE_REQ) :
                new ObjectParameter("TYPE_REQ", typeof(string));
    
            var entryDateParameter = entryDate.HasValue ?
                new ObjectParameter("EntryDate", entryDate) :
                new ObjectParameter("EntryDate", typeof(System.DateTime));
    
            var operatorIDParameter = operatorID != null ?
                new ObjectParameter("OperatorID", operatorID) :
                new ObjectParameter("OperatorID", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ATTACHMENT_Insert1", rECEIVERParameter, rEC_LINEParameter, fILE_NAMEParameter, aTT_FILEParameter, uSER_Parameter, uSER_DATEParameter, pC_NAMEParameter, tYPE_REQParameter, entryDateParameter, operatorIDParameter, remarkParameter, resultParameter, cCNParameter, statusParameter);
        }
    
        public virtual int sp_autoGetDOC1(string cCN, string iTEM, string pO, string pOLine, string vENDOR, string inspector, string drawREV, string rev, string receiver, string recline, string pc)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var pOParameter = pO != null ?
                new ObjectParameter("PO", pO) :
                new ObjectParameter("PO", typeof(string));
    
            var pOLineParameter = pOLine != null ?
                new ObjectParameter("POLine", pOLine) :
                new ObjectParameter("POLine", typeof(string));
    
            var vENDORParameter = vENDOR != null ?
                new ObjectParameter("VENDOR", vENDOR) :
                new ObjectParameter("VENDOR", typeof(string));
    
            var inspectorParameter = inspector != null ?
                new ObjectParameter("inspector", inspector) :
                new ObjectParameter("inspector", typeof(string));
    
            var drawREVParameter = drawREV != null ?
                new ObjectParameter("drawREV", drawREV) :
                new ObjectParameter("drawREV", typeof(string));
    
            var revParameter = rev != null ?
                new ObjectParameter("rev", rev) :
                new ObjectParameter("rev", typeof(string));
    
            var receiverParameter = receiver != null ?
                new ObjectParameter("receiver", receiver) :
                new ObjectParameter("receiver", typeof(string));
    
            var reclineParameter = recline != null ?
                new ObjectParameter("recline", recline) :
                new ObjectParameter("recline", typeof(string));
    
            var pcParameter = pc != null ?
                new ObjectParameter("pc", pc) :
                new ObjectParameter("pc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_autoGetDOC1", cCNParameter, iTEMParameter, pOParameter, pOLineParameter, vENDORParameter, inspectorParameter, drawREVParameter, revParameter, receiverParameter, reclineParameter, pcParameter);
        }
    
        public virtual ObjectResult<sp_CheckDOC_Result> sp_CheckDOC(string cCN, string iTEM, string pO, string pOLine, string vENDOR, string inspector, string drawREV, string rev, string receiver, string recline, string pc)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var pOParameter = pO != null ?
                new ObjectParameter("PO", pO) :
                new ObjectParameter("PO", typeof(string));
    
            var pOLineParameter = pOLine != null ?
                new ObjectParameter("POLine", pOLine) :
                new ObjectParameter("POLine", typeof(string));
    
            var vENDORParameter = vENDOR != null ?
                new ObjectParameter("VENDOR", vENDOR) :
                new ObjectParameter("VENDOR", typeof(string));
    
            var inspectorParameter = inspector != null ?
                new ObjectParameter("inspector", inspector) :
                new ObjectParameter("inspector", typeof(string));
    
            var drawREVParameter = drawREV != null ?
                new ObjectParameter("drawREV", drawREV) :
                new ObjectParameter("drawREV", typeof(string));
    
            var revParameter = rev != null ?
                new ObjectParameter("rev", rev) :
                new ObjectParameter("rev", typeof(string));
    
            var receiverParameter = receiver != null ?
                new ObjectParameter("receiver", receiver) :
                new ObjectParameter("receiver", typeof(string));
    
            var reclineParameter = recline != null ?
                new ObjectParameter("recline", recline) :
                new ObjectParameter("recline", typeof(string));
    
            var pcParameter = pc != null ?
                new ObjectParameter("pc", pc) :
                new ObjectParameter("pc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CheckDOC_Result>("sp_CheckDOC", cCNParameter, iTEMParameter, pOParameter, pOLineParameter, vENDORParameter, inspectorParameter, drawREVParameter, revParameter, receiverParameter, reclineParameter, pcParameter);
        }
    
        public virtual int sp_Dashboard_PerformanceIQC1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Dashboard_PerformanceIQC1");
        }
    
        public virtual ObjectResult<sp_DOC_by_ITEM1_Result> sp_DOC_by_ITEM1(string item)
        {
            var itemParameter = item != null ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DOC_by_ITEM1_Result>("sp_DOC_by_ITEM1", itemParameter);
        }
    
        public virtual int sp_DOC_by_ITEM_Insert1(string item, string vendorName, string vendorNo, string cCN, string requiredDOC, string pathDOC, Nullable<System.DateTime> expiredDate, string uploadUser)
        {
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var vendorNameParameter = vendorName != null ?
                new ObjectParameter("VendorName", vendorName) :
                new ObjectParameter("VendorName", typeof(string));
    
            var vendorNoParameter = vendorNo != null ?
                new ObjectParameter("VendorNo", vendorNo) :
                new ObjectParameter("VendorNo", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var requiredDOCParameter = requiredDOC != null ?
                new ObjectParameter("RequiredDOC", requiredDOC) :
                new ObjectParameter("RequiredDOC", typeof(string));
    
            var pathDOCParameter = pathDOC != null ?
                new ObjectParameter("PathDOC", pathDOC) :
                new ObjectParameter("PathDOC", typeof(string));
    
            var expiredDateParameter = expiredDate.HasValue ?
                new ObjectParameter("ExpiredDate", expiredDate) :
                new ObjectParameter("ExpiredDate", typeof(System.DateTime));
    
            var uploadUserParameter = uploadUser != null ?
                new ObjectParameter("UploadUser", uploadUser) :
                new ObjectParameter("UploadUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_ITEM_Insert1", itemParameter, vendorNameParameter, vendorNoParameter, cCNParameter, requiredDOCParameter, pathDOCParameter, expiredDateParameter, uploadUserParameter);
        }
    
        public virtual int sp_DOC_by_ITEM_Reject1(string item, string vendorNo, string cCN, string requiredDOC)
        {
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var vendorNoParameter = vendorNo != null ?
                new ObjectParameter("VendorNo", vendorNo) :
                new ObjectParameter("VendorNo", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var requiredDOCParameter = requiredDOC != null ?
                new ObjectParameter("RequiredDOC", requiredDOC) :
                new ObjectParameter("RequiredDOC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_ITEM_Reject1", itemParameter, vendorNoParameter, cCNParameter, requiredDOCParameter);
        }
    
        public virtual int sp_DOC_by_ITEM_Verify1(string item, string vendorNo, string cCN, string requiredDOC, string verifiedDocUser)
        {
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var vendorNoParameter = vendorNo != null ?
                new ObjectParameter("VendorNo", vendorNo) :
                new ObjectParameter("VendorNo", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var requiredDOCParameter = requiredDOC != null ?
                new ObjectParameter("RequiredDOC", requiredDOC) :
                new ObjectParameter("RequiredDOC", typeof(string));
    
            var verifiedDocUserParameter = verifiedDocUser != null ?
                new ObjectParameter("VerifiedDocUser", verifiedDocUser) :
                new ObjectParameter("VerifiedDocUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_ITEM_Verify1", itemParameter, vendorNoParameter, cCNParameter, requiredDOCParameter, verifiedDocUserParameter);
        }
    
        public virtual ObjectResult<sp_DOC_by_PO_Reject1_Result> sp_DOC_by_PO_Reject1(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DOC_by_PO_Reject1_Result>("sp_DOC_by_PO_Reject1", iDParameter);
        }
    
        public virtual int sp_DOC_by_PO_Upload1(Nullable<int> iD, string pathDOC, string uploadUser)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var pathDOCParameter = pathDOC != null ?
                new ObjectParameter("PathDOC", pathDOC) :
                new ObjectParameter("PathDOC", typeof(string));
    
            var uploadUserParameter = uploadUser != null ?
                new ObjectParameter("UploadUser", uploadUser) :
                new ObjectParameter("UploadUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_PO_Upload1", iDParameter, pathDOCParameter, uploadUserParameter);
        }
    
        public virtual int sp_DOC_by_PO_Verify1(Nullable<int> iD, string verifiedDocUser)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verifiedDocUserParameter = verifiedDocUser != null ?
                new ObjectParameter("VerifiedDocUser", verifiedDocUser) :
                new ObjectParameter("VerifiedDocUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_PO_Verify1", iDParameter, verifiedDocUserParameter);
        }
    
        public virtual ObjectResult<sp_Export_GuideLine1_Result> sp_Export_GuideLine1(string cCN, string iTEM, string drawREV, string rEV)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var drawREVParameter = drawREV != null ?
                new ObjectParameter("DrawREV", drawREV) :
                new ObjectParameter("DrawREV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Export_GuideLine1_Result>("sp_Export_GuideLine1", cCNParameter, iTEMParameter, drawREVParameter, rEVParameter);
        }
    
        public virtual ObjectResult<sp_Get_ListPart_Approve1_Result> sp_Get_ListPart_Approve1(string cCN, string iTEM, string dRAW_REV, string rEV, string approve)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            var approveParameter = approve != null ?
                new ObjectParameter("Approve", approve) :
                new ObjectParameter("Approve", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Get_ListPart_Approve1_Result>("sp_Get_ListPart_Approve1", cCNParameter, iTEMParameter, dRAW_REVParameter, rEVParameter, approveParameter);
        }
    
        public virtual ObjectResult<string> sp_getListDOC_ITEM1(string item)
        {
            var itemParameter = item != null ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_getListDOC_ITEM1", itemParameter);
        }
    
        public virtual ObjectResult<sp_getListITEM_CCN1_Result> sp_getListITEM_CCN1(string ccn)
        {
            var ccnParameter = ccn != null ?
                new ObjectParameter("ccn", ccn) :
                new ObjectParameter("ccn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getListITEM_CCN1_Result>("sp_getListITEM_CCN1", ccnParameter);
        }
    
        public virtual ObjectResult<sp_getListVENDOR_ITEM1_Result> sp_getListVENDOR_ITEM1(string item)
        {
            var itemParameter = item != null ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getListVENDOR_ITEM1_Result>("sp_getListVENDOR_ITEM1", itemParameter);
        }
    
        public virtual ObjectResult<string> sp_GetPartOTD1(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GetPartOTD1", fromParameter, toParameter);
        }
    
        public virtual int sp_GetSupplier1(string type, Nullable<System.DateTime> f, Nullable<System.DateTime> t)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var fParameter = f.HasValue ?
                new ObjectParameter("f", f) :
                new ObjectParameter("f", typeof(System.DateTime));
    
            var tParameter = t.HasValue ?
                new ObjectParameter("t", t) :
                new ObjectParameter("t", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetSupplier1", typeParameter, fParameter, tParameter);
        }
    
        public virtual int sp_GetSupplierOTD1(string type, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetSupplierOTD1", typeParameter, fromParameter, toParameter);
        }
    
        public virtual int sp_Import_VENDOR1(string cCN, string vENDOR, string pUR_LOC, string vEN_NAM, string aDDRESS, string sTATE, string zIP, string cTRY, string cONTACT, string eMAIL, string fAX, string tEL)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var vENDORParameter = vENDOR != null ?
                new ObjectParameter("VENDOR", vENDOR) :
                new ObjectParameter("VENDOR", typeof(string));
    
            var pUR_LOCParameter = pUR_LOC != null ?
                new ObjectParameter("PUR_LOC", pUR_LOC) :
                new ObjectParameter("PUR_LOC", typeof(string));
    
            var vEN_NAMParameter = vEN_NAM != null ?
                new ObjectParameter("VEN_NAM", vEN_NAM) :
                new ObjectParameter("VEN_NAM", typeof(string));
    
            var aDDRESSParameter = aDDRESS != null ?
                new ObjectParameter("ADDRESS", aDDRESS) :
                new ObjectParameter("ADDRESS", typeof(string));
    
            var sTATEParameter = sTATE != null ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(string));
    
            var zIPParameter = zIP != null ?
                new ObjectParameter("ZIP", zIP) :
                new ObjectParameter("ZIP", typeof(string));
    
            var cTRYParameter = cTRY != null ?
                new ObjectParameter("CTRY", cTRY) :
                new ObjectParameter("CTRY", typeof(string));
    
            var cONTACTParameter = cONTACT != null ?
                new ObjectParameter("CONTACT", cONTACT) :
                new ObjectParameter("CONTACT", typeof(string));
    
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var fAXParameter = fAX != null ?
                new ObjectParameter("FAX", fAX) :
                new ObjectParameter("FAX", typeof(string));
    
            var tELParameter = tEL != null ?
                new ObjectParameter("TEL", tEL) :
                new ObjectParameter("TEL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Import_VENDOR1", cCNParameter, vENDORParameter, pUR_LOCParameter, vEN_NAMParameter, aDDRESSParameter, sTATEParameter, zIPParameter, cTRYParameter, cONTACTParameter, eMAILParameter, fAXParameter, tELParameter);
        }
    
        public virtual int sp_Import_VN_MATERIAL_SHORTAGE_4_DASHBOARD1(string wC, string item, string wONum, Nullable<decimal> orderQty, Nullable<decimal> completedQty, Nullable<System.DateTime> openDate, Nullable<System.DateTime> startDate, Nullable<System.DateTime> dueDate, string componentPart, string componentDescription, string flrStk, string anlst, string uM, Nullable<decimal> reqrdQty, Nullable<decimal> commQty, Nullable<decimal> issueQty, Nullable<decimal> sHORTQty, Nullable<decimal> totalOnHand, string shortage, Nullable<decimal> balanceRemains, Nullable<decimal> totalINSRIN, Nullable<decimal> totalVNSTK, Nullable<decimal> totalFLRSTK, Nullable<decimal> totalVNFIN, string wOstatus)
        {
            var wCParameter = wC != null ?
                new ObjectParameter("WC", wC) :
                new ObjectParameter("WC", typeof(string));
    
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var wONumParameter = wONum != null ?
                new ObjectParameter("WONum", wONum) :
                new ObjectParameter("WONum", typeof(string));
    
            var orderQtyParameter = orderQty.HasValue ?
                new ObjectParameter("OrderQty", orderQty) :
                new ObjectParameter("OrderQty", typeof(decimal));
    
            var completedQtyParameter = completedQty.HasValue ?
                new ObjectParameter("CompletedQty", completedQty) :
                new ObjectParameter("CompletedQty", typeof(decimal));
    
            var openDateParameter = openDate.HasValue ?
                new ObjectParameter("OpenDate", openDate) :
                new ObjectParameter("OpenDate", typeof(System.DateTime));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var dueDateParameter = dueDate.HasValue ?
                new ObjectParameter("DueDate", dueDate) :
                new ObjectParameter("DueDate", typeof(System.DateTime));
    
            var componentPartParameter = componentPart != null ?
                new ObjectParameter("ComponentPart", componentPart) :
                new ObjectParameter("ComponentPart", typeof(string));
    
            var componentDescriptionParameter = componentDescription != null ?
                new ObjectParameter("ComponentDescription", componentDescription) :
                new ObjectParameter("ComponentDescription", typeof(string));
    
            var flrStkParameter = flrStk != null ?
                new ObjectParameter("FlrStk", flrStk) :
                new ObjectParameter("FlrStk", typeof(string));
    
            var anlstParameter = anlst != null ?
                new ObjectParameter("Anlst", anlst) :
                new ObjectParameter("Anlst", typeof(string));
    
            var uMParameter = uM != null ?
                new ObjectParameter("UM", uM) :
                new ObjectParameter("UM", typeof(string));
    
            var reqrdQtyParameter = reqrdQty.HasValue ?
                new ObjectParameter("ReqrdQty", reqrdQty) :
                new ObjectParameter("ReqrdQty", typeof(decimal));
    
            var commQtyParameter = commQty.HasValue ?
                new ObjectParameter("CommQty", commQty) :
                new ObjectParameter("CommQty", typeof(decimal));
    
            var issueQtyParameter = issueQty.HasValue ?
                new ObjectParameter("IssueQty", issueQty) :
                new ObjectParameter("IssueQty", typeof(decimal));
    
            var sHORTQtyParameter = sHORTQty.HasValue ?
                new ObjectParameter("SHORTQty", sHORTQty) :
                new ObjectParameter("SHORTQty", typeof(decimal));
    
            var totalOnHandParameter = totalOnHand.HasValue ?
                new ObjectParameter("TotalOnHand", totalOnHand) :
                new ObjectParameter("TotalOnHand", typeof(decimal));
    
            var shortageParameter = shortage != null ?
                new ObjectParameter("shortage", shortage) :
                new ObjectParameter("shortage", typeof(string));
    
            var balanceRemainsParameter = balanceRemains.HasValue ?
                new ObjectParameter("BalanceRemains", balanceRemains) :
                new ObjectParameter("BalanceRemains", typeof(decimal));
    
            var totalINSRINParameter = totalINSRIN.HasValue ?
                new ObjectParameter("TotalINSRIN", totalINSRIN) :
                new ObjectParameter("TotalINSRIN", typeof(decimal));
    
            var totalVNSTKParameter = totalVNSTK.HasValue ?
                new ObjectParameter("TotalVNSTK", totalVNSTK) :
                new ObjectParameter("TotalVNSTK", typeof(decimal));
    
            var totalFLRSTKParameter = totalFLRSTK.HasValue ?
                new ObjectParameter("TotalFLRSTK", totalFLRSTK) :
                new ObjectParameter("TotalFLRSTK", typeof(decimal));
    
            var totalVNFINParameter = totalVNFIN.HasValue ?
                new ObjectParameter("TotalVNFIN", totalVNFIN) :
                new ObjectParameter("TotalVNFIN", typeof(decimal));
    
            var wOstatusParameter = wOstatus != null ?
                new ObjectParameter("WOstatus", wOstatus) :
                new ObjectParameter("WOstatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Import_VN_MATERIAL_SHORTAGE_4_DASHBOARD1", wCParameter, itemParameter, wONumParameter, orderQtyParameter, completedQtyParameter, openDateParameter, startDateParameter, dueDateParameter, componentPartParameter, componentDescriptionParameter, flrStkParameter, anlstParameter, uMParameter, reqrdQtyParameter, commQtyParameter, issueQtyParameter, sHORTQtyParameter, totalOnHandParameter, shortageParameter, balanceRemainsParameter, totalINSRINParameter, totalVNSTKParameter, totalFLRSTKParameter, totalVNFINParameter, wOstatusParameter);
        }
    
        public virtual int sp_Inv_SentmailSubmitTasKProductTranfer1(string part, string iduser)
        {
            var partParameter = part != null ?
                new ObjectParameter("part", part) :
                new ObjectParameter("part", typeof(string));
    
            var iduserParameter = iduser != null ?
                new ObjectParameter("iduser", iduser) :
                new ObjectParameter("iduser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Inv_SentmailSubmitTasKProductTranfer1", partParameter, iduserParameter);
        }
    
        public virtual int sp_PART_REJECT_Insert1(string cCN, string iTEM, string dRAW_REV, string rEV, string user, string com)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var comParameter = com != null ?
                new ObjectParameter("com", com) :
                new ObjectParameter("com", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PART_REJECT_Insert1", cCNParameter, iTEMParameter, dRAW_REVParameter, rEVParameter, userParameter, comParameter);
        }
    
        public virtual int sp_RemindCompleteTask_Not_NCR1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RemindCompleteTask_Not_NCR1");
        }
    
        public virtual int sp_RemindPO_DOC_Email()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RemindPO_DOC_Email");
        }
    
        public virtual ObjectResult<sp_Report_MonthIQC_TEM1_Result> sp_Report_MonthIQC_TEM1(Nullable<System.DateTime> f, Nullable<System.DateTime> t)
        {
            var fParameter = f.HasValue ?
                new ObjectParameter("f", f) :
                new ObjectParameter("f", typeof(System.DateTime));
    
            var tParameter = t.HasValue ?
                new ObjectParameter("t", t) :
                new ObjectParameter("t", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Report_MonthIQC_TEM1_Result>("sp_Report_MonthIQC_TEM1", fParameter, tParameter);
        }
    
        public virtual int sp_Report_OTD_Supplier_byMonth1(string viewBy, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string supType, string sup, string part)
        {
            var viewByParameter = viewBy != null ?
                new ObjectParameter("ViewBy", viewBy) :
                new ObjectParameter("ViewBy", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var supTypeParameter = supType != null ?
                new ObjectParameter("SupType", supType) :
                new ObjectParameter("SupType", typeof(string));
    
            var supParameter = sup != null ?
                new ObjectParameter("Sup", sup) :
                new ObjectParameter("Sup", typeof(string));
    
            var partParameter = part != null ?
                new ObjectParameter("Part", part) :
                new ObjectParameter("Part", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Report_OTD_Supplier_byMonth1", viewByParameter, fromParameter, toParameter, supTypeParameter, supParameter, partParameter);
        }
    
        public virtual ObjectResult<sp_Report_PPM_Supplier_byMonth1_Result> sp_Report_PPM_Supplier_byMonth1(string viewBy, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string supType, string sup, string part)
        {
            var viewByParameter = viewBy != null ?
                new ObjectParameter("ViewBy", viewBy) :
                new ObjectParameter("ViewBy", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var supTypeParameter = supType != null ?
                new ObjectParameter("SupType", supType) :
                new ObjectParameter("SupType", typeof(string));
    
            var supParameter = sup != null ?
                new ObjectParameter("Sup", sup) :
                new ObjectParameter("Sup", typeof(string));
    
            var partParameter = part != null ?
                new ObjectParameter("Part", part) :
                new ObjectParameter("Part", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Report_PPM_Supplier_byMonth1_Result>("sp_Report_PPM_Supplier_byMonth1", viewByParameter, fromParameter, toParameter, supTypeParameter, supParameter, partParameter);
        }
    
        public virtual ObjectResult<p_DOC_by_PO_View2_Result> p_DOC_by_PO_View2(Nullable<System.DateTime> f, Nullable<System.DateTime> t)
        {
            var fParameter = f.HasValue ?
                new ObjectParameter("f", f) :
                new ObjectParameter("f", typeof(System.DateTime));
    
            var tParameter = t.HasValue ?
                new ObjectParameter("t", t) :
                new ObjectParameter("t", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_DOC_by_PO_View2_Result>("p_DOC_by_PO_View2", fParameter, tParameter);
        }
    
        public virtual int p_merge_DESCRIPTION_Temp2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_DESCRIPTION_Temp2");
        }
    
        public virtual int p_merge_OTD_Report2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_OTD_Report2");
        }
    
        public virtual int p_merge_PO_Need_CoC_4_IQC2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_PO_Need_CoC_4_IQC2");
        }
    
        public virtual int p_merge_STDCOST2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_STDCOST2");
        }
    
        public virtual int p_merge_VENDOR_Temp2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_VENDOR_Temp2");
        }
    
        public virtual int pList_Shorted2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pList_Shorted2");
        }
    
        public virtual int sp_ATTACHMENT_Insert2(string rECEIVER, string rEC_LINE, string fILE_NAME, string aTT_FILE, string uSER_, Nullable<System.DateTime> uSER_DATE, string pC_NAME, string tYPE_REQ, Nullable<System.DateTime> entryDate, string operatorID, string remark, string result, string cCN, Nullable<int> status)
        {
            var rECEIVERParameter = rECEIVER != null ?
                new ObjectParameter("RECEIVER", rECEIVER) :
                new ObjectParameter("RECEIVER", typeof(string));
    
            var rEC_LINEParameter = rEC_LINE != null ?
                new ObjectParameter("REC_LINE", rEC_LINE) :
                new ObjectParameter("REC_LINE", typeof(string));
    
            var fILE_NAMEParameter = fILE_NAME != null ?
                new ObjectParameter("FILE_NAME", fILE_NAME) :
                new ObjectParameter("FILE_NAME", typeof(string));
    
            var aTT_FILEParameter = aTT_FILE != null ?
                new ObjectParameter("ATT_FILE", aTT_FILE) :
                new ObjectParameter("ATT_FILE", typeof(string));
    
            var uSER_Parameter = uSER_ != null ?
                new ObjectParameter("USER_", uSER_) :
                new ObjectParameter("USER_", typeof(string));
    
            var uSER_DATEParameter = uSER_DATE.HasValue ?
                new ObjectParameter("USER_DATE", uSER_DATE) :
                new ObjectParameter("USER_DATE", typeof(System.DateTime));
    
            var pC_NAMEParameter = pC_NAME != null ?
                new ObjectParameter("PC_NAME", pC_NAME) :
                new ObjectParameter("PC_NAME", typeof(string));
    
            var tYPE_REQParameter = tYPE_REQ != null ?
                new ObjectParameter("TYPE_REQ", tYPE_REQ) :
                new ObjectParameter("TYPE_REQ", typeof(string));
    
            var entryDateParameter = entryDate.HasValue ?
                new ObjectParameter("EntryDate", entryDate) :
                new ObjectParameter("EntryDate", typeof(System.DateTime));
    
            var operatorIDParameter = operatorID != null ?
                new ObjectParameter("OperatorID", operatorID) :
                new ObjectParameter("OperatorID", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ATTACHMENT_Insert2", rECEIVERParameter, rEC_LINEParameter, fILE_NAMEParameter, aTT_FILEParameter, uSER_Parameter, uSER_DATEParameter, pC_NAMEParameter, tYPE_REQParameter, entryDateParameter, operatorIDParameter, remarkParameter, resultParameter, cCNParameter, statusParameter);
        }
    
        public virtual int sp_autoGetDOC2(string cCN, string iTEM, string pO, string pOLine, string vENDOR, string inspector, string drawREV, string rev, string receiver, string recline, string pc)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var pOParameter = pO != null ?
                new ObjectParameter("PO", pO) :
                new ObjectParameter("PO", typeof(string));
    
            var pOLineParameter = pOLine != null ?
                new ObjectParameter("POLine", pOLine) :
                new ObjectParameter("POLine", typeof(string));
    
            var vENDORParameter = vENDOR != null ?
                new ObjectParameter("VENDOR", vENDOR) :
                new ObjectParameter("VENDOR", typeof(string));
    
            var inspectorParameter = inspector != null ?
                new ObjectParameter("inspector", inspector) :
                new ObjectParameter("inspector", typeof(string));
    
            var drawREVParameter = drawREV != null ?
                new ObjectParameter("drawREV", drawREV) :
                new ObjectParameter("drawREV", typeof(string));
    
            var revParameter = rev != null ?
                new ObjectParameter("rev", rev) :
                new ObjectParameter("rev", typeof(string));
    
            var receiverParameter = receiver != null ?
                new ObjectParameter("receiver", receiver) :
                new ObjectParameter("receiver", typeof(string));
    
            var reclineParameter = recline != null ?
                new ObjectParameter("recline", recline) :
                new ObjectParameter("recline", typeof(string));
    
            var pcParameter = pc != null ?
                new ObjectParameter("pc", pc) :
                new ObjectParameter("pc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_autoGetDOC2", cCNParameter, iTEMParameter, pOParameter, pOLineParameter, vENDORParameter, inspectorParameter, drawREVParameter, revParameter, receiverParameter, reclineParameter, pcParameter);
        }
    
        public virtual ObjectResult<sp_CheckDOC1_Result> sp_CheckDOC1(string cCN, string iTEM, string pO, string pOLine, string vENDOR, string inspector, string drawREV, string rev, string receiver, string recline, string pc)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var pOParameter = pO != null ?
                new ObjectParameter("PO", pO) :
                new ObjectParameter("PO", typeof(string));
    
            var pOLineParameter = pOLine != null ?
                new ObjectParameter("POLine", pOLine) :
                new ObjectParameter("POLine", typeof(string));
    
            var vENDORParameter = vENDOR != null ?
                new ObjectParameter("VENDOR", vENDOR) :
                new ObjectParameter("VENDOR", typeof(string));
    
            var inspectorParameter = inspector != null ?
                new ObjectParameter("inspector", inspector) :
                new ObjectParameter("inspector", typeof(string));
    
            var drawREVParameter = drawREV != null ?
                new ObjectParameter("drawREV", drawREV) :
                new ObjectParameter("drawREV", typeof(string));
    
            var revParameter = rev != null ?
                new ObjectParameter("rev", rev) :
                new ObjectParameter("rev", typeof(string));
    
            var receiverParameter = receiver != null ?
                new ObjectParameter("receiver", receiver) :
                new ObjectParameter("receiver", typeof(string));
    
            var reclineParameter = recline != null ?
                new ObjectParameter("recline", recline) :
                new ObjectParameter("recline", typeof(string));
    
            var pcParameter = pc != null ?
                new ObjectParameter("pc", pc) :
                new ObjectParameter("pc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CheckDOC1_Result>("sp_CheckDOC1", cCNParameter, iTEMParameter, pOParameter, pOLineParameter, vENDORParameter, inspectorParameter, drawREVParameter, revParameter, receiverParameter, reclineParameter, pcParameter);
        }
    
        public virtual int sp_Dashboard_PerformanceIQC2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Dashboard_PerformanceIQC2");
        }
    
        public virtual ObjectResult<sp_DOC_by_ITEM2_Result> sp_DOC_by_ITEM2(string item)
        {
            var itemParameter = item != null ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DOC_by_ITEM2_Result>("sp_DOC_by_ITEM2", itemParameter);
        }
    
        public virtual int sp_DOC_by_ITEM_Insert2(string item, string vendorName, string vendorNo, string cCN, string requiredDOC, string pathDOC, Nullable<System.DateTime> expiredDate, string uploadUser)
        {
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var vendorNameParameter = vendorName != null ?
                new ObjectParameter("VendorName", vendorName) :
                new ObjectParameter("VendorName", typeof(string));
    
            var vendorNoParameter = vendorNo != null ?
                new ObjectParameter("VendorNo", vendorNo) :
                new ObjectParameter("VendorNo", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var requiredDOCParameter = requiredDOC != null ?
                new ObjectParameter("RequiredDOC", requiredDOC) :
                new ObjectParameter("RequiredDOC", typeof(string));
    
            var pathDOCParameter = pathDOC != null ?
                new ObjectParameter("PathDOC", pathDOC) :
                new ObjectParameter("PathDOC", typeof(string));
    
            var expiredDateParameter = expiredDate.HasValue ?
                new ObjectParameter("ExpiredDate", expiredDate) :
                new ObjectParameter("ExpiredDate", typeof(System.DateTime));
    
            var uploadUserParameter = uploadUser != null ?
                new ObjectParameter("UploadUser", uploadUser) :
                new ObjectParameter("UploadUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_ITEM_Insert2", itemParameter, vendorNameParameter, vendorNoParameter, cCNParameter, requiredDOCParameter, pathDOCParameter, expiredDateParameter, uploadUserParameter);
        }
    
        public virtual int sp_DOC_by_ITEM_Reject2(string item, string vendorNo, string cCN, string requiredDOC)
        {
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var vendorNoParameter = vendorNo != null ?
                new ObjectParameter("VendorNo", vendorNo) :
                new ObjectParameter("VendorNo", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var requiredDOCParameter = requiredDOC != null ?
                new ObjectParameter("RequiredDOC", requiredDOC) :
                new ObjectParameter("RequiredDOC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_ITEM_Reject2", itemParameter, vendorNoParameter, cCNParameter, requiredDOCParameter);
        }
    
        public virtual int sp_DOC_by_ITEM_Verify2(string item, string vendorNo, string cCN, string requiredDOC, string verifiedDocUser)
        {
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var vendorNoParameter = vendorNo != null ?
                new ObjectParameter("VendorNo", vendorNo) :
                new ObjectParameter("VendorNo", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var requiredDOCParameter = requiredDOC != null ?
                new ObjectParameter("RequiredDOC", requiredDOC) :
                new ObjectParameter("RequiredDOC", typeof(string));
    
            var verifiedDocUserParameter = verifiedDocUser != null ?
                new ObjectParameter("VerifiedDocUser", verifiedDocUser) :
                new ObjectParameter("VerifiedDocUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_ITEM_Verify2", itemParameter, vendorNoParameter, cCNParameter, requiredDOCParameter, verifiedDocUserParameter);
        }
    
        public virtual ObjectResult<sp_DOC_by_PO_Reject2_Result> sp_DOC_by_PO_Reject2(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DOC_by_PO_Reject2_Result>("sp_DOC_by_PO_Reject2", iDParameter);
        }
    
        public virtual int sp_DOC_by_PO_Upload2(Nullable<int> iD, string pathDOC, string uploadUser)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var pathDOCParameter = pathDOC != null ?
                new ObjectParameter("PathDOC", pathDOC) :
                new ObjectParameter("PathDOC", typeof(string));
    
            var uploadUserParameter = uploadUser != null ?
                new ObjectParameter("UploadUser", uploadUser) :
                new ObjectParameter("UploadUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_PO_Upload2", iDParameter, pathDOCParameter, uploadUserParameter);
        }
    
        public virtual int sp_DOC_by_PO_Verify2(Nullable<int> iD, string verifiedDocUser)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verifiedDocUserParameter = verifiedDocUser != null ?
                new ObjectParameter("VerifiedDocUser", verifiedDocUser) :
                new ObjectParameter("VerifiedDocUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_PO_Verify2", iDParameter, verifiedDocUserParameter);
        }
    
        public virtual ObjectResult<sp_Export_GuideLine2_Result> sp_Export_GuideLine2(string cCN, string iTEM, string drawREV, string rEV)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var drawREVParameter = drawREV != null ?
                new ObjectParameter("DrawREV", drawREV) :
                new ObjectParameter("DrawREV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Export_GuideLine2_Result>("sp_Export_GuideLine2", cCNParameter, iTEMParameter, drawREVParameter, rEVParameter);
        }
    
        public virtual ObjectResult<sp_Get_ListPart_Approve2_Result> sp_Get_ListPart_Approve2(string cCN, string iTEM, string dRAW_REV, string rEV, string approve)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            var approveParameter = approve != null ?
                new ObjectParameter("Approve", approve) :
                new ObjectParameter("Approve", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Get_ListPart_Approve2_Result>("sp_Get_ListPart_Approve2", cCNParameter, iTEMParameter, dRAW_REVParameter, rEVParameter, approveParameter);
        }
    
        public virtual ObjectResult<string> sp_getListDOC_ITEM2(string item)
        {
            var itemParameter = item != null ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_getListDOC_ITEM2", itemParameter);
        }
    
        public virtual ObjectResult<sp_getListITEM_CCN2_Result> sp_getListITEM_CCN2(string ccn)
        {
            var ccnParameter = ccn != null ?
                new ObjectParameter("ccn", ccn) :
                new ObjectParameter("ccn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getListITEM_CCN2_Result>("sp_getListITEM_CCN2", ccnParameter);
        }
    
        public virtual ObjectResult<sp_getListVENDOR_ITEM2_Result> sp_getListVENDOR_ITEM2(string item)
        {
            var itemParameter = item != null ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getListVENDOR_ITEM2_Result>("sp_getListVENDOR_ITEM2", itemParameter);
        }
    
        public virtual ObjectResult<string> sp_GetPartOTD2(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GetPartOTD2", fromParameter, toParameter);
        }
    
        public virtual int sp_GetSupplier2(string type, Nullable<System.DateTime> f, Nullable<System.DateTime> t)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var fParameter = f.HasValue ?
                new ObjectParameter("f", f) :
                new ObjectParameter("f", typeof(System.DateTime));
    
            var tParameter = t.HasValue ?
                new ObjectParameter("t", t) :
                new ObjectParameter("t", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetSupplier2", typeParameter, fParameter, tParameter);
        }
    
        public virtual int sp_GetSupplierOTD2(string type, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetSupplierOTD2", typeParameter, fromParameter, toParameter);
        }
    
        public virtual int sp_Import_VENDOR2(string cCN, string vENDOR, string pUR_LOC, string vEN_NAM, string aDDRESS, string sTATE, string zIP, string cTRY, string cONTACT, string eMAIL, string fAX, string tEL)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var vENDORParameter = vENDOR != null ?
                new ObjectParameter("VENDOR", vENDOR) :
                new ObjectParameter("VENDOR", typeof(string));
    
            var pUR_LOCParameter = pUR_LOC != null ?
                new ObjectParameter("PUR_LOC", pUR_LOC) :
                new ObjectParameter("PUR_LOC", typeof(string));
    
            var vEN_NAMParameter = vEN_NAM != null ?
                new ObjectParameter("VEN_NAM", vEN_NAM) :
                new ObjectParameter("VEN_NAM", typeof(string));
    
            var aDDRESSParameter = aDDRESS != null ?
                new ObjectParameter("ADDRESS", aDDRESS) :
                new ObjectParameter("ADDRESS", typeof(string));
    
            var sTATEParameter = sTATE != null ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(string));
    
            var zIPParameter = zIP != null ?
                new ObjectParameter("ZIP", zIP) :
                new ObjectParameter("ZIP", typeof(string));
    
            var cTRYParameter = cTRY != null ?
                new ObjectParameter("CTRY", cTRY) :
                new ObjectParameter("CTRY", typeof(string));
    
            var cONTACTParameter = cONTACT != null ?
                new ObjectParameter("CONTACT", cONTACT) :
                new ObjectParameter("CONTACT", typeof(string));
    
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var fAXParameter = fAX != null ?
                new ObjectParameter("FAX", fAX) :
                new ObjectParameter("FAX", typeof(string));
    
            var tELParameter = tEL != null ?
                new ObjectParameter("TEL", tEL) :
                new ObjectParameter("TEL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Import_VENDOR2", cCNParameter, vENDORParameter, pUR_LOCParameter, vEN_NAMParameter, aDDRESSParameter, sTATEParameter, zIPParameter, cTRYParameter, cONTACTParameter, eMAILParameter, fAXParameter, tELParameter);
        }
    
        public virtual int sp_Import_VN_MATERIAL_SHORTAGE_4_DASHBOARD2(string wC, string item, string wONum, Nullable<decimal> orderQty, Nullable<decimal> completedQty, Nullable<System.DateTime> openDate, Nullable<System.DateTime> startDate, Nullable<System.DateTime> dueDate, string componentPart, string componentDescription, string flrStk, string anlst, string uM, Nullable<decimal> reqrdQty, Nullable<decimal> commQty, Nullable<decimal> issueQty, Nullable<decimal> sHORTQty, Nullable<decimal> totalOnHand, string shortage, Nullable<decimal> balanceRemains, Nullable<decimal> totalINSRIN, Nullable<decimal> totalVNSTK, Nullable<decimal> totalFLRSTK, Nullable<decimal> totalVNFIN, string wOstatus)
        {
            var wCParameter = wC != null ?
                new ObjectParameter("WC", wC) :
                new ObjectParameter("WC", typeof(string));
    
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var wONumParameter = wONum != null ?
                new ObjectParameter("WONum", wONum) :
                new ObjectParameter("WONum", typeof(string));
    
            var orderQtyParameter = orderQty.HasValue ?
                new ObjectParameter("OrderQty", orderQty) :
                new ObjectParameter("OrderQty", typeof(decimal));
    
            var completedQtyParameter = completedQty.HasValue ?
                new ObjectParameter("CompletedQty", completedQty) :
                new ObjectParameter("CompletedQty", typeof(decimal));
    
            var openDateParameter = openDate.HasValue ?
                new ObjectParameter("OpenDate", openDate) :
                new ObjectParameter("OpenDate", typeof(System.DateTime));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var dueDateParameter = dueDate.HasValue ?
                new ObjectParameter("DueDate", dueDate) :
                new ObjectParameter("DueDate", typeof(System.DateTime));
    
            var componentPartParameter = componentPart != null ?
                new ObjectParameter("ComponentPart", componentPart) :
                new ObjectParameter("ComponentPart", typeof(string));
    
            var componentDescriptionParameter = componentDescription != null ?
                new ObjectParameter("ComponentDescription", componentDescription) :
                new ObjectParameter("ComponentDescription", typeof(string));
    
            var flrStkParameter = flrStk != null ?
                new ObjectParameter("FlrStk", flrStk) :
                new ObjectParameter("FlrStk", typeof(string));
    
            var anlstParameter = anlst != null ?
                new ObjectParameter("Anlst", anlst) :
                new ObjectParameter("Anlst", typeof(string));
    
            var uMParameter = uM != null ?
                new ObjectParameter("UM", uM) :
                new ObjectParameter("UM", typeof(string));
    
            var reqrdQtyParameter = reqrdQty.HasValue ?
                new ObjectParameter("ReqrdQty", reqrdQty) :
                new ObjectParameter("ReqrdQty", typeof(decimal));
    
            var commQtyParameter = commQty.HasValue ?
                new ObjectParameter("CommQty", commQty) :
                new ObjectParameter("CommQty", typeof(decimal));
    
            var issueQtyParameter = issueQty.HasValue ?
                new ObjectParameter("IssueQty", issueQty) :
                new ObjectParameter("IssueQty", typeof(decimal));
    
            var sHORTQtyParameter = sHORTQty.HasValue ?
                new ObjectParameter("SHORTQty", sHORTQty) :
                new ObjectParameter("SHORTQty", typeof(decimal));
    
            var totalOnHandParameter = totalOnHand.HasValue ?
                new ObjectParameter("TotalOnHand", totalOnHand) :
                new ObjectParameter("TotalOnHand", typeof(decimal));
    
            var shortageParameter = shortage != null ?
                new ObjectParameter("shortage", shortage) :
                new ObjectParameter("shortage", typeof(string));
    
            var balanceRemainsParameter = balanceRemains.HasValue ?
                new ObjectParameter("BalanceRemains", balanceRemains) :
                new ObjectParameter("BalanceRemains", typeof(decimal));
    
            var totalINSRINParameter = totalINSRIN.HasValue ?
                new ObjectParameter("TotalINSRIN", totalINSRIN) :
                new ObjectParameter("TotalINSRIN", typeof(decimal));
    
            var totalVNSTKParameter = totalVNSTK.HasValue ?
                new ObjectParameter("TotalVNSTK", totalVNSTK) :
                new ObjectParameter("TotalVNSTK", typeof(decimal));
    
            var totalFLRSTKParameter = totalFLRSTK.HasValue ?
                new ObjectParameter("TotalFLRSTK", totalFLRSTK) :
                new ObjectParameter("TotalFLRSTK", typeof(decimal));
    
            var totalVNFINParameter = totalVNFIN.HasValue ?
                new ObjectParameter("TotalVNFIN", totalVNFIN) :
                new ObjectParameter("TotalVNFIN", typeof(decimal));
    
            var wOstatusParameter = wOstatus != null ?
                new ObjectParameter("WOstatus", wOstatus) :
                new ObjectParameter("WOstatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Import_VN_MATERIAL_SHORTAGE_4_DASHBOARD2", wCParameter, itemParameter, wONumParameter, orderQtyParameter, completedQtyParameter, openDateParameter, startDateParameter, dueDateParameter, componentPartParameter, componentDescriptionParameter, flrStkParameter, anlstParameter, uMParameter, reqrdQtyParameter, commQtyParameter, issueQtyParameter, sHORTQtyParameter, totalOnHandParameter, shortageParameter, balanceRemainsParameter, totalINSRINParameter, totalVNSTKParameter, totalFLRSTKParameter, totalVNFINParameter, wOstatusParameter);
        }
    
        public virtual int sp_Inv_Cal_ScoreCost_4Mem(string sug_ID)
        {
            var sug_IDParameter = sug_ID != null ?
                new ObjectParameter("Sug_ID", sug_ID) :
                new ObjectParameter("Sug_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Inv_Cal_ScoreCost_4Mem", sug_IDParameter);
        }
    
        public virtual int sp_Inv_Create_Sug(string sug_Type, string sug_title, string cur_prob, string idea_impr, string cur_Step, Nullable<System.DateTime> exp_Start_Date, Nullable<System.DateTime> exp_End_date, Nullable<System.DateTime> submit_date, string submitter, string requestor, string rqtor_name, string req_Dept, string req_Email, string att_File_Current, string att_File_Idea)
        {
            var sug_TypeParameter = sug_Type != null ?
                new ObjectParameter("Sug_Type", sug_Type) :
                new ObjectParameter("Sug_Type", typeof(string));
    
            var sug_titleParameter = sug_title != null ?
                new ObjectParameter("Sug_title", sug_title) :
                new ObjectParameter("Sug_title", typeof(string));
    
            var cur_probParameter = cur_prob != null ?
                new ObjectParameter("Cur_prob", cur_prob) :
                new ObjectParameter("Cur_prob", typeof(string));
    
            var idea_imprParameter = idea_impr != null ?
                new ObjectParameter("Idea_impr", idea_impr) :
                new ObjectParameter("Idea_impr", typeof(string));
    
            var cur_StepParameter = cur_Step != null ?
                new ObjectParameter("Cur_Step", cur_Step) :
                new ObjectParameter("Cur_Step", typeof(string));
    
            var exp_Start_DateParameter = exp_Start_Date.HasValue ?
                new ObjectParameter("Exp_Start_Date", exp_Start_Date) :
                new ObjectParameter("Exp_Start_Date", typeof(System.DateTime));
    
            var exp_End_dateParameter = exp_End_date.HasValue ?
                new ObjectParameter("Exp_End_date", exp_End_date) :
                new ObjectParameter("Exp_End_date", typeof(System.DateTime));
    
            var submit_dateParameter = submit_date.HasValue ?
                new ObjectParameter("Submit_date", submit_date) :
                new ObjectParameter("Submit_date", typeof(System.DateTime));
    
            var submitterParameter = submitter != null ?
                new ObjectParameter("Submitter", submitter) :
                new ObjectParameter("Submitter", typeof(string));
    
            var requestorParameter = requestor != null ?
                new ObjectParameter("Requestor", requestor) :
                new ObjectParameter("Requestor", typeof(string));
    
            var rqtor_nameParameter = rqtor_name != null ?
                new ObjectParameter("Rqtor_name", rqtor_name) :
                new ObjectParameter("Rqtor_name", typeof(string));
    
            var req_DeptParameter = req_Dept != null ?
                new ObjectParameter("Req_Dept", req_Dept) :
                new ObjectParameter("Req_Dept", typeof(string));
    
            var req_EmailParameter = req_Email != null ?
                new ObjectParameter("Req_Email", req_Email) :
                new ObjectParameter("Req_Email", typeof(string));
    
            var att_File_CurrentParameter = att_File_Current != null ?
                new ObjectParameter("Att_File_Current", att_File_Current) :
                new ObjectParameter("Att_File_Current", typeof(string));
    
            var att_File_IdeaParameter = att_File_Idea != null ?
                new ObjectParameter("Att_File_Idea", att_File_Idea) :
                new ObjectParameter("Att_File_Idea", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Inv_Create_Sug", sug_TypeParameter, sug_titleParameter, cur_probParameter, idea_imprParameter, cur_StepParameter, exp_Start_DateParameter, exp_End_dateParameter, submit_dateParameter, submitterParameter, requestorParameter, rqtor_nameParameter, req_DeptParameter, req_EmailParameter, att_File_CurrentParameter, att_File_IdeaParameter);
        }
    
        public virtual ObjectResult<sp_Inv_Get_Dept_Result> sp_Inv_Get_Dept(string oPid)
        {
            var oPidParameter = oPid != null ?
                new ObjectParameter("OPid", oPid) :
                new ObjectParameter("OPid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Inv_Get_Dept_Result>("sp_Inv_Get_Dept", oPidParameter);
        }
    
        public virtual ObjectResult<sp_Inv_Get_RequestorInfo_Result> sp_Inv_Get_RequestorInfo(string oPid)
        {
            var oPidParameter = oPid != null ?
                new ObjectParameter("OPid", oPid) :
                new ObjectParameter("OPid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Inv_Get_RequestorInfo_Result>("sp_Inv_Get_RequestorInfo", oPidParameter);
        }
    
        public virtual ObjectResult<sp_Inv_GetProTransfer_List_Result> sp_Inv_GetProTransfer_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Inv_GetProTransfer_List_Result>("sp_Inv_GetProTransfer_List");
        }
    
        public virtual ObjectResult<sp_Inv_GetStepInfor_Result> sp_Inv_GetStepInfor(string step_ID, string sug_ID)
        {
            var step_IDParameter = step_ID != null ?
                new ObjectParameter("Step_ID", step_ID) :
                new ObjectParameter("Step_ID", typeof(string));
    
            var sug_IDParameter = sug_ID != null ?
                new ObjectParameter("Sug_ID", sug_ID) :
                new ObjectParameter("Sug_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Inv_GetStepInfor_Result>("sp_Inv_GetStepInfor", step_IDParameter, sug_IDParameter);
        }
    
        public virtual ObjectResult<string> sp_Inv_NewSugID(string dept_code)
        {
            var dept_codeParameter = dept_code != null ?
                new ObjectParameter("dept_code", dept_code) :
                new ObjectParameter("dept_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_Inv_NewSugID", dept_codeParameter);
        }
    
        public virtual ObjectResult<sp_Inv_Report_Cost_Result> sp_Inv_Report_Cost(Nullable<System.DateTime> dtFrom, Nullable<System.DateTime> dtTo, string list, string reportby)
        {
            var dtFromParameter = dtFrom.HasValue ?
                new ObjectParameter("dtFrom", dtFrom) :
                new ObjectParameter("dtFrom", typeof(System.DateTime));
    
            var dtToParameter = dtTo.HasValue ?
                new ObjectParameter("dtTo", dtTo) :
                new ObjectParameter("dtTo", typeof(System.DateTime));
    
            var listParameter = list != null ?
                new ObjectParameter("List", list) :
                new ObjectParameter("List", typeof(string));
    
            var reportbyParameter = reportby != null ?
                new ObjectParameter("Reportby", reportby) :
                new ObjectParameter("Reportby", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Inv_Report_Cost_Result>("sp_Inv_Report_Cost", dtFromParameter, dtToParameter, listParameter, reportbyParameter);
        }
    
        public virtual ObjectResult<sp_Inv_Report_Score_Result> sp_Inv_Report_Score(Nullable<System.DateTime> dtFrom, Nullable<System.DateTime> dtTo, string list, string reportby)
        {
            var dtFromParameter = dtFrom.HasValue ?
                new ObjectParameter("dtFrom", dtFrom) :
                new ObjectParameter("dtFrom", typeof(System.DateTime));
    
            var dtToParameter = dtTo.HasValue ?
                new ObjectParameter("dtTo", dtTo) :
                new ObjectParameter("dtTo", typeof(System.DateTime));
    
            var listParameter = list != null ?
                new ObjectParameter("List", list) :
                new ObjectParameter("List", typeof(string));
    
            var reportbyParameter = reportby != null ?
                new ObjectParameter("Reportby", reportby) :
                new ObjectParameter("Reportby", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Inv_Report_Score_Result>("sp_Inv_Report_Score", dtFromParameter, dtToParameter, listParameter, reportbyParameter);
        }
    
        public virtual ObjectResult<sp_Inv_Report_Suggestion_Result> sp_Inv_Report_Suggestion(string strdtFrom, string strdtTo, string deptList, string imp_Method)
        {
            var strdtFromParameter = strdtFrom != null ?
                new ObjectParameter("strdtFrom", strdtFrom) :
                new ObjectParameter("strdtFrom", typeof(string));
    
            var strdtToParameter = strdtTo != null ?
                new ObjectParameter("strdtTo", strdtTo) :
                new ObjectParameter("strdtTo", typeof(string));
    
            var deptListParameter = deptList != null ?
                new ObjectParameter("DeptList", deptList) :
                new ObjectParameter("DeptList", typeof(string));
    
            var imp_MethodParameter = imp_Method != null ?
                new ObjectParameter("Imp_Method", imp_Method) :
                new ObjectParameter("Imp_Method", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Inv_Report_Suggestion_Result>("sp_Inv_Report_Suggestion", strdtFromParameter, strdtToParameter, deptListParameter, imp_MethodParameter);
        }
    
        public virtual int sp_Inv_SendMail(string sugID, Nullable<byte> step, string status)
        {
            var sugIDParameter = sugID != null ?
                new ObjectParameter("SugID", sugID) :
                new ObjectParameter("SugID", typeof(string));
    
            var stepParameter = step.HasValue ?
                new ObjectParameter("Step", step) :
                new ObjectParameter("Step", typeof(byte));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Inv_SendMail", sugIDParameter, stepParameter, statusParameter);
        }
    
        public virtual int sp_Inv_SendMail_Approve(string sugID, Nullable<byte> step, string status)
        {
            var sugIDParameter = sugID != null ?
                new ObjectParameter("SugID", sugID) :
                new ObjectParameter("SugID", typeof(string));
    
            var stepParameter = step.HasValue ?
                new ObjectParameter("Step", step) :
                new ObjectParameter("Step", typeof(byte));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Inv_SendMail_Approve", sugIDParameter, stepParameter, statusParameter);
        }
    
        public virtual int sp_Inv_SendMail_Reject(string sugID, Nullable<byte> step, string status)
        {
            var sugIDParameter = sugID != null ?
                new ObjectParameter("SugID", sugID) :
                new ObjectParameter("SugID", typeof(string));
    
            var stepParameter = step.HasValue ?
                new ObjectParameter("Step", step) :
                new ObjectParameter("Step", typeof(byte));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Inv_SendMail_Reject", sugIDParameter, stepParameter, statusParameter);
        }
    
        public virtual int sp_Inv_SentmailSubmitTasKProductTranfer2(string part, string iduser)
        {
            var partParameter = part != null ?
                new ObjectParameter("part", part) :
                new ObjectParameter("part", typeof(string));
    
            var iduserParameter = iduser != null ?
                new ObjectParameter("iduser", iduser) :
                new ObjectParameter("iduser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Inv_SentmailSubmitTasKProductTranfer2", partParameter, iduserParameter);
        }
    
        public virtual int sp_PART_REJECT_Insert2(string cCN, string iTEM, string dRAW_REV, string rEV, string user, string com)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var comParameter = com != null ?
                new ObjectParameter("com", com) :
                new ObjectParameter("com", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PART_REJECT_Insert2", cCNParameter, iTEMParameter, dRAW_REVParameter, rEVParameter, userParameter, comParameter);
        }
    
        public virtual int sp_RemindCompleteTask_Not_NCR2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RemindCompleteTask_Not_NCR2");
        }
    
        public virtual int sp_RemindPO_DOC_Email1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RemindPO_DOC_Email1");
        }
    
        public virtual ObjectResult<sp_Report_MonthIQC_TEM2_Result> sp_Report_MonthIQC_TEM2(string ccn, Nullable<System.DateTime> f, Nullable<System.DateTime> t)
        {
            var ccnParameter = ccn != null ?
                new ObjectParameter("ccn", ccn) :
                new ObjectParameter("ccn", typeof(string));
    
            var fParameter = f.HasValue ?
                new ObjectParameter("f", f) :
                new ObjectParameter("f", typeof(System.DateTime));
    
            var tParameter = t.HasValue ?
                new ObjectParameter("t", t) :
                new ObjectParameter("t", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Report_MonthIQC_TEM2_Result>("sp_Report_MonthIQC_TEM2", ccnParameter, fParameter, tParameter);
        }
    
        public virtual int sp_Report_OTD_Supplier_byMonth2(string viewBy, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string supType, string sup, string part)
        {
            var viewByParameter = viewBy != null ?
                new ObjectParameter("ViewBy", viewBy) :
                new ObjectParameter("ViewBy", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var supTypeParameter = supType != null ?
                new ObjectParameter("SupType", supType) :
                new ObjectParameter("SupType", typeof(string));
    
            var supParameter = sup != null ?
                new ObjectParameter("Sup", sup) :
                new ObjectParameter("Sup", typeof(string));
    
            var partParameter = part != null ?
                new ObjectParameter("Part", part) :
                new ObjectParameter("Part", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Report_OTD_Supplier_byMonth2", viewByParameter, fromParameter, toParameter, supTypeParameter, supParameter, partParameter);
        }
    
        public virtual ObjectResult<sp_Report_PPM_Supplier_byMonth2_Result> sp_Report_PPM_Supplier_byMonth2(string viewBy, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string supType, string sup, string part)
        {
            var viewByParameter = viewBy != null ?
                new ObjectParameter("ViewBy", viewBy) :
                new ObjectParameter("ViewBy", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var supTypeParameter = supType != null ?
                new ObjectParameter("SupType", supType) :
                new ObjectParameter("SupType", typeof(string));
    
            var supParameter = sup != null ?
                new ObjectParameter("Sup", sup) :
                new ObjectParameter("Sup", typeof(string));
    
            var partParameter = part != null ?
                new ObjectParameter("Part", part) :
                new ObjectParameter("Part", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Report_PPM_Supplier_byMonth2_Result>("sp_Report_PPM_Supplier_byMonth2", viewByParameter, fromParameter, toParameter, supTypeParameter, supParameter, partParameter);
        }
    
        public virtual ObjectResult<getlistproducttraanfer_Result> getlistproducttraanfer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getlistproducttraanfer_Result>("getlistproducttraanfer");
        }
    
        public virtual ObjectResult<p_DOC_by_PO_View3_Result> p_DOC_by_PO_View3(Nullable<System.DateTime> f, Nullable<System.DateTime> t)
        {
            var fParameter = f.HasValue ?
                new ObjectParameter("f", f) :
                new ObjectParameter("f", typeof(System.DateTime));
    
            var tParameter = t.HasValue ?
                new ObjectParameter("t", t) :
                new ObjectParameter("t", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_DOC_by_PO_View3_Result>("p_DOC_by_PO_View3", fParameter, tParameter);
        }
    
        public virtual int p_merge_DESCRIPTION_Temp3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_DESCRIPTION_Temp3");
        }
    
        public virtual int p_merge_OTD_Report3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_OTD_Report3");
        }
    
        public virtual int p_merge_PO_Need_CoC_4_IQC3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_PO_Need_CoC_4_IQC3");
        }
    
        public virtual int p_merge_STDCOST3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_STDCOST3");
        }
    
        public virtual int p_merge_VENDOR_Temp3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_VENDOR_Temp3");
        }
    
        public virtual int pList_Shorted3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pList_Shorted3");
        }
    
        public virtual int sp_ATTACHMENT_Insert3(string rECEIVER, string rEC_LINE, string fILE_NAME, string aTT_FILE, string uSER_, Nullable<System.DateTime> uSER_DATE, string pC_NAME, string tYPE_REQ, Nullable<System.DateTime> entryDate, string operatorID, string remark, string result, string cCN, Nullable<int> status)
        {
            var rECEIVERParameter = rECEIVER != null ?
                new ObjectParameter("RECEIVER", rECEIVER) :
                new ObjectParameter("RECEIVER", typeof(string));
    
            var rEC_LINEParameter = rEC_LINE != null ?
                new ObjectParameter("REC_LINE", rEC_LINE) :
                new ObjectParameter("REC_LINE", typeof(string));
    
            var fILE_NAMEParameter = fILE_NAME != null ?
                new ObjectParameter("FILE_NAME", fILE_NAME) :
                new ObjectParameter("FILE_NAME", typeof(string));
    
            var aTT_FILEParameter = aTT_FILE != null ?
                new ObjectParameter("ATT_FILE", aTT_FILE) :
                new ObjectParameter("ATT_FILE", typeof(string));
    
            var uSER_Parameter = uSER_ != null ?
                new ObjectParameter("USER_", uSER_) :
                new ObjectParameter("USER_", typeof(string));
    
            var uSER_DATEParameter = uSER_DATE.HasValue ?
                new ObjectParameter("USER_DATE", uSER_DATE) :
                new ObjectParameter("USER_DATE", typeof(System.DateTime));
    
            var pC_NAMEParameter = pC_NAME != null ?
                new ObjectParameter("PC_NAME", pC_NAME) :
                new ObjectParameter("PC_NAME", typeof(string));
    
            var tYPE_REQParameter = tYPE_REQ != null ?
                new ObjectParameter("TYPE_REQ", tYPE_REQ) :
                new ObjectParameter("TYPE_REQ", typeof(string));
    
            var entryDateParameter = entryDate.HasValue ?
                new ObjectParameter("EntryDate", entryDate) :
                new ObjectParameter("EntryDate", typeof(System.DateTime));
    
            var operatorIDParameter = operatorID != null ?
                new ObjectParameter("OperatorID", operatorID) :
                new ObjectParameter("OperatorID", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ATTACHMENT_Insert3", rECEIVERParameter, rEC_LINEParameter, fILE_NAMEParameter, aTT_FILEParameter, uSER_Parameter, uSER_DATEParameter, pC_NAMEParameter, tYPE_REQParameter, entryDateParameter, operatorIDParameter, remarkParameter, resultParameter, cCNParameter, statusParameter);
        }
    
        public virtual int sp_autoGetDOC3(string cCN, string iTEM, string pO, string pOLine, string vENDOR, string inspector, string drawREV, string rev, string receiver, string recline, string pc)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var pOParameter = pO != null ?
                new ObjectParameter("PO", pO) :
                new ObjectParameter("PO", typeof(string));
    
            var pOLineParameter = pOLine != null ?
                new ObjectParameter("POLine", pOLine) :
                new ObjectParameter("POLine", typeof(string));
    
            var vENDORParameter = vENDOR != null ?
                new ObjectParameter("VENDOR", vENDOR) :
                new ObjectParameter("VENDOR", typeof(string));
    
            var inspectorParameter = inspector != null ?
                new ObjectParameter("inspector", inspector) :
                new ObjectParameter("inspector", typeof(string));
    
            var drawREVParameter = drawREV != null ?
                new ObjectParameter("drawREV", drawREV) :
                new ObjectParameter("drawREV", typeof(string));
    
            var revParameter = rev != null ?
                new ObjectParameter("rev", rev) :
                new ObjectParameter("rev", typeof(string));
    
            var receiverParameter = receiver != null ?
                new ObjectParameter("receiver", receiver) :
                new ObjectParameter("receiver", typeof(string));
    
            var reclineParameter = recline != null ?
                new ObjectParameter("recline", recline) :
                new ObjectParameter("recline", typeof(string));
    
            var pcParameter = pc != null ?
                new ObjectParameter("pc", pc) :
                new ObjectParameter("pc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_autoGetDOC3", cCNParameter, iTEMParameter, pOParameter, pOLineParameter, vENDORParameter, inspectorParameter, drawREVParameter, revParameter, receiverParameter, reclineParameter, pcParameter);
        }
    
        public virtual ObjectResult<sp_CheckDOC2_Result> sp_CheckDOC2(string cCN, string iTEM, string pO, string pOLine, string vENDOR, string inspector, string drawREV, string rev, string receiver, string recline, string pc)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var pOParameter = pO != null ?
                new ObjectParameter("PO", pO) :
                new ObjectParameter("PO", typeof(string));
    
            var pOLineParameter = pOLine != null ?
                new ObjectParameter("POLine", pOLine) :
                new ObjectParameter("POLine", typeof(string));
    
            var vENDORParameter = vENDOR != null ?
                new ObjectParameter("VENDOR", vENDOR) :
                new ObjectParameter("VENDOR", typeof(string));
    
            var inspectorParameter = inspector != null ?
                new ObjectParameter("inspector", inspector) :
                new ObjectParameter("inspector", typeof(string));
    
            var drawREVParameter = drawREV != null ?
                new ObjectParameter("drawREV", drawREV) :
                new ObjectParameter("drawREV", typeof(string));
    
            var revParameter = rev != null ?
                new ObjectParameter("rev", rev) :
                new ObjectParameter("rev", typeof(string));
    
            var receiverParameter = receiver != null ?
                new ObjectParameter("receiver", receiver) :
                new ObjectParameter("receiver", typeof(string));
    
            var reclineParameter = recline != null ?
                new ObjectParameter("recline", recline) :
                new ObjectParameter("recline", typeof(string));
    
            var pcParameter = pc != null ?
                new ObjectParameter("pc", pc) :
                new ObjectParameter("pc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CheckDOC2_Result>("sp_CheckDOC2", cCNParameter, iTEMParameter, pOParameter, pOLineParameter, vENDORParameter, inspectorParameter, drawREVParameter, revParameter, receiverParameter, reclineParameter, pcParameter);
        }
    
        public virtual int sp_Dashboard_PerformanceIQC3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Dashboard_PerformanceIQC3");
        }
    
        public virtual ObjectResult<sp_DOC_by_ITEM3_Result> sp_DOC_by_ITEM3(string item)
        {
            var itemParameter = item != null ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DOC_by_ITEM3_Result>("sp_DOC_by_ITEM3", itemParameter);
        }
    
        public virtual int sp_DOC_by_ITEM_Insert3(string item, string vendorName, string vendorNo, string cCN, string requiredDOC, string pathDOC, Nullable<System.DateTime> expiredDate, string uploadUser)
        {
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var vendorNameParameter = vendorName != null ?
                new ObjectParameter("VendorName", vendorName) :
                new ObjectParameter("VendorName", typeof(string));
    
            var vendorNoParameter = vendorNo != null ?
                new ObjectParameter("VendorNo", vendorNo) :
                new ObjectParameter("VendorNo", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var requiredDOCParameter = requiredDOC != null ?
                new ObjectParameter("RequiredDOC", requiredDOC) :
                new ObjectParameter("RequiredDOC", typeof(string));
    
            var pathDOCParameter = pathDOC != null ?
                new ObjectParameter("PathDOC", pathDOC) :
                new ObjectParameter("PathDOC", typeof(string));
    
            var expiredDateParameter = expiredDate.HasValue ?
                new ObjectParameter("ExpiredDate", expiredDate) :
                new ObjectParameter("ExpiredDate", typeof(System.DateTime));
    
            var uploadUserParameter = uploadUser != null ?
                new ObjectParameter("UploadUser", uploadUser) :
                new ObjectParameter("UploadUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_ITEM_Insert3", itemParameter, vendorNameParameter, vendorNoParameter, cCNParameter, requiredDOCParameter, pathDOCParameter, expiredDateParameter, uploadUserParameter);
        }
    
        public virtual int sp_DOC_by_ITEM_Reject3(string item, string vendorNo, string cCN, string requiredDOC)
        {
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var vendorNoParameter = vendorNo != null ?
                new ObjectParameter("VendorNo", vendorNo) :
                new ObjectParameter("VendorNo", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var requiredDOCParameter = requiredDOC != null ?
                new ObjectParameter("RequiredDOC", requiredDOC) :
                new ObjectParameter("RequiredDOC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_ITEM_Reject3", itemParameter, vendorNoParameter, cCNParameter, requiredDOCParameter);
        }
    
        public virtual int sp_DOC_by_ITEM_Verify3(string item, string vendorNo, string cCN, string requiredDOC, string verifiedDocUser)
        {
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var vendorNoParameter = vendorNo != null ?
                new ObjectParameter("VendorNo", vendorNo) :
                new ObjectParameter("VendorNo", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var requiredDOCParameter = requiredDOC != null ?
                new ObjectParameter("RequiredDOC", requiredDOC) :
                new ObjectParameter("RequiredDOC", typeof(string));
    
            var verifiedDocUserParameter = verifiedDocUser != null ?
                new ObjectParameter("VerifiedDocUser", verifiedDocUser) :
                new ObjectParameter("VerifiedDocUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_ITEM_Verify3", itemParameter, vendorNoParameter, cCNParameter, requiredDOCParameter, verifiedDocUserParameter);
        }
    
        public virtual ObjectResult<sp_DOC_by_PO_Reject3_Result> sp_DOC_by_PO_Reject3(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DOC_by_PO_Reject3_Result>("sp_DOC_by_PO_Reject3", iDParameter);
        }
    
        public virtual int sp_DOC_by_PO_Upload3(Nullable<int> iD, string pathDOC, string uploadUser)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var pathDOCParameter = pathDOC != null ?
                new ObjectParameter("PathDOC", pathDOC) :
                new ObjectParameter("PathDOC", typeof(string));
    
            var uploadUserParameter = uploadUser != null ?
                new ObjectParameter("UploadUser", uploadUser) :
                new ObjectParameter("UploadUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_PO_Upload3", iDParameter, pathDOCParameter, uploadUserParameter);
        }
    
        public virtual int sp_DOC_by_PO_Verify3(Nullable<int> iD, string verifiedDocUser)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verifiedDocUserParameter = verifiedDocUser != null ?
                new ObjectParameter("VerifiedDocUser", verifiedDocUser) :
                new ObjectParameter("VerifiedDocUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_PO_Verify3", iDParameter, verifiedDocUserParameter);
        }
    
        public virtual ObjectResult<sp_Export_GuideLine3_Result> sp_Export_GuideLine3(string cCN, string iTEM, string drawREV, string rEV)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var drawREVParameter = drawREV != null ?
                new ObjectParameter("DrawREV", drawREV) :
                new ObjectParameter("DrawREV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Export_GuideLine3_Result>("sp_Export_GuideLine3", cCNParameter, iTEMParameter, drawREVParameter, rEVParameter);
        }
    
        public virtual ObjectResult<sp_Get_ListPart_Approve3_Result> sp_Get_ListPart_Approve3(string cCN, string iTEM, string dRAW_REV, string rEV, string approve)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            var approveParameter = approve != null ?
                new ObjectParameter("Approve", approve) :
                new ObjectParameter("Approve", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Get_ListPart_Approve3_Result>("sp_Get_ListPart_Approve3", cCNParameter, iTEMParameter, dRAW_REVParameter, rEVParameter, approveParameter);
        }
    
        public virtual ObjectResult<string> sp_getListDOC_ITEM3(string item)
        {
            var itemParameter = item != null ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_getListDOC_ITEM3", itemParameter);
        }
    
        public virtual ObjectResult<sp_getListITEM_CCN3_Result> sp_getListITEM_CCN3(string ccn)
        {
            var ccnParameter = ccn != null ?
                new ObjectParameter("ccn", ccn) :
                new ObjectParameter("ccn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getListITEM_CCN3_Result>("sp_getListITEM_CCN3", ccnParameter);
        }
    
        public virtual ObjectResult<sp_getListVENDOR_ITEM3_Result> sp_getListVENDOR_ITEM3(string item)
        {
            var itemParameter = item != null ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getListVENDOR_ITEM3_Result>("sp_getListVENDOR_ITEM3", itemParameter);
        }
    
        public virtual ObjectResult<string> sp_GetPartOTD3(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GetPartOTD3", fromParameter, toParameter);
        }
    
        public virtual int sp_GetSupplier3(string type, Nullable<System.DateTime> f, Nullable<System.DateTime> t)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var fParameter = f.HasValue ?
                new ObjectParameter("f", f) :
                new ObjectParameter("f", typeof(System.DateTime));
    
            var tParameter = t.HasValue ?
                new ObjectParameter("t", t) :
                new ObjectParameter("t", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetSupplier3", typeParameter, fParameter, tParameter);
        }
    
        public virtual int sp_GetSupplierOTD3(string type, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetSupplierOTD3", typeParameter, fromParameter, toParameter);
        }
    
        public virtual int sp_Import_VENDOR3(string cCN, string vENDOR, string pUR_LOC, string vEN_NAM, string aDDRESS, string sTATE, string zIP, string cTRY, string cONTACT, string eMAIL, string fAX, string tEL)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var vENDORParameter = vENDOR != null ?
                new ObjectParameter("VENDOR", vENDOR) :
                new ObjectParameter("VENDOR", typeof(string));
    
            var pUR_LOCParameter = pUR_LOC != null ?
                new ObjectParameter("PUR_LOC", pUR_LOC) :
                new ObjectParameter("PUR_LOC", typeof(string));
    
            var vEN_NAMParameter = vEN_NAM != null ?
                new ObjectParameter("VEN_NAM", vEN_NAM) :
                new ObjectParameter("VEN_NAM", typeof(string));
    
            var aDDRESSParameter = aDDRESS != null ?
                new ObjectParameter("ADDRESS", aDDRESS) :
                new ObjectParameter("ADDRESS", typeof(string));
    
            var sTATEParameter = sTATE != null ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(string));
    
            var zIPParameter = zIP != null ?
                new ObjectParameter("ZIP", zIP) :
                new ObjectParameter("ZIP", typeof(string));
    
            var cTRYParameter = cTRY != null ?
                new ObjectParameter("CTRY", cTRY) :
                new ObjectParameter("CTRY", typeof(string));
    
            var cONTACTParameter = cONTACT != null ?
                new ObjectParameter("CONTACT", cONTACT) :
                new ObjectParameter("CONTACT", typeof(string));
    
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var fAXParameter = fAX != null ?
                new ObjectParameter("FAX", fAX) :
                new ObjectParameter("FAX", typeof(string));
    
            var tELParameter = tEL != null ?
                new ObjectParameter("TEL", tEL) :
                new ObjectParameter("TEL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Import_VENDOR3", cCNParameter, vENDORParameter, pUR_LOCParameter, vEN_NAMParameter, aDDRESSParameter, sTATEParameter, zIPParameter, cTRYParameter, cONTACTParameter, eMAILParameter, fAXParameter, tELParameter);
        }
    
        public virtual int sp_Import_VN_MATERIAL_SHORTAGE_4_DASHBOARD3(string wC, string item, string wONum, Nullable<decimal> orderQty, Nullable<decimal> completedQty, Nullable<System.DateTime> openDate, Nullable<System.DateTime> startDate, Nullable<System.DateTime> dueDate, string componentPart, string componentDescription, string flrStk, string anlst, string uM, Nullable<decimal> reqrdQty, Nullable<decimal> commQty, Nullable<decimal> issueQty, Nullable<decimal> sHORTQty, Nullable<decimal> totalOnHand, string shortage, Nullable<decimal> balanceRemains, Nullable<decimal> totalINSRIN, Nullable<decimal> totalVNSTK, Nullable<decimal> totalFLRSTK, Nullable<decimal> totalVNFIN, string wOstatus)
        {
            var wCParameter = wC != null ?
                new ObjectParameter("WC", wC) :
                new ObjectParameter("WC", typeof(string));
    
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var wONumParameter = wONum != null ?
                new ObjectParameter("WONum", wONum) :
                new ObjectParameter("WONum", typeof(string));
    
            var orderQtyParameter = orderQty.HasValue ?
                new ObjectParameter("OrderQty", orderQty) :
                new ObjectParameter("OrderQty", typeof(decimal));
    
            var completedQtyParameter = completedQty.HasValue ?
                new ObjectParameter("CompletedQty", completedQty) :
                new ObjectParameter("CompletedQty", typeof(decimal));
    
            var openDateParameter = openDate.HasValue ?
                new ObjectParameter("OpenDate", openDate) :
                new ObjectParameter("OpenDate", typeof(System.DateTime));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var dueDateParameter = dueDate.HasValue ?
                new ObjectParameter("DueDate", dueDate) :
                new ObjectParameter("DueDate", typeof(System.DateTime));
    
            var componentPartParameter = componentPart != null ?
                new ObjectParameter("ComponentPart", componentPart) :
                new ObjectParameter("ComponentPart", typeof(string));
    
            var componentDescriptionParameter = componentDescription != null ?
                new ObjectParameter("ComponentDescription", componentDescription) :
                new ObjectParameter("ComponentDescription", typeof(string));
    
            var flrStkParameter = flrStk != null ?
                new ObjectParameter("FlrStk", flrStk) :
                new ObjectParameter("FlrStk", typeof(string));
    
            var anlstParameter = anlst != null ?
                new ObjectParameter("Anlst", anlst) :
                new ObjectParameter("Anlst", typeof(string));
    
            var uMParameter = uM != null ?
                new ObjectParameter("UM", uM) :
                new ObjectParameter("UM", typeof(string));
    
            var reqrdQtyParameter = reqrdQty.HasValue ?
                new ObjectParameter("ReqrdQty", reqrdQty) :
                new ObjectParameter("ReqrdQty", typeof(decimal));
    
            var commQtyParameter = commQty.HasValue ?
                new ObjectParameter("CommQty", commQty) :
                new ObjectParameter("CommQty", typeof(decimal));
    
            var issueQtyParameter = issueQty.HasValue ?
                new ObjectParameter("IssueQty", issueQty) :
                new ObjectParameter("IssueQty", typeof(decimal));
    
            var sHORTQtyParameter = sHORTQty.HasValue ?
                new ObjectParameter("SHORTQty", sHORTQty) :
                new ObjectParameter("SHORTQty", typeof(decimal));
    
            var totalOnHandParameter = totalOnHand.HasValue ?
                new ObjectParameter("TotalOnHand", totalOnHand) :
                new ObjectParameter("TotalOnHand", typeof(decimal));
    
            var shortageParameter = shortage != null ?
                new ObjectParameter("shortage", shortage) :
                new ObjectParameter("shortage", typeof(string));
    
            var balanceRemainsParameter = balanceRemains.HasValue ?
                new ObjectParameter("BalanceRemains", balanceRemains) :
                new ObjectParameter("BalanceRemains", typeof(decimal));
    
            var totalINSRINParameter = totalINSRIN.HasValue ?
                new ObjectParameter("TotalINSRIN", totalINSRIN) :
                new ObjectParameter("TotalINSRIN", typeof(decimal));
    
            var totalVNSTKParameter = totalVNSTK.HasValue ?
                new ObjectParameter("TotalVNSTK", totalVNSTK) :
                new ObjectParameter("TotalVNSTK", typeof(decimal));
    
            var totalFLRSTKParameter = totalFLRSTK.HasValue ?
                new ObjectParameter("TotalFLRSTK", totalFLRSTK) :
                new ObjectParameter("TotalFLRSTK", typeof(decimal));
    
            var totalVNFINParameter = totalVNFIN.HasValue ?
                new ObjectParameter("TotalVNFIN", totalVNFIN) :
                new ObjectParameter("TotalVNFIN", typeof(decimal));
    
            var wOstatusParameter = wOstatus != null ?
                new ObjectParameter("WOstatus", wOstatus) :
                new ObjectParameter("WOstatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Import_VN_MATERIAL_SHORTAGE_4_DASHBOARD3", wCParameter, itemParameter, wONumParameter, orderQtyParameter, completedQtyParameter, openDateParameter, startDateParameter, dueDateParameter, componentPartParameter, componentDescriptionParameter, flrStkParameter, anlstParameter, uMParameter, reqrdQtyParameter, commQtyParameter, issueQtyParameter, sHORTQtyParameter, totalOnHandParameter, shortageParameter, balanceRemainsParameter, totalINSRINParameter, totalVNSTKParameter, totalFLRSTKParameter, totalVNFINParameter, wOstatusParameter);
        }
    
        public virtual int sp_Inv_SendMail1(string sugID, Nullable<byte> step, string status)
        {
            var sugIDParameter = sugID != null ?
                new ObjectParameter("SugID", sugID) :
                new ObjectParameter("SugID", typeof(string));
    
            var stepParameter = step.HasValue ?
                new ObjectParameter("Step", step) :
                new ObjectParameter("Step", typeof(byte));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Inv_SendMail1", sugIDParameter, stepParameter, statusParameter);
        }
    
        public virtual int sp_Inv_SentmailSubmitTasKProductTranfer3(string part, string iduser)
        {
            var partParameter = part != null ?
                new ObjectParameter("part", part) :
                new ObjectParameter("part", typeof(string));
    
            var iduserParameter = iduser != null ?
                new ObjectParameter("iduser", iduser) :
                new ObjectParameter("iduser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Inv_SentmailSubmitTasKProductTranfer3", partParameter, iduserParameter);
        }
    
        public virtual int sp_PART_REJECT_Insert3(string cCN, string iTEM, string dRAW_REV, string rEV, string user, string com)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var comParameter = com != null ?
                new ObjectParameter("com", com) :
                new ObjectParameter("com", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PART_REJECT_Insert3", cCNParameter, iTEMParameter, dRAW_REVParameter, rEVParameter, userParameter, comParameter);
        }
    
        public virtual int sp_RemindCompleteTask_Not_NCR3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RemindCompleteTask_Not_NCR3");
        }
    
        public virtual int sp_RemindPO_DOC_Email2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RemindPO_DOC_Email2");
        }
    
        public virtual ObjectResult<sp_Report_MonthIQC_TEM3_Result> sp_Report_MonthIQC_TEM3(string ccn, Nullable<System.DateTime> f, Nullable<System.DateTime> t)
        {
            var ccnParameter = ccn != null ?
                new ObjectParameter("ccn", ccn) :
                new ObjectParameter("ccn", typeof(string));
    
            var fParameter = f.HasValue ?
                new ObjectParameter("f", f) :
                new ObjectParameter("f", typeof(System.DateTime));
    
            var tParameter = t.HasValue ?
                new ObjectParameter("t", t) :
                new ObjectParameter("t", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Report_MonthIQC_TEM3_Result>("sp_Report_MonthIQC_TEM3", ccnParameter, fParameter, tParameter);
        }
    
        public virtual int sp_Report_OTD_Supplier_byMonth3(string viewBy, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string supType, string sup, string part)
        {
            var viewByParameter = viewBy != null ?
                new ObjectParameter("ViewBy", viewBy) :
                new ObjectParameter("ViewBy", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var supTypeParameter = supType != null ?
                new ObjectParameter("SupType", supType) :
                new ObjectParameter("SupType", typeof(string));
    
            var supParameter = sup != null ?
                new ObjectParameter("Sup", sup) :
                new ObjectParameter("Sup", typeof(string));
    
            var partParameter = part != null ?
                new ObjectParameter("Part", part) :
                new ObjectParameter("Part", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Report_OTD_Supplier_byMonth3", viewByParameter, fromParameter, toParameter, supTypeParameter, supParameter, partParameter);
        }
    
        public virtual int sp_Report_PPM_Supplier_byMonth3(string viewBy, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string supType, string sup, string part)
        {
            var viewByParameter = viewBy != null ?
                new ObjectParameter("ViewBy", viewBy) :
                new ObjectParameter("ViewBy", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var supTypeParameter = supType != null ?
                new ObjectParameter("SupType", supType) :
                new ObjectParameter("SupType", typeof(string));
    
            var supParameter = sup != null ?
                new ObjectParameter("Sup", sup) :
                new ObjectParameter("Sup", typeof(string));
    
            var partParameter = part != null ?
                new ObjectParameter("Part", part) :
                new ObjectParameter("Part", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Report_PPM_Supplier_byMonth3", viewByParameter, fromParameter, toParameter, supTypeParameter, supParameter, partParameter);
        }
    
        public virtual ObjectResult<sp_PT_GetProTransfer_List_Result> sp_PT_GetProTransfer_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PT_GetProTransfer_List_Result>("sp_PT_GetProTransfer_List");
        }
    
        public virtual ObjectResult<p_DOC_by_PO_View4_Result> p_DOC_by_PO_View4(Nullable<System.DateTime> f, Nullable<System.DateTime> t)
        {
            var fParameter = f.HasValue ?
                new ObjectParameter("f", f) :
                new ObjectParameter("f", typeof(System.DateTime));
    
            var tParameter = t.HasValue ?
                new ObjectParameter("t", t) :
                new ObjectParameter("t", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_DOC_by_PO_View4_Result>("p_DOC_by_PO_View4", fParameter, tParameter);
        }
    
        public virtual int p_merge_DESCRIPTION_Temp4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_DESCRIPTION_Temp4");
        }
    
        public virtual int p_merge_OTD_Report4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_OTD_Report4");
        }
    
        public virtual int p_merge_PO_Need_CoC_4_IQC4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_PO_Need_CoC_4_IQC4");
        }
    
        public virtual int p_merge_STDCOST4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_STDCOST4");
        }
    
        public virtual int p_merge_VENDOR_Temp4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_VENDOR_Temp4");
        }
    
        public virtual int pList_Shorted4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pList_Shorted4");
        }
    
        public virtual int sp_ATTACHMENT_Insert4(string rECEIVER, string rEC_LINE, string fILE_NAME, string aTT_FILE, string uSER_, Nullable<System.DateTime> uSER_DATE, string pC_NAME, string tYPE_REQ, Nullable<System.DateTime> entryDate, string operatorID, string remark, string result, string cCN, Nullable<int> status)
        {
            var rECEIVERParameter = rECEIVER != null ?
                new ObjectParameter("RECEIVER", rECEIVER) :
                new ObjectParameter("RECEIVER", typeof(string));
    
            var rEC_LINEParameter = rEC_LINE != null ?
                new ObjectParameter("REC_LINE", rEC_LINE) :
                new ObjectParameter("REC_LINE", typeof(string));
    
            var fILE_NAMEParameter = fILE_NAME != null ?
                new ObjectParameter("FILE_NAME", fILE_NAME) :
                new ObjectParameter("FILE_NAME", typeof(string));
    
            var aTT_FILEParameter = aTT_FILE != null ?
                new ObjectParameter("ATT_FILE", aTT_FILE) :
                new ObjectParameter("ATT_FILE", typeof(string));
    
            var uSER_Parameter = uSER_ != null ?
                new ObjectParameter("USER_", uSER_) :
                new ObjectParameter("USER_", typeof(string));
    
            var uSER_DATEParameter = uSER_DATE.HasValue ?
                new ObjectParameter("USER_DATE", uSER_DATE) :
                new ObjectParameter("USER_DATE", typeof(System.DateTime));
    
            var pC_NAMEParameter = pC_NAME != null ?
                new ObjectParameter("PC_NAME", pC_NAME) :
                new ObjectParameter("PC_NAME", typeof(string));
    
            var tYPE_REQParameter = tYPE_REQ != null ?
                new ObjectParameter("TYPE_REQ", tYPE_REQ) :
                new ObjectParameter("TYPE_REQ", typeof(string));
    
            var entryDateParameter = entryDate.HasValue ?
                new ObjectParameter("EntryDate", entryDate) :
                new ObjectParameter("EntryDate", typeof(System.DateTime));
    
            var operatorIDParameter = operatorID != null ?
                new ObjectParameter("OperatorID", operatorID) :
                new ObjectParameter("OperatorID", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ATTACHMENT_Insert4", rECEIVERParameter, rEC_LINEParameter, fILE_NAMEParameter, aTT_FILEParameter, uSER_Parameter, uSER_DATEParameter, pC_NAMEParameter, tYPE_REQParameter, entryDateParameter, operatorIDParameter, remarkParameter, resultParameter, cCNParameter, statusParameter);
        }
    
        public virtual int sp_autoGetDOC4(string cCN, string iTEM, string pO, string pOLine, string vENDOR, string inspector, string drawREV, string rev, string receiver, string recline, string pc)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var pOParameter = pO != null ?
                new ObjectParameter("PO", pO) :
                new ObjectParameter("PO", typeof(string));
    
            var pOLineParameter = pOLine != null ?
                new ObjectParameter("POLine", pOLine) :
                new ObjectParameter("POLine", typeof(string));
    
            var vENDORParameter = vENDOR != null ?
                new ObjectParameter("VENDOR", vENDOR) :
                new ObjectParameter("VENDOR", typeof(string));
    
            var inspectorParameter = inspector != null ?
                new ObjectParameter("inspector", inspector) :
                new ObjectParameter("inspector", typeof(string));
    
            var drawREVParameter = drawREV != null ?
                new ObjectParameter("drawREV", drawREV) :
                new ObjectParameter("drawREV", typeof(string));
    
            var revParameter = rev != null ?
                new ObjectParameter("rev", rev) :
                new ObjectParameter("rev", typeof(string));
    
            var receiverParameter = receiver != null ?
                new ObjectParameter("receiver", receiver) :
                new ObjectParameter("receiver", typeof(string));
    
            var reclineParameter = recline != null ?
                new ObjectParameter("recline", recline) :
                new ObjectParameter("recline", typeof(string));
    
            var pcParameter = pc != null ?
                new ObjectParameter("pc", pc) :
                new ObjectParameter("pc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_autoGetDOC4", cCNParameter, iTEMParameter, pOParameter, pOLineParameter, vENDORParameter, inspectorParameter, drawREVParameter, revParameter, receiverParameter, reclineParameter, pcParameter);
        }
    
        public virtual ObjectResult<sp_CheckDOC3_Result> sp_CheckDOC3(string cCN, string iTEM, string pO, string pOLine, string vENDOR, string inspector, string drawREV, string rev, string receiver, string recline, string pc)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var pOParameter = pO != null ?
                new ObjectParameter("PO", pO) :
                new ObjectParameter("PO", typeof(string));
    
            var pOLineParameter = pOLine != null ?
                new ObjectParameter("POLine", pOLine) :
                new ObjectParameter("POLine", typeof(string));
    
            var vENDORParameter = vENDOR != null ?
                new ObjectParameter("VENDOR", vENDOR) :
                new ObjectParameter("VENDOR", typeof(string));
    
            var inspectorParameter = inspector != null ?
                new ObjectParameter("inspector", inspector) :
                new ObjectParameter("inspector", typeof(string));
    
            var drawREVParameter = drawREV != null ?
                new ObjectParameter("drawREV", drawREV) :
                new ObjectParameter("drawREV", typeof(string));
    
            var revParameter = rev != null ?
                new ObjectParameter("rev", rev) :
                new ObjectParameter("rev", typeof(string));
    
            var receiverParameter = receiver != null ?
                new ObjectParameter("receiver", receiver) :
                new ObjectParameter("receiver", typeof(string));
    
            var reclineParameter = recline != null ?
                new ObjectParameter("recline", recline) :
                new ObjectParameter("recline", typeof(string));
    
            var pcParameter = pc != null ?
                new ObjectParameter("pc", pc) :
                new ObjectParameter("pc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CheckDOC3_Result>("sp_CheckDOC3", cCNParameter, iTEMParameter, pOParameter, pOLineParameter, vENDORParameter, inspectorParameter, drawREVParameter, revParameter, receiverParameter, reclineParameter, pcParameter);
        }
    
        public virtual int sp_Dashboard_PerformanceIQC4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Dashboard_PerformanceIQC4");
        }
    
        public virtual ObjectResult<sp_DOC_by_ITEM4_Result> sp_DOC_by_ITEM4(string item)
        {
            var itemParameter = item != null ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DOC_by_ITEM4_Result>("sp_DOC_by_ITEM4", itemParameter);
        }
    
        public virtual int sp_DOC_by_ITEM_Insert4(string item, string vendorName, string vendorNo, string cCN, string requiredDOC, string pathDOC, Nullable<System.DateTime> expiredDate, string uploadUser)
        {
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var vendorNameParameter = vendorName != null ?
                new ObjectParameter("VendorName", vendorName) :
                new ObjectParameter("VendorName", typeof(string));
    
            var vendorNoParameter = vendorNo != null ?
                new ObjectParameter("VendorNo", vendorNo) :
                new ObjectParameter("VendorNo", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var requiredDOCParameter = requiredDOC != null ?
                new ObjectParameter("RequiredDOC", requiredDOC) :
                new ObjectParameter("RequiredDOC", typeof(string));
    
            var pathDOCParameter = pathDOC != null ?
                new ObjectParameter("PathDOC", pathDOC) :
                new ObjectParameter("PathDOC", typeof(string));
    
            var expiredDateParameter = expiredDate.HasValue ?
                new ObjectParameter("ExpiredDate", expiredDate) :
                new ObjectParameter("ExpiredDate", typeof(System.DateTime));
    
            var uploadUserParameter = uploadUser != null ?
                new ObjectParameter("UploadUser", uploadUser) :
                new ObjectParameter("UploadUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_ITEM_Insert4", itemParameter, vendorNameParameter, vendorNoParameter, cCNParameter, requiredDOCParameter, pathDOCParameter, expiredDateParameter, uploadUserParameter);
        }
    
        public virtual int sp_DOC_by_ITEM_Reject4(string item, string vendorNo, string cCN, string requiredDOC)
        {
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var vendorNoParameter = vendorNo != null ?
                new ObjectParameter("VendorNo", vendorNo) :
                new ObjectParameter("VendorNo", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var requiredDOCParameter = requiredDOC != null ?
                new ObjectParameter("RequiredDOC", requiredDOC) :
                new ObjectParameter("RequiredDOC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_ITEM_Reject4", itemParameter, vendorNoParameter, cCNParameter, requiredDOCParameter);
        }
    
        public virtual int sp_DOC_by_ITEM_Verify4(string item, string vendorNo, string cCN, string requiredDOC, string verifiedDocUser)
        {
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var vendorNoParameter = vendorNo != null ?
                new ObjectParameter("VendorNo", vendorNo) :
                new ObjectParameter("VendorNo", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var requiredDOCParameter = requiredDOC != null ?
                new ObjectParameter("RequiredDOC", requiredDOC) :
                new ObjectParameter("RequiredDOC", typeof(string));
    
            var verifiedDocUserParameter = verifiedDocUser != null ?
                new ObjectParameter("VerifiedDocUser", verifiedDocUser) :
                new ObjectParameter("VerifiedDocUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_ITEM_Verify4", itemParameter, vendorNoParameter, cCNParameter, requiredDOCParameter, verifiedDocUserParameter);
        }
    
        public virtual ObjectResult<sp_DOC_by_PO_Reject4_Result> sp_DOC_by_PO_Reject4(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DOC_by_PO_Reject4_Result>("sp_DOC_by_PO_Reject4", iDParameter);
        }
    
        public virtual int sp_DOC_by_PO_Upload4(Nullable<int> iD, string pathDOC, string uploadUser)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var pathDOCParameter = pathDOC != null ?
                new ObjectParameter("PathDOC", pathDOC) :
                new ObjectParameter("PathDOC", typeof(string));
    
            var uploadUserParameter = uploadUser != null ?
                new ObjectParameter("UploadUser", uploadUser) :
                new ObjectParameter("UploadUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_PO_Upload4", iDParameter, pathDOCParameter, uploadUserParameter);
        }
    
        public virtual int sp_DOC_by_PO_Verify4(Nullable<int> iD, string verifiedDocUser)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verifiedDocUserParameter = verifiedDocUser != null ?
                new ObjectParameter("VerifiedDocUser", verifiedDocUser) :
                new ObjectParameter("VerifiedDocUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_PO_Verify4", iDParameter, verifiedDocUserParameter);
        }
    
        public virtual ObjectResult<sp_Export_GuideLine4_Result> sp_Export_GuideLine4(string cCN, string iTEM, string drawREV, string rEV)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var drawREVParameter = drawREV != null ?
                new ObjectParameter("DrawREV", drawREV) :
                new ObjectParameter("DrawREV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Export_GuideLine4_Result>("sp_Export_GuideLine4", cCNParameter, iTEMParameter, drawREVParameter, rEVParameter);
        }
    
        public virtual ObjectResult<sp_Get_ListPart_Approve4_Result> sp_Get_ListPart_Approve4(string cCN, string iTEM, string dRAW_REV, string rEV, string approve)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            var approveParameter = approve != null ?
                new ObjectParameter("Approve", approve) :
                new ObjectParameter("Approve", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Get_ListPart_Approve4_Result>("sp_Get_ListPart_Approve4", cCNParameter, iTEMParameter, dRAW_REVParameter, rEVParameter, approveParameter);
        }
    
        public virtual ObjectResult<string> sp_getListDOC_ITEM4(string item)
        {
            var itemParameter = item != null ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_getListDOC_ITEM4", itemParameter);
        }
    
        public virtual ObjectResult<sp_getListITEM_CCN4_Result> sp_getListITEM_CCN4(string ccn)
        {
            var ccnParameter = ccn != null ?
                new ObjectParameter("ccn", ccn) :
                new ObjectParameter("ccn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getListITEM_CCN4_Result>("sp_getListITEM_CCN4", ccnParameter);
        }
    
        public virtual ObjectResult<sp_getListVENDOR_ITEM4_Result> sp_getListVENDOR_ITEM4(string item)
        {
            var itemParameter = item != null ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getListVENDOR_ITEM4_Result>("sp_getListVENDOR_ITEM4", itemParameter);
        }
    
        public virtual ObjectResult<string> sp_GetPartOTD4(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GetPartOTD4", fromParameter, toParameter);
        }
    
        public virtual int sp_GetSupplier4(string type, Nullable<System.DateTime> f, Nullable<System.DateTime> t)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var fParameter = f.HasValue ?
                new ObjectParameter("f", f) :
                new ObjectParameter("f", typeof(System.DateTime));
    
            var tParameter = t.HasValue ?
                new ObjectParameter("t", t) :
                new ObjectParameter("t", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetSupplier4", typeParameter, fParameter, tParameter);
        }
    
        public virtual int sp_GetSupplierOTD4(string type, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetSupplierOTD4", typeParameter, fromParameter, toParameter);
        }
    
        public virtual int sp_Import_VENDOR4(string cCN, string vENDOR, string pUR_LOC, string vEN_NAM, string aDDRESS, string sTATE, string zIP, string cTRY, string cONTACT, string eMAIL, string fAX, string tEL)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var vENDORParameter = vENDOR != null ?
                new ObjectParameter("VENDOR", vENDOR) :
                new ObjectParameter("VENDOR", typeof(string));
    
            var pUR_LOCParameter = pUR_LOC != null ?
                new ObjectParameter("PUR_LOC", pUR_LOC) :
                new ObjectParameter("PUR_LOC", typeof(string));
    
            var vEN_NAMParameter = vEN_NAM != null ?
                new ObjectParameter("VEN_NAM", vEN_NAM) :
                new ObjectParameter("VEN_NAM", typeof(string));
    
            var aDDRESSParameter = aDDRESS != null ?
                new ObjectParameter("ADDRESS", aDDRESS) :
                new ObjectParameter("ADDRESS", typeof(string));
    
            var sTATEParameter = sTATE != null ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(string));
    
            var zIPParameter = zIP != null ?
                new ObjectParameter("ZIP", zIP) :
                new ObjectParameter("ZIP", typeof(string));
    
            var cTRYParameter = cTRY != null ?
                new ObjectParameter("CTRY", cTRY) :
                new ObjectParameter("CTRY", typeof(string));
    
            var cONTACTParameter = cONTACT != null ?
                new ObjectParameter("CONTACT", cONTACT) :
                new ObjectParameter("CONTACT", typeof(string));
    
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var fAXParameter = fAX != null ?
                new ObjectParameter("FAX", fAX) :
                new ObjectParameter("FAX", typeof(string));
    
            var tELParameter = tEL != null ?
                new ObjectParameter("TEL", tEL) :
                new ObjectParameter("TEL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Import_VENDOR4", cCNParameter, vENDORParameter, pUR_LOCParameter, vEN_NAMParameter, aDDRESSParameter, sTATEParameter, zIPParameter, cTRYParameter, cONTACTParameter, eMAILParameter, fAXParameter, tELParameter);
        }
    
        public virtual int sp_Import_VN_MATERIAL_SHORTAGE_4_DASHBOARD4(string wC, string item, string wONum, Nullable<decimal> orderQty, Nullable<decimal> completedQty, Nullable<System.DateTime> openDate, Nullable<System.DateTime> startDate, Nullable<System.DateTime> dueDate, string componentPart, string componentDescription, string flrStk, string anlst, string uM, Nullable<decimal> reqrdQty, Nullable<decimal> commQty, Nullable<decimal> issueQty, Nullable<decimal> sHORTQty, Nullable<decimal> totalOnHand, string shortage, Nullable<decimal> balanceRemains, Nullable<decimal> totalINSRIN, Nullable<decimal> totalVNSTK, Nullable<decimal> totalFLRSTK, Nullable<decimal> totalVNFIN, string wOstatus)
        {
            var wCParameter = wC != null ?
                new ObjectParameter("WC", wC) :
                new ObjectParameter("WC", typeof(string));
    
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var wONumParameter = wONum != null ?
                new ObjectParameter("WONum", wONum) :
                new ObjectParameter("WONum", typeof(string));
    
            var orderQtyParameter = orderQty.HasValue ?
                new ObjectParameter("OrderQty", orderQty) :
                new ObjectParameter("OrderQty", typeof(decimal));
    
            var completedQtyParameter = completedQty.HasValue ?
                new ObjectParameter("CompletedQty", completedQty) :
                new ObjectParameter("CompletedQty", typeof(decimal));
    
            var openDateParameter = openDate.HasValue ?
                new ObjectParameter("OpenDate", openDate) :
                new ObjectParameter("OpenDate", typeof(System.DateTime));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var dueDateParameter = dueDate.HasValue ?
                new ObjectParameter("DueDate", dueDate) :
                new ObjectParameter("DueDate", typeof(System.DateTime));
    
            var componentPartParameter = componentPart != null ?
                new ObjectParameter("ComponentPart", componentPart) :
                new ObjectParameter("ComponentPart", typeof(string));
    
            var componentDescriptionParameter = componentDescription != null ?
                new ObjectParameter("ComponentDescription", componentDescription) :
                new ObjectParameter("ComponentDescription", typeof(string));
    
            var flrStkParameter = flrStk != null ?
                new ObjectParameter("FlrStk", flrStk) :
                new ObjectParameter("FlrStk", typeof(string));
    
            var anlstParameter = anlst != null ?
                new ObjectParameter("Anlst", anlst) :
                new ObjectParameter("Anlst", typeof(string));
    
            var uMParameter = uM != null ?
                new ObjectParameter("UM", uM) :
                new ObjectParameter("UM", typeof(string));
    
            var reqrdQtyParameter = reqrdQty.HasValue ?
                new ObjectParameter("ReqrdQty", reqrdQty) :
                new ObjectParameter("ReqrdQty", typeof(decimal));
    
            var commQtyParameter = commQty.HasValue ?
                new ObjectParameter("CommQty", commQty) :
                new ObjectParameter("CommQty", typeof(decimal));
    
            var issueQtyParameter = issueQty.HasValue ?
                new ObjectParameter("IssueQty", issueQty) :
                new ObjectParameter("IssueQty", typeof(decimal));
    
            var sHORTQtyParameter = sHORTQty.HasValue ?
                new ObjectParameter("SHORTQty", sHORTQty) :
                new ObjectParameter("SHORTQty", typeof(decimal));
    
            var totalOnHandParameter = totalOnHand.HasValue ?
                new ObjectParameter("TotalOnHand", totalOnHand) :
                new ObjectParameter("TotalOnHand", typeof(decimal));
    
            var shortageParameter = shortage != null ?
                new ObjectParameter("shortage", shortage) :
                new ObjectParameter("shortage", typeof(string));
    
            var balanceRemainsParameter = balanceRemains.HasValue ?
                new ObjectParameter("BalanceRemains", balanceRemains) :
                new ObjectParameter("BalanceRemains", typeof(decimal));
    
            var totalINSRINParameter = totalINSRIN.HasValue ?
                new ObjectParameter("TotalINSRIN", totalINSRIN) :
                new ObjectParameter("TotalINSRIN", typeof(decimal));
    
            var totalVNSTKParameter = totalVNSTK.HasValue ?
                new ObjectParameter("TotalVNSTK", totalVNSTK) :
                new ObjectParameter("TotalVNSTK", typeof(decimal));
    
            var totalFLRSTKParameter = totalFLRSTK.HasValue ?
                new ObjectParameter("TotalFLRSTK", totalFLRSTK) :
                new ObjectParameter("TotalFLRSTK", typeof(decimal));
    
            var totalVNFINParameter = totalVNFIN.HasValue ?
                new ObjectParameter("TotalVNFIN", totalVNFIN) :
                new ObjectParameter("TotalVNFIN", typeof(decimal));
    
            var wOstatusParameter = wOstatus != null ?
                new ObjectParameter("WOstatus", wOstatus) :
                new ObjectParameter("WOstatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Import_VN_MATERIAL_SHORTAGE_4_DASHBOARD4", wCParameter, itemParameter, wONumParameter, orderQtyParameter, completedQtyParameter, openDateParameter, startDateParameter, dueDateParameter, componentPartParameter, componentDescriptionParameter, flrStkParameter, anlstParameter, uMParameter, reqrdQtyParameter, commQtyParameter, issueQtyParameter, sHORTQtyParameter, totalOnHandParameter, shortageParameter, balanceRemainsParameter, totalINSRINParameter, totalVNSTKParameter, totalFLRSTKParameter, totalVNFINParameter, wOstatusParameter);
        }
    
        public virtual int sp_Inv_SendMail2(string sugID, Nullable<byte> step, string status)
        {
            var sugIDParameter = sugID != null ?
                new ObjectParameter("SugID", sugID) :
                new ObjectParameter("SugID", typeof(string));
    
            var stepParameter = step.HasValue ?
                new ObjectParameter("Step", step) :
                new ObjectParameter("Step", typeof(byte));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Inv_SendMail2", sugIDParameter, stepParameter, statusParameter);
        }
    
        public virtual int sp_Inv_SendMail_Remind()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Inv_SendMail_Remind");
        }
    
        public virtual int sp_Inv_SentmailSubmitTasKProductTranfer4(string part, string iduser)
        {
            var partParameter = part != null ?
                new ObjectParameter("part", part) :
                new ObjectParameter("part", typeof(string));
    
            var iduserParameter = iduser != null ?
                new ObjectParameter("iduser", iduser) :
                new ObjectParameter("iduser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Inv_SentmailSubmitTasKProductTranfer4", partParameter, iduserParameter);
        }
    
        public virtual int sp_PART_REJECT_Insert4(string cCN, string iTEM, string dRAW_REV, string rEV, string user, string com)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var comParameter = com != null ?
                new ObjectParameter("com", com) :
                new ObjectParameter("com", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PART_REJECT_Insert4", cCNParameter, iTEMParameter, dRAW_REVParameter, rEVParameter, userParameter, comParameter);
        }
    
        public virtual int sp_RemindCompleteTask_Not_NCR4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RemindCompleteTask_Not_NCR4");
        }
    
        public virtual int sp_RemindPO_DOC_Email3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RemindPO_DOC_Email3");
        }
    
        public virtual int sp_Report_CheckAndLoadEvidence(string rec, string ccn)
        {
            var recParameter = rec != null ?
                new ObjectParameter("rec", rec) :
                new ObjectParameter("rec", typeof(string));
    
            var ccnParameter = ccn != null ?
                new ObjectParameter("ccn", ccn) :
                new ObjectParameter("ccn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Report_CheckAndLoadEvidence", recParameter, ccnParameter);
        }
    
        public virtual ObjectResult<sp_Report_MonthIQC_TEM4_Result> sp_Report_MonthIQC_TEM4(string ccn, Nullable<System.DateTime> f, Nullable<System.DateTime> t)
        {
            var ccnParameter = ccn != null ?
                new ObjectParameter("ccn", ccn) :
                new ObjectParameter("ccn", typeof(string));
    
            var fParameter = f.HasValue ?
                new ObjectParameter("f", f) :
                new ObjectParameter("f", typeof(System.DateTime));
    
            var tParameter = t.HasValue ?
                new ObjectParameter("t", t) :
                new ObjectParameter("t", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Report_MonthIQC_TEM4_Result>("sp_Report_MonthIQC_TEM4", ccnParameter, fParameter, tParameter);
        }
    
        public virtual int sp_Report_OTD_Supplier_byMonth4(string viewBy, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string supType, string sup, string part)
        {
            var viewByParameter = viewBy != null ?
                new ObjectParameter("ViewBy", viewBy) :
                new ObjectParameter("ViewBy", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var supTypeParameter = supType != null ?
                new ObjectParameter("SupType", supType) :
                new ObjectParameter("SupType", typeof(string));
    
            var supParameter = sup != null ?
                new ObjectParameter("Sup", sup) :
                new ObjectParameter("Sup", typeof(string));
    
            var partParameter = part != null ?
                new ObjectParameter("Part", part) :
                new ObjectParameter("Part", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Report_OTD_Supplier_byMonth4", viewByParameter, fromParameter, toParameter, supTypeParameter, supParameter, partParameter);
        }
    
        public virtual int sp_Report_PPM_Supplier_byMonth4(string viewBy, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string supType, string sup, string part)
        {
            var viewByParameter = viewBy != null ?
                new ObjectParameter("ViewBy", viewBy) :
                new ObjectParameter("ViewBy", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var supTypeParameter = supType != null ?
                new ObjectParameter("SupType", supType) :
                new ObjectParameter("SupType", typeof(string));
    
            var supParameter = sup != null ?
                new ObjectParameter("Sup", sup) :
                new ObjectParameter("Sup", typeof(string));
    
            var partParameter = part != null ?
                new ObjectParameter("Part", part) :
                new ObjectParameter("Part", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Report_PPM_Supplier_byMonth4", viewByParameter, fromParameter, toParameter, supTypeParameter, supParameter, partParameter);
        }
    
        public virtual int pLIST_PART_URGENT_RELEASE_FROM_IQC(string rec)
        {
            var recParameter = rec != null ?
                new ObjectParameter("rec", rec) :
                new ObjectParameter("rec", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pLIST_PART_URGENT_RELEASE_FROM_IQC", recParameter);
        }
    
        public virtual int p_Add_FAI(string rec, string recline, string ccn)
        {
            var recParameter = rec != null ?
                new ObjectParameter("rec", rec) :
                new ObjectParameter("rec", typeof(string));
    
            var reclineParameter = recline != null ?
                new ObjectParameter("recline", recline) :
                new ObjectParameter("recline", typeof(string));
    
            var ccnParameter = ccn != null ?
                new ObjectParameter("ccn", ccn) :
                new ObjectParameter("ccn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Add_FAI", recParameter, reclineParameter, ccnParameter);
        }
    
        public virtual int p_Approve_FAI(string rec, string ccn, string user)
        {
            var recParameter = rec != null ?
                new ObjectParameter("rec", rec) :
                new ObjectParameter("rec", typeof(string));
    
            var ccnParameter = ccn != null ?
                new ObjectParameter("ccn", ccn) :
                new ObjectParameter("ccn", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Approve_FAI", recParameter, ccnParameter, userParameter);
        }
    
        public virtual int p_FAI_Report(string rec, string line, string ccn)
        {
            var recParameter = rec != null ?
                new ObjectParameter("rec", rec) :
                new ObjectParameter("rec", typeof(string));
    
            var lineParameter = line != null ?
                new ObjectParameter("line", line) :
                new ObjectParameter("line", typeof(string));
    
            var ccnParameter = ccn != null ?
                new ObjectParameter("ccn", ccn) :
                new ObjectParameter("ccn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_FAI_Report", recParameter, lineParameter, ccnParameter);
        }
    
        public virtual int p_FAI_Report_Header(string rec, string line, string ccn)
        {
            var recParameter = rec != null ?
                new ObjectParameter("rec", rec) :
                new ObjectParameter("rec", typeof(string));
    
            var lineParameter = line != null ?
                new ObjectParameter("line", line) :
                new ObjectParameter("line", typeof(string));
    
            var ccnParameter = ccn != null ?
                new ObjectParameter("ccn", ccn) :
                new ObjectParameter("ccn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_FAI_Report_Header", recParameter, lineParameter, ccnParameter);
        }
    
        public virtual int sp_LaborScan(string operID, string action, string wC)
        {
            var operIDParameter = operID != null ?
                new ObjectParameter("OperID", operID) :
                new ObjectParameter("OperID", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var wCParameter = wC != null ?
                new ObjectParameter("WC", wC) :
                new ObjectParameter("WC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LaborScan", operIDParameter, actionParameter, wCParameter);
        }
    
        public virtual ObjectResult<getlistproducttraanfer1_Result> getlistproducttraanfer1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getlistproducttraanfer1_Result>("getlistproducttraanfer1");
        }
    
        public virtual ObjectResult<p_DOC_by_PO_View5_Result> p_DOC_by_PO_View5(Nullable<System.DateTime> f, Nullable<System.DateTime> t)
        {
            var fParameter = f.HasValue ?
                new ObjectParameter("f", f) :
                new ObjectParameter("f", typeof(System.DateTime));
    
            var tParameter = t.HasValue ?
                new ObjectParameter("t", t) :
                new ObjectParameter("t", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_DOC_by_PO_View5_Result>("p_DOC_by_PO_View5", fParameter, tParameter);
        }
    
        public virtual int p_FAI_Report1(string rec, string line, string ccn)
        {
            var recParameter = rec != null ?
                new ObjectParameter("rec", rec) :
                new ObjectParameter("rec", typeof(string));
    
            var lineParameter = line != null ?
                new ObjectParameter("line", line) :
                new ObjectParameter("line", typeof(string));
    
            var ccnParameter = ccn != null ?
                new ObjectParameter("ccn", ccn) :
                new ObjectParameter("ccn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_FAI_Report1", recParameter, lineParameter, ccnParameter);
        }
    
        public virtual int p_FAI_Report_Header1(string rec, string line, string ccn)
        {
            var recParameter = rec != null ?
                new ObjectParameter("rec", rec) :
                new ObjectParameter("rec", typeof(string));
    
            var lineParameter = line != null ?
                new ObjectParameter("line", line) :
                new ObjectParameter("line", typeof(string));
    
            var ccnParameter = ccn != null ?
                new ObjectParameter("ccn", ccn) :
                new ObjectParameter("ccn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_FAI_Report_Header1", recParameter, lineParameter, ccnParameter);
        }
    
        public virtual int p_merge_DESCRIPTION_Temp5()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_DESCRIPTION_Temp5");
        }
    
        public virtual int p_merge_OTD_Report5()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_OTD_Report5");
        }
    
        public virtual int p_merge_PO_Need_CoC_4_IQC5()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_PO_Need_CoC_4_IQC5");
        }
    
        public virtual int p_merge_STDCOST5()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_STDCOST5");
        }
    
        public virtual int p_merge_VENDOR_Temp5()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_merge_VENDOR_Temp5");
        }
    
        public virtual int p_REJECT_FAI(string rec, string recline, string ccn, string user, string com)
        {
            var recParameter = rec != null ?
                new ObjectParameter("rec", rec) :
                new ObjectParameter("rec", typeof(string));
    
            var reclineParameter = recline != null ?
                new ObjectParameter("recline", recline) :
                new ObjectParameter("recline", typeof(string));
    
            var ccnParameter = ccn != null ?
                new ObjectParameter("ccn", ccn) :
                new ObjectParameter("ccn", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var comParameter = com != null ?
                new ObjectParameter("com", com) :
                new ObjectParameter("com", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_REJECT_FAI", recParameter, reclineParameter, ccnParameter, userParameter, comParameter);
        }
    
        public virtual int p_SET_FAI(string rec, string recline, string ccn)
        {
            var recParameter = rec != null ?
                new ObjectParameter("rec", rec) :
                new ObjectParameter("rec", typeof(string));
    
            var reclineParameter = recline != null ?
                new ObjectParameter("recline", recline) :
                new ObjectParameter("recline", typeof(string));
    
            var ccnParameter = ccn != null ?
                new ObjectParameter("ccn", ccn) :
                new ObjectParameter("ccn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_SET_FAI", recParameter, reclineParameter, ccnParameter);
        }
    
        public virtual int pLIST_PART_URGENT_RELEASE_FROM_IQC1(string rec)
        {
            var recParameter = rec != null ?
                new ObjectParameter("rec", rec) :
                new ObjectParameter("rec", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pLIST_PART_URGENT_RELEASE_FROM_IQC1", recParameter);
        }
    
        public virtual int pList_Shorted5()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pList_Shorted5");
        }
    
        public virtual int sp_ATTACHMENT_Insert5(string rECEIVER, string rEC_LINE, string fILE_NAME, string aTT_FILE, string uSER_, Nullable<System.DateTime> uSER_DATE, string pC_NAME, string tYPE_REQ, Nullable<System.DateTime> entryDate, string operatorID, string remark, string result, string cCN, Nullable<int> status)
        {
            var rECEIVERParameter = rECEIVER != null ?
                new ObjectParameter("RECEIVER", rECEIVER) :
                new ObjectParameter("RECEIVER", typeof(string));
    
            var rEC_LINEParameter = rEC_LINE != null ?
                new ObjectParameter("REC_LINE", rEC_LINE) :
                new ObjectParameter("REC_LINE", typeof(string));
    
            var fILE_NAMEParameter = fILE_NAME != null ?
                new ObjectParameter("FILE_NAME", fILE_NAME) :
                new ObjectParameter("FILE_NAME", typeof(string));
    
            var aTT_FILEParameter = aTT_FILE != null ?
                new ObjectParameter("ATT_FILE", aTT_FILE) :
                new ObjectParameter("ATT_FILE", typeof(string));
    
            var uSER_Parameter = uSER_ != null ?
                new ObjectParameter("USER_", uSER_) :
                new ObjectParameter("USER_", typeof(string));
    
            var uSER_DATEParameter = uSER_DATE.HasValue ?
                new ObjectParameter("USER_DATE", uSER_DATE) :
                new ObjectParameter("USER_DATE", typeof(System.DateTime));
    
            var pC_NAMEParameter = pC_NAME != null ?
                new ObjectParameter("PC_NAME", pC_NAME) :
                new ObjectParameter("PC_NAME", typeof(string));
    
            var tYPE_REQParameter = tYPE_REQ != null ?
                new ObjectParameter("TYPE_REQ", tYPE_REQ) :
                new ObjectParameter("TYPE_REQ", typeof(string));
    
            var entryDateParameter = entryDate.HasValue ?
                new ObjectParameter("EntryDate", entryDate) :
                new ObjectParameter("EntryDate", typeof(System.DateTime));
    
            var operatorIDParameter = operatorID != null ?
                new ObjectParameter("OperatorID", operatorID) :
                new ObjectParameter("OperatorID", typeof(string));
    
            var remarkParameter = remark != null ?
                new ObjectParameter("Remark", remark) :
                new ObjectParameter("Remark", typeof(string));
    
            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ATTACHMENT_Insert5", rECEIVERParameter, rEC_LINEParameter, fILE_NAMEParameter, aTT_FILEParameter, uSER_Parameter, uSER_DATEParameter, pC_NAMEParameter, tYPE_REQParameter, entryDateParameter, operatorIDParameter, remarkParameter, resultParameter, cCNParameter, statusParameter);
        }
    
        public virtual int sp_autoGetDOC5(string cCN, string iTEM, string pO, string pOLine, string vENDOR, string inspector, string drawREV, string rev, string receiver, string recline, string pc)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var pOParameter = pO != null ?
                new ObjectParameter("PO", pO) :
                new ObjectParameter("PO", typeof(string));
    
            var pOLineParameter = pOLine != null ?
                new ObjectParameter("POLine", pOLine) :
                new ObjectParameter("POLine", typeof(string));
    
            var vENDORParameter = vENDOR != null ?
                new ObjectParameter("VENDOR", vENDOR) :
                new ObjectParameter("VENDOR", typeof(string));
    
            var inspectorParameter = inspector != null ?
                new ObjectParameter("inspector", inspector) :
                new ObjectParameter("inspector", typeof(string));
    
            var drawREVParameter = drawREV != null ?
                new ObjectParameter("drawREV", drawREV) :
                new ObjectParameter("drawREV", typeof(string));
    
            var revParameter = rev != null ?
                new ObjectParameter("rev", rev) :
                new ObjectParameter("rev", typeof(string));
    
            var receiverParameter = receiver != null ?
                new ObjectParameter("receiver", receiver) :
                new ObjectParameter("receiver", typeof(string));
    
            var reclineParameter = recline != null ?
                new ObjectParameter("recline", recline) :
                new ObjectParameter("recline", typeof(string));
    
            var pcParameter = pc != null ?
                new ObjectParameter("pc", pc) :
                new ObjectParameter("pc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_autoGetDOC5", cCNParameter, iTEMParameter, pOParameter, pOLineParameter, vENDORParameter, inspectorParameter, drawREVParameter, revParameter, receiverParameter, reclineParameter, pcParameter);
        }
    
        public virtual ObjectResult<sp_CheckDOC4_Result> sp_CheckDOC4(string cCN, string iTEM, string pO, string pOLine, string vENDOR, string inspector, string drawREV, string rev, string receiver, string recline, string pc)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var pOParameter = pO != null ?
                new ObjectParameter("PO", pO) :
                new ObjectParameter("PO", typeof(string));
    
            var pOLineParameter = pOLine != null ?
                new ObjectParameter("POLine", pOLine) :
                new ObjectParameter("POLine", typeof(string));
    
            var vENDORParameter = vENDOR != null ?
                new ObjectParameter("VENDOR", vENDOR) :
                new ObjectParameter("VENDOR", typeof(string));
    
            var inspectorParameter = inspector != null ?
                new ObjectParameter("inspector", inspector) :
                new ObjectParameter("inspector", typeof(string));
    
            var drawREVParameter = drawREV != null ?
                new ObjectParameter("drawREV", drawREV) :
                new ObjectParameter("drawREV", typeof(string));
    
            var revParameter = rev != null ?
                new ObjectParameter("rev", rev) :
                new ObjectParameter("rev", typeof(string));
    
            var receiverParameter = receiver != null ?
                new ObjectParameter("receiver", receiver) :
                new ObjectParameter("receiver", typeof(string));
    
            var reclineParameter = recline != null ?
                new ObjectParameter("recline", recline) :
                new ObjectParameter("recline", typeof(string));
    
            var pcParameter = pc != null ?
                new ObjectParameter("pc", pc) :
                new ObjectParameter("pc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CheckDOC4_Result>("sp_CheckDOC4", cCNParameter, iTEMParameter, pOParameter, pOLineParameter, vENDORParameter, inspectorParameter, drawREVParameter, revParameter, receiverParameter, reclineParameter, pcParameter);
        }
    
        public virtual int sp_Dashboard_PerformanceIQC5()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Dashboard_PerformanceIQC5");
        }
    
        public virtual ObjectResult<sp_DOC_by_ITEM5_Result> sp_DOC_by_ITEM5(string item)
        {
            var itemParameter = item != null ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DOC_by_ITEM5_Result>("sp_DOC_by_ITEM5", itemParameter);
        }
    
        public virtual int sp_DOC_by_ITEM_Insert5(string item, string vendorName, string vendorNo, string cCN, string requiredDOC, string pathDOC, Nullable<System.DateTime> expiredDate, string uploadUser)
        {
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var vendorNameParameter = vendorName != null ?
                new ObjectParameter("VendorName", vendorName) :
                new ObjectParameter("VendorName", typeof(string));
    
            var vendorNoParameter = vendorNo != null ?
                new ObjectParameter("VendorNo", vendorNo) :
                new ObjectParameter("VendorNo", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var requiredDOCParameter = requiredDOC != null ?
                new ObjectParameter("RequiredDOC", requiredDOC) :
                new ObjectParameter("RequiredDOC", typeof(string));
    
            var pathDOCParameter = pathDOC != null ?
                new ObjectParameter("PathDOC", pathDOC) :
                new ObjectParameter("PathDOC", typeof(string));
    
            var expiredDateParameter = expiredDate.HasValue ?
                new ObjectParameter("ExpiredDate", expiredDate) :
                new ObjectParameter("ExpiredDate", typeof(System.DateTime));
    
            var uploadUserParameter = uploadUser != null ?
                new ObjectParameter("UploadUser", uploadUser) :
                new ObjectParameter("UploadUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_ITEM_Insert5", itemParameter, vendorNameParameter, vendorNoParameter, cCNParameter, requiredDOCParameter, pathDOCParameter, expiredDateParameter, uploadUserParameter);
        }
    
        public virtual int sp_DOC_by_ITEM_Reject5(string item, string vendorNo, string cCN, string requiredDOC)
        {
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var vendorNoParameter = vendorNo != null ?
                new ObjectParameter("VendorNo", vendorNo) :
                new ObjectParameter("VendorNo", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var requiredDOCParameter = requiredDOC != null ?
                new ObjectParameter("RequiredDOC", requiredDOC) :
                new ObjectParameter("RequiredDOC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_ITEM_Reject5", itemParameter, vendorNoParameter, cCNParameter, requiredDOCParameter);
        }
    
        public virtual int sp_DOC_by_ITEM_Verify5(string item, string vendorNo, string cCN, string requiredDOC, string verifiedDocUser)
        {
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var vendorNoParameter = vendorNo != null ?
                new ObjectParameter("VendorNo", vendorNo) :
                new ObjectParameter("VendorNo", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var requiredDOCParameter = requiredDOC != null ?
                new ObjectParameter("RequiredDOC", requiredDOC) :
                new ObjectParameter("RequiredDOC", typeof(string));
    
            var verifiedDocUserParameter = verifiedDocUser != null ?
                new ObjectParameter("VerifiedDocUser", verifiedDocUser) :
                new ObjectParameter("VerifiedDocUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_ITEM_Verify5", itemParameter, vendorNoParameter, cCNParameter, requiredDOCParameter, verifiedDocUserParameter);
        }
    
        public virtual ObjectResult<sp_DOC_by_PO_Reject5_Result> sp_DOC_by_PO_Reject5(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DOC_by_PO_Reject5_Result>("sp_DOC_by_PO_Reject5", iDParameter);
        }
    
        public virtual int sp_DOC_by_PO_Upload5(Nullable<int> iD, string pathDOC, string uploadUser)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var pathDOCParameter = pathDOC != null ?
                new ObjectParameter("PathDOC", pathDOC) :
                new ObjectParameter("PathDOC", typeof(string));
    
            var uploadUserParameter = uploadUser != null ?
                new ObjectParameter("UploadUser", uploadUser) :
                new ObjectParameter("UploadUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_PO_Upload5", iDParameter, pathDOCParameter, uploadUserParameter);
        }
    
        public virtual int sp_DOC_by_PO_Verify5(Nullable<int> iD, string verifiedDocUser)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var verifiedDocUserParameter = verifiedDocUser != null ?
                new ObjectParameter("VerifiedDocUser", verifiedDocUser) :
                new ObjectParameter("VerifiedDocUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DOC_by_PO_Verify5", iDParameter, verifiedDocUserParameter);
        }
    
        public virtual ObjectResult<sp_Export_GuideLine5_Result> sp_Export_GuideLine5(string cCN, string iTEM, string drawREV, string rEV)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var drawREVParameter = drawREV != null ?
                new ObjectParameter("DrawREV", drawREV) :
                new ObjectParameter("DrawREV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Export_GuideLine5_Result>("sp_Export_GuideLine5", cCNParameter, iTEMParameter, drawREVParameter, rEVParameter);
        }
    
        public virtual ObjectResult<sp_Get_ListPart_Approve5_Result> sp_Get_ListPart_Approve5(string cCN, string iTEM, string dRAW_REV, string rEV, string approve)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            var approveParameter = approve != null ?
                new ObjectParameter("Approve", approve) :
                new ObjectParameter("Approve", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Get_ListPart_Approve5_Result>("sp_Get_ListPart_Approve5", cCNParameter, iTEMParameter, dRAW_REVParameter, rEVParameter, approveParameter);
        }
    
        public virtual ObjectResult<string> sp_getListDOC_ITEM5(string item)
        {
            var itemParameter = item != null ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_getListDOC_ITEM5", itemParameter);
        }
    
        public virtual ObjectResult<sp_getListITEM_CCN5_Result> sp_getListITEM_CCN5(string ccn)
        {
            var ccnParameter = ccn != null ?
                new ObjectParameter("ccn", ccn) :
                new ObjectParameter("ccn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getListITEM_CCN5_Result>("sp_getListITEM_CCN5", ccnParameter);
        }
    
        public virtual ObjectResult<sp_getListVENDOR_ITEM5_Result> sp_getListVENDOR_ITEM5(string item)
        {
            var itemParameter = item != null ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getListVENDOR_ITEM5_Result>("sp_getListVENDOR_ITEM5", itemParameter);
        }
    
        public virtual ObjectResult<string> sp_GetPartOTD5(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GetPartOTD5", fromParameter, toParameter);
        }
    
        public virtual int sp_GetSupplier5(string type, Nullable<System.DateTime> f, Nullable<System.DateTime> t)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var fParameter = f.HasValue ?
                new ObjectParameter("f", f) :
                new ObjectParameter("f", typeof(System.DateTime));
    
            var tParameter = t.HasValue ?
                new ObjectParameter("t", t) :
                new ObjectParameter("t", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetSupplier5", typeParameter, fParameter, tParameter);
        }
    
        public virtual int sp_GetSupplierOTD5(string type, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetSupplierOTD5", typeParameter, fromParameter, toParameter);
        }
    
        public virtual int sp_Import_VENDOR5(string cCN, string vENDOR, string pUR_LOC, string vEN_NAM, string aDDRESS, string sTATE, string zIP, string cTRY, string cONTACT, string eMAIL, string fAX, string tEL)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var vENDORParameter = vENDOR != null ?
                new ObjectParameter("VENDOR", vENDOR) :
                new ObjectParameter("VENDOR", typeof(string));
    
            var pUR_LOCParameter = pUR_LOC != null ?
                new ObjectParameter("PUR_LOC", pUR_LOC) :
                new ObjectParameter("PUR_LOC", typeof(string));
    
            var vEN_NAMParameter = vEN_NAM != null ?
                new ObjectParameter("VEN_NAM", vEN_NAM) :
                new ObjectParameter("VEN_NAM", typeof(string));
    
            var aDDRESSParameter = aDDRESS != null ?
                new ObjectParameter("ADDRESS", aDDRESS) :
                new ObjectParameter("ADDRESS", typeof(string));
    
            var sTATEParameter = sTATE != null ?
                new ObjectParameter("STATE", sTATE) :
                new ObjectParameter("STATE", typeof(string));
    
            var zIPParameter = zIP != null ?
                new ObjectParameter("ZIP", zIP) :
                new ObjectParameter("ZIP", typeof(string));
    
            var cTRYParameter = cTRY != null ?
                new ObjectParameter("CTRY", cTRY) :
                new ObjectParameter("CTRY", typeof(string));
    
            var cONTACTParameter = cONTACT != null ?
                new ObjectParameter("CONTACT", cONTACT) :
                new ObjectParameter("CONTACT", typeof(string));
    
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var fAXParameter = fAX != null ?
                new ObjectParameter("FAX", fAX) :
                new ObjectParameter("FAX", typeof(string));
    
            var tELParameter = tEL != null ?
                new ObjectParameter("TEL", tEL) :
                new ObjectParameter("TEL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Import_VENDOR5", cCNParameter, vENDORParameter, pUR_LOCParameter, vEN_NAMParameter, aDDRESSParameter, sTATEParameter, zIPParameter, cTRYParameter, cONTACTParameter, eMAILParameter, fAXParameter, tELParameter);
        }
    
        public virtual int sp_Import_VN_MATERIAL_SHORTAGE_4_DASHBOARD5(string wC, string item, string wONum, Nullable<decimal> orderQty, Nullable<decimal> completedQty, Nullable<System.DateTime> openDate, Nullable<System.DateTime> startDate, Nullable<System.DateTime> dueDate, string componentPart, string componentDescription, string flrStk, string anlst, string uM, Nullable<decimal> reqrdQty, Nullable<decimal> commQty, Nullable<decimal> issueQty, Nullable<decimal> sHORTQty, Nullable<decimal> totalOnHand, string shortage, Nullable<decimal> balanceRemains, Nullable<decimal> totalINSRIN, Nullable<decimal> totalVNSTK, Nullable<decimal> totalFLRSTK, Nullable<decimal> totalVNFIN, string wOstatus)
        {
            var wCParameter = wC != null ?
                new ObjectParameter("WC", wC) :
                new ObjectParameter("WC", typeof(string));
    
            var itemParameter = item != null ?
                new ObjectParameter("Item", item) :
                new ObjectParameter("Item", typeof(string));
    
            var wONumParameter = wONum != null ?
                new ObjectParameter("WONum", wONum) :
                new ObjectParameter("WONum", typeof(string));
    
            var orderQtyParameter = orderQty.HasValue ?
                new ObjectParameter("OrderQty", orderQty) :
                new ObjectParameter("OrderQty", typeof(decimal));
    
            var completedQtyParameter = completedQty.HasValue ?
                new ObjectParameter("CompletedQty", completedQty) :
                new ObjectParameter("CompletedQty", typeof(decimal));
    
            var openDateParameter = openDate.HasValue ?
                new ObjectParameter("OpenDate", openDate) :
                new ObjectParameter("OpenDate", typeof(System.DateTime));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var dueDateParameter = dueDate.HasValue ?
                new ObjectParameter("DueDate", dueDate) :
                new ObjectParameter("DueDate", typeof(System.DateTime));
    
            var componentPartParameter = componentPart != null ?
                new ObjectParameter("ComponentPart", componentPart) :
                new ObjectParameter("ComponentPart", typeof(string));
    
            var componentDescriptionParameter = componentDescription != null ?
                new ObjectParameter("ComponentDescription", componentDescription) :
                new ObjectParameter("ComponentDescription", typeof(string));
    
            var flrStkParameter = flrStk != null ?
                new ObjectParameter("FlrStk", flrStk) :
                new ObjectParameter("FlrStk", typeof(string));
    
            var anlstParameter = anlst != null ?
                new ObjectParameter("Anlst", anlst) :
                new ObjectParameter("Anlst", typeof(string));
    
            var uMParameter = uM != null ?
                new ObjectParameter("UM", uM) :
                new ObjectParameter("UM", typeof(string));
    
            var reqrdQtyParameter = reqrdQty.HasValue ?
                new ObjectParameter("ReqrdQty", reqrdQty) :
                new ObjectParameter("ReqrdQty", typeof(decimal));
    
            var commQtyParameter = commQty.HasValue ?
                new ObjectParameter("CommQty", commQty) :
                new ObjectParameter("CommQty", typeof(decimal));
    
            var issueQtyParameter = issueQty.HasValue ?
                new ObjectParameter("IssueQty", issueQty) :
                new ObjectParameter("IssueQty", typeof(decimal));
    
            var sHORTQtyParameter = sHORTQty.HasValue ?
                new ObjectParameter("SHORTQty", sHORTQty) :
                new ObjectParameter("SHORTQty", typeof(decimal));
    
            var totalOnHandParameter = totalOnHand.HasValue ?
                new ObjectParameter("TotalOnHand", totalOnHand) :
                new ObjectParameter("TotalOnHand", typeof(decimal));
    
            var shortageParameter = shortage != null ?
                new ObjectParameter("shortage", shortage) :
                new ObjectParameter("shortage", typeof(string));
    
            var balanceRemainsParameter = balanceRemains.HasValue ?
                new ObjectParameter("BalanceRemains", balanceRemains) :
                new ObjectParameter("BalanceRemains", typeof(decimal));
    
            var totalINSRINParameter = totalINSRIN.HasValue ?
                new ObjectParameter("TotalINSRIN", totalINSRIN) :
                new ObjectParameter("TotalINSRIN", typeof(decimal));
    
            var totalVNSTKParameter = totalVNSTK.HasValue ?
                new ObjectParameter("TotalVNSTK", totalVNSTK) :
                new ObjectParameter("TotalVNSTK", typeof(decimal));
    
            var totalFLRSTKParameter = totalFLRSTK.HasValue ?
                new ObjectParameter("TotalFLRSTK", totalFLRSTK) :
                new ObjectParameter("TotalFLRSTK", typeof(decimal));
    
            var totalVNFINParameter = totalVNFIN.HasValue ?
                new ObjectParameter("TotalVNFIN", totalVNFIN) :
                new ObjectParameter("TotalVNFIN", typeof(decimal));
    
            var wOstatusParameter = wOstatus != null ?
                new ObjectParameter("WOstatus", wOstatus) :
                new ObjectParameter("WOstatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Import_VN_MATERIAL_SHORTAGE_4_DASHBOARD5", wCParameter, itemParameter, wONumParameter, orderQtyParameter, completedQtyParameter, openDateParameter, startDateParameter, dueDateParameter, componentPartParameter, componentDescriptionParameter, flrStkParameter, anlstParameter, uMParameter, reqrdQtyParameter, commQtyParameter, issueQtyParameter, sHORTQtyParameter, totalOnHandParameter, shortageParameter, balanceRemainsParameter, totalINSRINParameter, totalVNSTKParameter, totalFLRSTKParameter, totalVNFINParameter, wOstatusParameter);
        }
    
        public virtual int sp_Inv_SendMail3(string sugID, Nullable<byte> step, string status)
        {
            var sugIDParameter = sugID != null ?
                new ObjectParameter("SugID", sugID) :
                new ObjectParameter("SugID", typeof(string));
    
            var stepParameter = step.HasValue ?
                new ObjectParameter("Step", step) :
                new ObjectParameter("Step", typeof(byte));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Inv_SendMail3", sugIDParameter, stepParameter, statusParameter);
        }
    
        public virtual int sp_Inv_SentmailSubmitTasKProductTranfer5(string part, string iduser)
        {
            var partParameter = part != null ?
                new ObjectParameter("part", part) :
                new ObjectParameter("part", typeof(string));
    
            var iduserParameter = iduser != null ?
                new ObjectParameter("iduser", iduser) :
                new ObjectParameter("iduser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Inv_SentmailSubmitTasKProductTranfer5", partParameter, iduserParameter);
        }
    
        public virtual int sp_LaborScan1(string operID, string action, string wC)
        {
            var operIDParameter = operID != null ?
                new ObjectParameter("OperID", operID) :
                new ObjectParameter("OperID", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var wCParameter = wC != null ?
                new ObjectParameter("WC", wC) :
                new ObjectParameter("WC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LaborScan1", operIDParameter, actionParameter, wCParameter);
        }
    
        public virtual int sp_PART_REJECT_Insert5(string cCN, string iTEM, string dRAW_REV, string rEV, string user, string com)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var comParameter = com != null ?
                new ObjectParameter("com", com) :
                new ObjectParameter("com", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PART_REJECT_Insert5", cCNParameter, iTEMParameter, dRAW_REVParameter, rEVParameter, userParameter, comParameter);
        }
    
        public virtual int sp_RemindCompleteTask_Not_NCR5()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RemindCompleteTask_Not_NCR5");
        }
    
        public virtual int sp_RemindPO_DOC_Email4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RemindPO_DOC_Email4");
        }
    
        public virtual ObjectResult<sp_Report_CheckAndLoadEvidence1_Result> sp_Report_CheckAndLoadEvidence1(string rec, string ccn)
        {
            var recParameter = rec != null ?
                new ObjectParameter("rec", rec) :
                new ObjectParameter("rec", typeof(string));
    
            var ccnParameter = ccn != null ?
                new ObjectParameter("ccn", ccn) :
                new ObjectParameter("ccn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Report_CheckAndLoadEvidence1_Result>("sp_Report_CheckAndLoadEvidence1", recParameter, ccnParameter);
        }
    
        public virtual ObjectResult<sp_Report_MonthIQC_TEM5_Result> sp_Report_MonthIQC_TEM5(string ccn, Nullable<System.DateTime> f, Nullable<System.DateTime> t)
        {
            var ccnParameter = ccn != null ?
                new ObjectParameter("ccn", ccn) :
                new ObjectParameter("ccn", typeof(string));
    
            var fParameter = f.HasValue ?
                new ObjectParameter("f", f) :
                new ObjectParameter("f", typeof(System.DateTime));
    
            var tParameter = t.HasValue ?
                new ObjectParameter("t", t) :
                new ObjectParameter("t", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Report_MonthIQC_TEM5_Result>("sp_Report_MonthIQC_TEM5", ccnParameter, fParameter, tParameter);
        }
    
        public virtual int sp_Report_OTD_Supplier_byMonth5(string viewBy, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string supType, string sup, string part)
        {
            var viewByParameter = viewBy != null ?
                new ObjectParameter("ViewBy", viewBy) :
                new ObjectParameter("ViewBy", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var supTypeParameter = supType != null ?
                new ObjectParameter("SupType", supType) :
                new ObjectParameter("SupType", typeof(string));
    
            var supParameter = sup != null ?
                new ObjectParameter("Sup", sup) :
                new ObjectParameter("Sup", typeof(string));
    
            var partParameter = part != null ?
                new ObjectParameter("Part", part) :
                new ObjectParameter("Part", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Report_OTD_Supplier_byMonth5", viewByParameter, fromParameter, toParameter, supTypeParameter, supParameter, partParameter);
        }
    
        public virtual int sp_Report_PPM_Supplier_byMonth5(string viewBy, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string supType, string sup, string part)
        {
            var viewByParameter = viewBy != null ?
                new ObjectParameter("ViewBy", viewBy) :
                new ObjectParameter("ViewBy", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var supTypeParameter = supType != null ?
                new ObjectParameter("SupType", supType) :
                new ObjectParameter("SupType", typeof(string));
    
            var supParameter = sup != null ?
                new ObjectParameter("Sup", sup) :
                new ObjectParameter("Sup", typeof(string));
    
            var partParameter = part != null ?
                new ObjectParameter("Part", part) :
                new ObjectParameter("Part", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Report_PPM_Supplier_byMonth5", viewByParameter, fromParameter, toParameter, supTypeParameter, supParameter, partParameter);
        }
    
        public virtual int sp_Report_PPM_Supplier_byMonth_V2(string viewBy, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string supType, string sup, string part, string mD)
        {
            var viewByParameter = viewBy != null ?
                new ObjectParameter("ViewBy", viewBy) :
                new ObjectParameter("ViewBy", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var supTypeParameter = supType != null ?
                new ObjectParameter("SupType", supType) :
                new ObjectParameter("SupType", typeof(string));
    
            var supParameter = sup != null ?
                new ObjectParameter("Sup", sup) :
                new ObjectParameter("Sup", typeof(string));
    
            var partParameter = part != null ?
                new ObjectParameter("Part", part) :
                new ObjectParameter("Part", typeof(string));
    
            var mDParameter = mD != null ?
                new ObjectParameter("MD", mD) :
                new ObjectParameter("MD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Report_PPM_Supplier_byMonth_V2", viewByParameter, fromParameter, toParameter, supTypeParameter, supParameter, partParameter, mDParameter);
        }
    
        public virtual ObjectResult<sp_EscapePPMToComponent_Result> sp_EscapePPMToComponent(Nullable<int> yEAR, Nullable<int> mONTH)
        {
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var mONTHParameter = mONTH.HasValue ?
                new ObjectParameter("MONTH", mONTH) :
                new ObjectParameter("MONTH", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EscapePPMToComponent_Result>("sp_EscapePPMToComponent", yEARParameter, mONTHParameter);
        }
    
        public virtual ObjectResult<sp_EscapePPMToProduction_Result> sp_EscapePPMToProduction(Nullable<int> yEAR, Nullable<int> mONTH)
        {
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var mONTHParameter = mONTH.HasValue ?
                new ObjectParameter("MONTH", mONTH) :
                new ObjectParameter("MONTH", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EscapePPMToProduction_Result>("sp_EscapePPMToProduction", yEARParameter, mONTHParameter);
        }
    
        public virtual ObjectResult<sp_EscapePPMToSystem_Result> sp_EscapePPMToSystem(Nullable<int> yEAR, Nullable<int> mONTH)
        {
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            var mONTHParameter = mONTH.HasValue ?
                new ObjectParameter("MONTH", mONTH) :
                new ObjectParameter("MONTH", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EscapePPMToSystem_Result>("sp_EscapePPMToSystem", yEARParameter, mONTHParameter);
        }
    
        public virtual int sp_Task_Report(Nullable<int> report_Type, string dept, string taskStatus, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var report_TypeParameter = report_Type.HasValue ?
                new ObjectParameter("Report_Type", report_Type) :
                new ObjectParameter("Report_Type", typeof(int));
    
            var deptParameter = dept != null ?
                new ObjectParameter("Dept", dept) :
                new ObjectParameter("Dept", typeof(string));
    
            var taskStatusParameter = taskStatus != null ?
                new ObjectParameter("TaskStatus", taskStatus) :
                new ObjectParameter("TaskStatus", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Task_Report", report_TypeParameter, deptParameter, taskStatusParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<sp_Task_Search_Result> sp_Task_Search(string keyWord)
        {
            var keyWordParameter = keyWord != null ?
                new ObjectParameter("KeyWord", keyWord) :
                new ObjectParameter("KeyWord", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Task_Search_Result>("sp_Task_Search", keyWordParameter);
        }
    
        public virtual ObjectResult<sp_Task_Statistical_ByDept_Result> sp_Task_Statistical_ByDept(string dept)
        {
            var deptParameter = dept != null ?
                new ObjectParameter("Dept", dept) :
                new ObjectParameter("Dept", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Task_Statistical_ByDept_Result>("sp_Task_Statistical_ByDept", deptParameter);
        }
    
        public virtual ObjectResult<sp_Task_Statistical_ByUser_Result> sp_Task_Statistical_ByUser(string user)
        {
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Task_Statistical_ByUser_Result>("sp_Task_Statistical_ByUser", userParameter);
        }
    
        public virtual ObjectResult<sp_TaskList_Report_Result> sp_TaskList_Report(string dept, string taskStatus, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var deptParameter = dept != null ?
                new ObjectParameter("Dept", dept) :
                new ObjectParameter("Dept", typeof(string));
    
            var taskStatusParameter = taskStatus != null ?
                new ObjectParameter("TaskStatus", taskStatus) :
                new ObjectParameter("TaskStatus", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_TaskList_Report_Result>("sp_TaskList_Report", deptParameter, taskStatusParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<sp_TaskStatistical_Report_Result> sp_TaskStatistical_Report(string dept, string taskStatus, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var deptParameter = dept != null ?
                new ObjectParameter("Dept", dept) :
                new ObjectParameter("Dept", typeof(string));
    
            var taskStatusParameter = taskStatus != null ?
                new ObjectParameter("TaskStatus", taskStatus) :
                new ObjectParameter("TaskStatus", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_TaskStatistical_Report_Result>("sp_TaskStatistical_Report", deptParameter, taskStatusParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<sp_Task_Statistical_ByDetail_Result> sp_Task_Statistical_ByDetail(string searchType, string searchValue, string taskStatus)
        {
            var searchTypeParameter = searchType != null ?
                new ObjectParameter("SearchType", searchType) :
                new ObjectParameter("SearchType", typeof(string));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            var taskStatusParameter = taskStatus != null ?
                new ObjectParameter("TaskStatus", taskStatus) :
                new ObjectParameter("TaskStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Task_Statistical_ByDetail_Result>("sp_Task_Statistical_ByDetail", searchTypeParameter, searchValueParameter, taskStatusParameter);
        }
    
        public virtual int DynamicPivot(Nullable<System.DateTime> month)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DynamicPivot", monthParameter);
        }
    
        public virtual ObjectResult<GetListOperIQC_Result> GetListOperIQC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetListOperIQC_Result>("GetListOperIQC");
        }
    
        public virtual ObjectResult<p_AgingTimeAQL_Parts_Detail_New_Result> p_AgingTimeAQL_Parts_Detail_New(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_AgingTimeAQL_Parts_Detail_New_Result>("p_AgingTimeAQL_Parts_Detail_New", dateParameter);
        }
    
        public virtual ObjectResult<p_AgingTimeAQL_Parts_New_Result> p_AgingTimeAQL_Parts_New(Nullable<System.DateTime> f, Nullable<System.DateTime> t)
        {
            var fParameter = f.HasValue ?
                new ObjectParameter("f", f) :
                new ObjectParameter("f", typeof(System.DateTime));
    
            var tParameter = t.HasValue ?
                new ObjectParameter("t", t) :
                new ObjectParameter("t", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_AgingTimeAQL_Parts_New_Result>("p_AgingTimeAQL_Parts_New", fParameter, tParameter);
        }
    
        public virtual int p_Remind_Purchase_Order_Status()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Remind_Purchase_Order_Status");
        }
    
        public virtual ObjectResult<pGet_MEASUREMENT_STD_BY_PART_bk_Result> pGet_MEASUREMENT_STD_BY_PART_bk(string rECEIVER, string rEC_LINE, string cCN, string iTEM, string dRAW_REV, string rEV)
        {
            var rECEIVERParameter = rECEIVER != null ?
                new ObjectParameter("RECEIVER", rECEIVER) :
                new ObjectParameter("RECEIVER", typeof(string));
    
            var rEC_LINEParameter = rEC_LINE != null ?
                new ObjectParameter("REC_LINE", rEC_LINE) :
                new ObjectParameter("REC_LINE", typeof(string));
    
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var rEVParameter = rEV != null ?
                new ObjectParameter("REV", rEV) :
                new ObjectParameter("REV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pGet_MEASUREMENT_STD_BY_PART_bk_Result>("pGet_MEASUREMENT_STD_BY_PART_bk", rECEIVERParameter, rEC_LINEParameter, cCNParameter, iTEMParameter, dRAW_REVParameter, rEVParameter);
        }
    
        public virtual int sp_Chart_Labor_RealTime_Rev2(string line, Nullable<System.DateTime> f, Nullable<System.DateTime> to)
        {
            var lineParameter = line != null ?
                new ObjectParameter("Line", line) :
                new ObjectParameter("Line", typeof(string));
    
            var fParameter = f.HasValue ?
                new ObjectParameter("f", f) :
                new ObjectParameter("f", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Chart_Labor_RealTime_Rev2", lineParameter, fParameter, toParameter);
        }
    
        public virtual ObjectResult<sp_DOC_by_ITEM_Rev2_Result> sp_DOC_by_ITEM_Rev2(string item, string vendor)
        {
            var itemParameter = item != null ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(string));
    
            var vendorParameter = vendor != null ?
                new ObjectParameter("vendor", vendor) :
                new ObjectParameter("vendor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DOC_by_ITEM_Rev2_Result>("sp_DOC_by_ITEM_Rev2", itemParameter, vendorParameter);
        }
    
        public virtual int sp_GET_ListNC_Rev2(string cCN, string iTEM, string dRAW_REV, string chuoi)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var chuoiParameter = chuoi != null ?
                new ObjectParameter("Chuoi", chuoi) :
                new ObjectParameter("Chuoi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GET_ListNC_Rev2", cCNParameter, iTEMParameter, dRAW_REVParameter, chuoiParameter);
        }
    
        public virtual ObjectResult<sp_GET_NCCode_byItem_Result> sp_GET_NCCode_byItem(string iTEM)
        {
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GET_NCCode_byItem_Result>("sp_GET_NCCode_byItem", iTEMParameter);
        }
    
        public virtual ObjectResult<sp_GET_NCGroup_byItem_Result> sp_GET_NCGroup_byItem(string iTEM)
        {
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GET_NCGroup_byItem_Result>("sp_GET_NCGroup_byItem", iTEMParameter);
        }
    
        public virtual ObjectResult<sp_GetOperator_IQC_Result> sp_GetOperator_IQC(string line, Nullable<System.DateTime> f, Nullable<System.DateTime> t)
        {
            var lineParameter = line != null ?
                new ObjectParameter("line", line) :
                new ObjectParameter("line", typeof(string));
    
            var fParameter = f.HasValue ?
                new ObjectParameter("f", f) :
                new ObjectParameter("f", typeof(System.DateTime));
    
            var tParameter = t.HasValue ?
                new ObjectParameter("t", t) :
                new ObjectParameter("t", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetOperator_IQC_Result>("sp_GetOperator_IQC", lineParameter, fParameter, tParameter);
        }
    
        public virtual ObjectResult<string> sp_GetProduct_byLine()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_GetProduct_byLine");
        }
    
        public virtual ObjectResult<sp_GetSoReview_Result> sp_GetSoReview()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetSoReview_Result>("sp_GetSoReview");
        }
    
        public virtual int sp_InsertPART_INFO_TEMP(string cCN, string iTEM, string dESCR, string dRAW_REV, string rEC_RULE, Nullable<System.DateTime> iNPUT, string eMPLOYEE, string aNALYST)
        {
            var cCNParameter = cCN != null ?
                new ObjectParameter("CCN", cCN) :
                new ObjectParameter("CCN", typeof(string));
    
            var iTEMParameter = iTEM != null ?
                new ObjectParameter("ITEM", iTEM) :
                new ObjectParameter("ITEM", typeof(string));
    
            var dESCRParameter = dESCR != null ?
                new ObjectParameter("DESCR", dESCR) :
                new ObjectParameter("DESCR", typeof(string));
    
            var dRAW_REVParameter = dRAW_REV != null ?
                new ObjectParameter("DRAW_REV", dRAW_REV) :
                new ObjectParameter("DRAW_REV", typeof(string));
    
            var rEC_RULEParameter = rEC_RULE != null ?
                new ObjectParameter("REC_RULE", rEC_RULE) :
                new ObjectParameter("REC_RULE", typeof(string));
    
            var iNPUTParameter = iNPUT.HasValue ?
                new ObjectParameter("INPUT", iNPUT) :
                new ObjectParameter("INPUT", typeof(System.DateTime));
    
            var eMPLOYEEParameter = eMPLOYEE != null ?
                new ObjectParameter("EMPLOYEE", eMPLOYEE) :
                new ObjectParameter("EMPLOYEE", typeof(string));
    
            var aNALYSTParameter = aNALYST != null ?
                new ObjectParameter("ANALYST", aNALYST) :
                new ObjectParameter("ANALYST", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertPART_INFO_TEMP", cCNParameter, iTEMParameter, dESCRParameter, dRAW_REVParameter, rEC_RULEParameter, iNPUTParameter, eMPLOYEEParameter, aNALYSTParameter);
        }
    
        public virtual ObjectResult<sp_Inv_Report_SUGGESTION_ANALYSIS_Result> sp_Inv_Report_SUGGESTION_ANALYSIS(Nullable<System.DateTime> dtFrom, Nullable<System.DateTime> dtTo)
        {
            var dtFromParameter = dtFrom.HasValue ?
                new ObjectParameter("dtFrom", dtFrom) :
                new ObjectParameter("dtFrom", typeof(System.DateTime));
    
            var dtToParameter = dtTo.HasValue ?
                new ObjectParameter("dtTo", dtTo) :
                new ObjectParameter("dtTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Inv_Report_SUGGESTION_ANALYSIS_Result>("sp_Inv_Report_SUGGESTION_ANALYSIS", dtFromParameter, dtToParameter);
        }
    
        public virtual ObjectResult<sp_Inv_Report_Suggestion_ByMonth_Result> sp_Inv_Report_Suggestion_ByMonth(Nullable<System.DateTime> dtFrom, Nullable<System.DateTime> dtTo)
        {
            var dtFromParameter = dtFrom.HasValue ?
                new ObjectParameter("dtFrom", dtFrom) :
                new ObjectParameter("dtFrom", typeof(System.DateTime));
    
            var dtToParameter = dtTo.HasValue ?
                new ObjectParameter("dtTo", dtTo) :
                new ObjectParameter("dtTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Inv_Report_Suggestion_ByMonth_Result>("sp_Inv_Report_Suggestion_ByMonth", dtFromParameter, dtToParameter);
        }
    
        public virtual ObjectResult<sp_Inv_Report_Suggestion_ByPerson_Result> sp_Inv_Report_Suggestion_ByPerson(Nullable<System.DateTime> dtFrom, Nullable<System.DateTime> dtTo)
        {
            var dtFromParameter = dtFrom.HasValue ?
                new ObjectParameter("dtFrom", dtFrom) :
                new ObjectParameter("dtFrom", typeof(System.DateTime));
    
            var dtToParameter = dtTo.HasValue ?
                new ObjectParameter("dtTo", dtTo) :
                new ObjectParameter("dtTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Inv_Report_Suggestion_ByPerson_Result>("sp_Inv_Report_Suggestion_ByPerson", dtFromParameter, dtToParameter);
        }
    
        public virtual ObjectResult<sp_Inv_Report_Suggestion_Status_Result> sp_Inv_Report_Suggestion_Status(Nullable<System.DateTime> dtFrom, Nullable<System.DateTime> dtTo)
        {
            var dtFromParameter = dtFrom.HasValue ?
                new ObjectParameter("dtFrom", dtFrom) :
                new ObjectParameter("dtFrom", typeof(System.DateTime));
    
            var dtToParameter = dtTo.HasValue ?
                new ObjectParameter("dtTo", dtTo) :
                new ObjectParameter("dtTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Inv_Report_Suggestion_Status_Result>("sp_Inv_Report_Suggestion_Status", dtFromParameter, dtToParameter);
        }
    
        public virtual int sp_LaborScan_RealTime(string operID, Nullable<System.DateTime> date)
        {
            var operIDParameter = operID != null ?
                new ObjectParameter("OperID", operID) :
                new ObjectParameter("OperID", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LaborScan_RealTime", operIDParameter, dateParameter);
        }
    
        public virtual int sp_LaborScan_Rev2(string operID, string action, string wC)
        {
            var operIDParameter = operID != null ?
                new ObjectParameter("OperID", operID) :
                new ObjectParameter("OperID", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var wCParameter = wC != null ?
                new ObjectParameter("WC", wC) :
                new ObjectParameter("WC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LaborScan_Rev2", operIDParameter, actionParameter, wCParameter);
        }
    
        public virtual int sp_PT_Complete_BuyPart()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PT_Complete_BuyPart");
        }
    
        public virtual int sp_RemindSupplierLog_Re_Evaluation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RemindSupplierLog_Re_Evaluation");
        }
    
        public virtual int sp_Report_Labor_OPERATION_TIME_Rev2(string line, string oper, string para1, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string para2)
        {
            var lineParameter = line != null ?
                new ObjectParameter("line", line) :
                new ObjectParameter("line", typeof(string));
    
            var operParameter = oper != null ?
                new ObjectParameter("oper", oper) :
                new ObjectParameter("oper", typeof(string));
    
            var para1Parameter = para1 != null ?
                new ObjectParameter("para1", para1) :
                new ObjectParameter("para1", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var para2Parameter = para2 != null ?
                new ObjectParameter("para2", para2) :
                new ObjectParameter("para2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Report_Labor_OPERATION_TIME_Rev2", lineParameter, operParameter, para1Parameter, fromParameter, toParameter, para2Parameter);
        }
    
        public virtual int sp_Report_Labor_OverTimeCheck_Rev2(string line, string oper, string para1, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string para2)
        {
            var lineParameter = line != null ?
                new ObjectParameter("line", line) :
                new ObjectParameter("line", typeof(string));
    
            var operParameter = oper != null ?
                new ObjectParameter("oper", oper) :
                new ObjectParameter("oper", typeof(string));
    
            var para1Parameter = para1 != null ?
                new ObjectParameter("para1", para1) :
                new ObjectParameter("para1", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var para2Parameter = para2 != null ?
                new ObjectParameter("para2", para2) :
                new ObjectParameter("para2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Report_Labor_OverTimeCheck_Rev2", lineParameter, operParameter, para1Parameter, fromParameter, toParameter, para2Parameter);
        }
    
        public virtual int sp_Report_Labor_RealTime_ProcessGroup_Rev2(string line, string part, string para1, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string para2)
        {
            var lineParameter = line != null ?
                new ObjectParameter("line", line) :
                new ObjectParameter("line", typeof(string));
    
            var partParameter = part != null ?
                new ObjectParameter("part", part) :
                new ObjectParameter("part", typeof(string));
    
            var para1Parameter = para1 != null ?
                new ObjectParameter("para1", para1) :
                new ObjectParameter("para1", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var para2Parameter = para2 != null ?
                new ObjectParameter("para2", para2) :
                new ObjectParameter("para2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Report_Labor_RealTime_ProcessGroup_Rev2", lineParameter, partParameter, para1Parameter, fromParameter, toParameter, para2Parameter);
        }
    
        public virtual int sp_Report_LABOR_UTILIZATION_Rev2(string line, string oper, string para1, Nullable<System.DateTime> from, Nullable<System.DateTime> to, string para2)
        {
            var lineParameter = line != null ?
                new ObjectParameter("line", line) :
                new ObjectParameter("line", typeof(string));
    
            var operParameter = oper != null ?
                new ObjectParameter("oper", oper) :
                new ObjectParameter("oper", typeof(string));
    
            var para1Parameter = para1 != null ?
                new ObjectParameter("para1", para1) :
                new ObjectParameter("para1", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var para2Parameter = para2 != null ?
                new ObjectParameter("para2", para2) :
                new ObjectParameter("para2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Report_LABOR_UTILIZATION_Rev2", lineParameter, operParameter, para1Parameter, fromParameter, toParameter, para2Parameter);
        }
    
        public virtual int sp_Report_Labor_WORKING_HOURS_BY_WO_BY_EMPLOYEES_Rev2(string line, Nullable<System.DateTime> f, Nullable<System.DateTime> to)
        {
            var lineParameter = line != null ?
                new ObjectParameter("Line", line) :
                new ObjectParameter("Line", typeof(string));
    
            var fParameter = f.HasValue ?
                new ObjectParameter("f", f) :
                new ObjectParameter("f", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Report_Labor_WORKING_HOURS_BY_WO_BY_EMPLOYEES_Rev2", lineParameter, fParameter, toParameter);
        }
    
        public virtual int sp_Report_LABOR_WorkingTime_Rev2(string line, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var lineParameter = line != null ?
                new ObjectParameter("line", line) :
                new ObjectParameter("line", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Report_LABOR_WorkingTime_Rev2", lineParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<sp_Report_MonthIQC_TEM_SumByPart_Result> sp_Report_MonthIQC_TEM_SumByPart(string part, Nullable<System.DateTime> f, Nullable<System.DateTime> t)
        {
            var partParameter = part != null ?
                new ObjectParameter("part", part) :
                new ObjectParameter("part", typeof(string));
    
            var fParameter = f.HasValue ?
                new ObjectParameter("f", f) :
                new ObjectParameter("f", typeof(System.DateTime));
    
            var tParameter = t.HasValue ?
                new ObjectParameter("t", t) :
                new ObjectParameter("t", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Report_MonthIQC_TEM_SumByPart_Result>("sp_Report_MonthIQC_TEM_SumByPart", partParameter, fParameter, tParameter);
        }
    
        public virtual int sp_ReportWHOpenNCRforMRBmeeting_AddCom(string ncr, string com)
        {
            var ncrParameter = ncr != null ?
                new ObjectParameter("ncr", ncr) :
                new ObjectParameter("ncr", typeof(string));
    
            var comParameter = com != null ?
                new ObjectParameter("com", com) :
                new ObjectParameter("com", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ReportWHOpenNCRforMRBmeeting_AddCom", ncrParameter, comParameter);
        }
    
        public virtual int sp_SOR_Release()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SOR_Release");
        }
    
        public virtual ObjectResult<sp_SQE_6Panel_CustClaim_By_Month_Result> sp_SQE_6Panel_CustClaim_By_Month(string vendor, Nullable<System.DateTime> date_From, Nullable<System.DateTime> date_To)
        {
            var vendorParameter = vendor != null ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(string));
    
            var date_FromParameter = date_From.HasValue ?
                new ObjectParameter("Date_From", date_From) :
                new ObjectParameter("Date_From", typeof(System.DateTime));
    
            var date_ToParameter = date_To.HasValue ?
                new ObjectParameter("Date_To", date_To) :
                new ObjectParameter("Date_To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SQE_6Panel_CustClaim_By_Month_Result>("sp_SQE_6Panel_CustClaim_By_Month", vendorParameter, date_FromParameter, date_ToParameter);
        }
    
        public virtual int sp_SQE_6Panel_DefectDetail(string vendor, Nullable<System.DateTime> date_From, Nullable<System.DateTime> date_To)
        {
            var vendorParameter = vendor != null ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(string));
    
            var date_FromParameter = date_From.HasValue ?
                new ObjectParameter("Date_From", date_From) :
                new ObjectParameter("Date_From", typeof(System.DateTime));
    
            var date_ToParameter = date_To.HasValue ?
                new ObjectParameter("Date_To", date_To) :
                new ObjectParameter("Date_To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SQE_6Panel_DefectDetail", vendorParameter, date_FromParameter, date_ToParameter);
        }
    
        public virtual int sp_SQE_6Panel_DeliveryPerformance(string vendor, Nullable<System.DateTime> date_From, Nullable<System.DateTime> date_To)
        {
            var vendorParameter = vendor != null ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(string));
    
            var date_FromParameter = date_From.HasValue ?
                new ObjectParameter("Date_From", date_From) :
                new ObjectParameter("Date_From", typeof(System.DateTime));
    
            var date_ToParameter = date_To.HasValue ?
                new ObjectParameter("Date_To", date_To) :
                new ObjectParameter("Date_To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SQE_6Panel_DeliveryPerformance", vendorParameter, date_FromParameter, date_ToParameter);
        }
    
        public virtual ObjectResult<sp_SQE_6Panel_DetailScar_Result> sp_SQE_6Panel_DetailScar(string vendor, Nullable<System.DateTime> date_From, Nullable<System.DateTime> date_To)
        {
            var vendorParameter = vendor != null ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(string));
    
            var date_FromParameter = date_From.HasValue ?
                new ObjectParameter("Date_From", date_From) :
                new ObjectParameter("Date_From", typeof(System.DateTime));
    
            var date_ToParameter = date_To.HasValue ?
                new ObjectParameter("Date_To", date_To) :
                new ObjectParameter("Date_To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SQE_6Panel_DetailScar_Result>("sp_SQE_6Panel_DetailScar", vendorParameter, date_FromParameter, date_ToParameter);
        }
    
        public virtual ObjectResult<sp_SQE_6Panel_Freight_By_Month_Result> sp_SQE_6Panel_Freight_By_Month(string vendor, Nullable<System.DateTime> date_From, Nullable<System.DateTime> date_To)
        {
            var vendorParameter = vendor != null ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(string));
    
            var date_FromParameter = date_From.HasValue ?
                new ObjectParameter("Date_From", date_From) :
                new ObjectParameter("Date_From", typeof(System.DateTime));
    
            var date_ToParameter = date_To.HasValue ?
                new ObjectParameter("Date_To", date_To) :
                new ObjectParameter("Date_To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SQE_6Panel_Freight_By_Month_Result>("sp_SQE_6Panel_Freight_By_Month", vendorParameter, date_FromParameter, date_ToParameter);
        }
    
        public virtual ObjectResult<sp_SQE_6Panel_GetListVendor_Result> sp_SQE_6Panel_GetListVendor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SQE_6Panel_GetListVendor_Result>("sp_SQE_6Panel_GetListVendor");
        }
    
        public virtual ObjectResult<sp_SQE_6Panel_OTD_By_Month_Result> sp_SQE_6Panel_OTD_By_Month(string vendor, Nullable<System.DateTime> date_From, Nullable<System.DateTime> date_To)
        {
            var vendorParameter = vendor != null ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(string));
    
            var date_FromParameter = date_From.HasValue ?
                new ObjectParameter("Date_From", date_From) :
                new ObjectParameter("Date_From", typeof(System.DateTime));
    
            var date_ToParameter = date_To.HasValue ?
                new ObjectParameter("Date_To", date_To) :
                new ObjectParameter("Date_To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SQE_6Panel_OTD_By_Month_Result>("sp_SQE_6Panel_OTD_By_Month", vendorParameter, date_FromParameter, date_ToParameter);
        }
    
        public virtual int sp_SQE_6Panel_Performance(string vendor, Nullable<System.DateTime> date_From, Nullable<System.DateTime> date_To)
        {
            var vendorParameter = vendor != null ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(string));
    
            var date_FromParameter = date_From.HasValue ?
                new ObjectParameter("Date_From", date_From) :
                new ObjectParameter("Date_From", typeof(System.DateTime));
    
            var date_ToParameter = date_To.HasValue ?
                new ObjectParameter("Date_To", date_To) :
                new ObjectParameter("Date_To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SQE_6Panel_Performance", vendorParameter, date_FromParameter, date_ToParameter);
        }
    
        public virtual ObjectResult<sp_SQE_6Panel_PPM_By_Month_Result> sp_SQE_6Panel_PPM_By_Month(string vendor, Nullable<System.DateTime> date_From, Nullable<System.DateTime> date_To)
        {
            var vendorParameter = vendor != null ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(string));
    
            var date_FromParameter = date_From.HasValue ?
                new ObjectParameter("Date_From", date_From) :
                new ObjectParameter("Date_From", typeof(System.DateTime));
    
            var date_ToParameter = date_To.HasValue ?
                new ObjectParameter("Date_To", date_To) :
                new ObjectParameter("Date_To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SQE_6Panel_PPM_By_Month_Result>("sp_SQE_6Panel_PPM_By_Month", vendorParameter, date_FromParameter, date_ToParameter);
        }
    
        public virtual ObjectResult<sp_SQE_6Panel_QualityPerformance_Result> sp_SQE_6Panel_QualityPerformance(string vendor, Nullable<System.DateTime> date_From, Nullable<System.DateTime> date_To)
        {
            var vendorParameter = vendor != null ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(string));
    
            var date_FromParameter = date_From.HasValue ?
                new ObjectParameter("Date_From", date_From) :
                new ObjectParameter("Date_From", typeof(System.DateTime));
    
            var date_ToParameter = date_To.HasValue ?
                new ObjectParameter("Date_To", date_To) :
                new ObjectParameter("Date_To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SQE_6Panel_QualityPerformance_Result>("sp_SQE_6Panel_QualityPerformance", vendorParameter, date_FromParameter, date_ToParameter);
        }
    
        public virtual ObjectResult<sp_SQE_6Panel_ScoreJudment_Result> sp_SQE_6Panel_ScoreJudment(string vendor, Nullable<System.DateTime> date_From, Nullable<System.DateTime> date_To)
        {
            var vendorParameter = vendor != null ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(string));
    
            var date_FromParameter = date_From.HasValue ?
                new ObjectParameter("Date_From", date_From) :
                new ObjectParameter("Date_From", typeof(System.DateTime));
    
            var date_ToParameter = date_To.HasValue ?
                new ObjectParameter("Date_To", date_To) :
                new ObjectParameter("Date_To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SQE_6Panel_ScoreJudment_Result>("sp_SQE_6Panel_ScoreJudment", vendorParameter, date_FromParameter, date_ToParameter);
        }
    
        public virtual ObjectResult<sp_SQE_6Panel_ScoringRef_Result> sp_SQE_6Panel_ScoringRef(string vendor, Nullable<System.DateTime> date_From, Nullable<System.DateTime> date_To)
        {
            var vendorParameter = vendor != null ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(string));
    
            var date_FromParameter = date_From.HasValue ?
                new ObjectParameter("Date_From", date_From) :
                new ObjectParameter("Date_From", typeof(System.DateTime));
    
            var date_ToParameter = date_To.HasValue ?
                new ObjectParameter("Date_To", date_To) :
                new ObjectParameter("Date_To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SQE_6Panel_ScoringRef_Result>("sp_SQE_6Panel_ScoringRef", vendorParameter, date_FromParameter, date_ToParameter);
        }
    
        public virtual ObjectResult<sp_SQE_6Panel_SupplierInfo_Result> sp_SQE_6Panel_SupplierInfo(string supplierCode)
        {
            var supplierCodeParameter = supplierCode != null ?
                new ObjectParameter("SupplierCode", supplierCode) :
                new ObjectParameter("SupplierCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SQE_6Panel_SupplierInfo_Result>("sp_SQE_6Panel_SupplierInfo", supplierCodeParameter);
        }
    
        public virtual ObjectResult<sp_SQE_6Panel_TopDefectPart_By_Month_Result> sp_SQE_6Panel_TopDefectPart_By_Month(string vendor, Nullable<System.DateTime> date_From, Nullable<System.DateTime> date_To)
        {
            var vendorParameter = vendor != null ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(string));
    
            var date_FromParameter = date_From.HasValue ?
                new ObjectParameter("Date_From", date_From) :
                new ObjectParameter("Date_From", typeof(System.DateTime));
    
            var date_ToParameter = date_To.HasValue ?
                new ObjectParameter("Date_To", date_To) :
                new ObjectParameter("Date_To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SQE_6Panel_TopDefectPart_By_Month_Result>("sp_SQE_6Panel_TopDefectPart_By_Month", vendorParameter, date_FromParameter, date_ToParameter);
        }
    
        public virtual ObjectResult<sp_SQE_6Panel_TopDefectPart_By_YTD_Result> sp_SQE_6Panel_TopDefectPart_By_YTD(string vendor, Nullable<System.DateTime> date_From, Nullable<System.DateTime> date_To)
        {
            var vendorParameter = vendor != null ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(string));
    
            var date_FromParameter = date_From.HasValue ?
                new ObjectParameter("Date_From", date_From) :
                new ObjectParameter("Date_From", typeof(System.DateTime));
    
            var date_ToParameter = date_To.HasValue ?
                new ObjectParameter("Date_To", date_To) :
                new ObjectParameter("Date_To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SQE_6Panel_TopDefectPart_By_YTD_Result>("sp_SQE_6Panel_TopDefectPart_By_YTD", vendorParameter, date_FromParameter, date_ToParameter);
        }
    
        public virtual int sp_SQE_6Panel_UpdatePerformance(string vendor, Nullable<System.DateTime> date_From, Nullable<System.DateTime> date_To)
        {
            var vendorParameter = vendor != null ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(string));
    
            var date_FromParameter = date_From.HasValue ?
                new ObjectParameter("Date_From", date_From) :
                new ObjectParameter("Date_From", typeof(System.DateTime));
    
            var date_ToParameter = date_To.HasValue ?
                new ObjectParameter("Date_To", date_To) :
                new ObjectParameter("Date_To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SQE_6Panel_UpdatePerformance", vendorParameter, date_FromParameter, date_ToParameter);
        }
    
        public virtual ObjectResult<sp_SQE_Auto6Panel_Result> sp_SQE_Auto6Panel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SQE_Auto6Panel_Result>("sp_SQE_Auto6Panel");
        }
    
        public virtual ObjectResult<sp_SQE_GetListVendor_Result> sp_SQE_GetListVendor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SQE_GetListVendor_Result>("sp_SQE_GetListVendor");
        }
    
        public virtual ObjectResult<sp_SQE_GetSupplierInfo_Result> sp_SQE_GetSupplierInfo(string vendorCode)
        {
            var vendorCodeParameter = vendorCode != null ?
                new ObjectParameter("VendorCode", vendorCode) :
                new ObjectParameter("VendorCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SQE_GetSupplierInfo_Result>("sp_SQE_GetSupplierInfo", vendorCodeParameter);
        }
    
        public virtual ObjectResult<sp_SQE_ListVendorDetail_Result> sp_SQE_ListVendorDetail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SQE_ListVendorDetail_Result>("sp_SQE_ListVendorDetail");
        }
    
        public virtual int sp_SQE_Part_OTD(string vendor, Nullable<System.DateTime> date_From, Nullable<System.DateTime> date_To)
        {
            var vendorParameter = vendor != null ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(string));
    
            var date_FromParameter = date_From.HasValue ?
                new ObjectParameter("Date_From", date_From) :
                new ObjectParameter("Date_From", typeof(System.DateTime));
    
            var date_ToParameter = date_To.HasValue ?
                new ObjectParameter("Date_To", date_To) :
                new ObjectParameter("Date_To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SQE_Part_OTD", vendorParameter, date_FromParameter, date_ToParameter);
        }
    
        public virtual int sp_SQE_Part_PPM(string vendor, Nullable<System.DateTime> date_From, Nullable<System.DateTime> date_To)
        {
            var vendorParameter = vendor != null ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(string));
    
            var date_FromParameter = date_From.HasValue ?
                new ObjectParameter("Date_From", date_From) :
                new ObjectParameter("Date_From", typeof(System.DateTime));
    
            var date_ToParameter = date_To.HasValue ?
                new ObjectParameter("Date_To", date_To) :
                new ObjectParameter("Date_To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SQE_Part_PPM", vendorParameter, date_FromParameter, date_ToParameter);
        }
    
        public virtual ObjectResult<sp_SQE_PCN_PartList_Result> sp_SQE_PCN_PartList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SQE_PCN_PartList_Result>("sp_SQE_PCN_PartList");
        }
    
        public virtual ObjectResult<sp_SQE_RA_ProductClass_Result> sp_SQE_RA_ProductClass()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SQE_RA_ProductClass_Result>("sp_SQE_RA_ProductClass");
        }
    
        public virtual int sp_SQE_RemindSupplierLog_DueDate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SQE_RemindSupplierLog_DueDate");
        }
    
        public virtual int sp_SQE_RemindSupplierLog_Re_Evaluation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SQE_RemindSupplierLog_Re_Evaluation");
        }
    
        public virtual int sp_SQE_RemindSupplierLog_Re_Examined()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SQE_RemindSupplierLog_Re_Examined");
        }
    
        public virtual int sp_SQE_Risk_Assessment(string vendor, Nullable<int> year)
        {
            var vendorParameter = vendor != null ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SQE_Risk_Assessment", vendorParameter, yearParameter);
        }
    
        public virtual ObjectResult<string> sp_SQE_SupplierDevelop_Scar(string vendor, Nullable<int> year, Nullable<int> month)
        {
            var vendorParameter = vendor != null ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_SQE_SupplierDevelop_Scar", vendorParameter, yearParameter, monthParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_SQE_SupplierDevelopment_CheckPlan(string supplierCode, Nullable<int> fiscalYear)
        {
            var supplierCodeParameter = supplierCode != null ?
                new ObjectParameter("SupplierCode", supplierCode) :
                new ObjectParameter("SupplierCode", typeof(string));
    
            var fiscalYearParameter = fiscalYear.HasValue ?
                new ObjectParameter("FiscalYear", fiscalYear) :
                new ObjectParameter("FiscalYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_SQE_SupplierDevelopment_CheckPlan", supplierCodeParameter, fiscalYearParameter);
        }
    
        public virtual ObjectResult<sp_SQE_SupplierDevelopment_FiscalYear_Result> sp_SQE_SupplierDevelopment_FiscalYear()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SQE_SupplierDevelopment_FiscalYear_Result>("sp_SQE_SupplierDevelopment_FiscalYear");
        }
    
        public virtual ObjectResult<sp_SQE_SupplierDevelopment_NewPlan_Result> sp_SQE_SupplierDevelopment_NewPlan(string supplierCode, Nullable<int> fiscalYear)
        {
            var supplierCodeParameter = supplierCode != null ?
                new ObjectParameter("SupplierCode", supplierCode) :
                new ObjectParameter("SupplierCode", typeof(string));
    
            var fiscalYearParameter = fiscalYear.HasValue ?
                new ObjectParameter("FiscalYear", fiscalYear) :
                new ObjectParameter("FiscalYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SQE_SupplierDevelopment_NewPlan_Result>("sp_SQE_SupplierDevelopment_NewPlan", supplierCodeParameter, fiscalYearParameter);
        }
    
        public virtual int sp_SQE_SupplierDevelopment_RiskAssessment(string vendor, Nullable<int> year, Nullable<int> month)
        {
            var vendorParameter = vendor != null ?
                new ObjectParameter("Vendor", vendor) :
                new ObjectParameter("Vendor", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SQE_SupplierDevelopment_RiskAssessment", vendorParameter, yearParameter, monthParameter);
        }
    
        public virtual ObjectResult<sp_SQE_SupplierDevelopment_SearchPlan_Result> sp_SQE_SupplierDevelopment_SearchPlan(string supplierCode, Nullable<int> fiscalYear)
        {
            var supplierCodeParameter = supplierCode != null ?
                new ObjectParameter("SupplierCode", supplierCode) :
                new ObjectParameter("SupplierCode", typeof(string));
    
            var fiscalYearParameter = fiscalYear.HasValue ?
                new ObjectParameter("FiscalYear", fiscalYear) :
                new ObjectParameter("FiscalYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SQE_SupplierDevelopment_SearchPlan_Result>("sp_SQE_SupplierDevelopment_SearchPlan", supplierCodeParameter, fiscalYearParameter);
        }
    
        public virtual ObjectResult<sp_SQE_SupplierDevelopment_VisitAuditSum_Result> sp_SQE_SupplierDevelopment_VisitAuditSum()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SQE_SupplierDevelopment_VisitAuditSum_Result>("sp_SQE_SupplierDevelopment_VisitAuditSum");
        }
    
        public virtual ObjectResult<sp_SQE_Yearlist_Result> sp_SQE_Yearlist()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SQE_Yearlist_Result>("sp_SQE_Yearlist");
        }
    
        public virtual int sp_SQEDB_SupplierLog_Remind_ReEvaluation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SQEDB_SupplierLog_Remind_ReEvaluation");
        }
    
        public virtual ObjectResult<sp_Inv_SugList_Result> sp_Inv_SugList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Inv_SugList_Result>("sp_Inv_SugList");
        }
    
        public virtual ObjectResult<sp_SOR_GetSoOpen_Result> sp_SOR_GetSoOpen()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SOR_GetSoOpen_Result>("sp_SOR_GetSoOpen");
        }
    
        public virtual ObjectResult<sp_SOR_GetSoReview_Result> sp_SOR_GetSoReview()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SOR_GetSoReview_Result>("sp_SOR_GetSoReview");
        }
    
        public virtual ObjectResult<sp_SOR_GetSoReviewHist_Result> sp_SOR_GetSoReviewHist()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SOR_GetSoReviewHist_Result>("sp_SOR_GetSoReviewHist");
        }
    
        public virtual int sp_SOR_OTDFailByLine_Report()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SOR_OTDFailByLine_Report");
        }
    
        public virtual int sp_SOR_RemindReview()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SOR_RemindReview");
        }
    
        public virtual int sp_SOR_RiskShip_Report()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SOR_RiskShip_Report");
        }
    }
}
