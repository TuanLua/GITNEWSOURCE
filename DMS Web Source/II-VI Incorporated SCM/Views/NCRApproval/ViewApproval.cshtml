@using System.Activities.Statements
@using II_VI_Incorporated_SCM.Models
@using II_VI_Incorporated_SCM.Services;
@using Microsoft.AspNet.Identity
@using System.Globalization;
@using II_VI_Incorporated_SCM.Models.NCR;
@using II_VI_Incorporated_SCM.Extensions;
@model II_VI_Incorporated_SCM.Models.NCR.NCRManagementViewModel

@{
    ViewBag.Title = "View NCR";
    List<SelectListItem> lstAllUsers = new List<SelectListItem>();
    foreach (var item in (List<AspNetUser>)ViewBag.ListAllUsers)
    {
        lstAllUsers.Add(new SelectListItem { Value = item.Id, Text = item.FullName });
    }
}
<style>
    .multiselect-container {
        max-height: 300px !important;
        max-width: 1024px !important;
        padding-left: 30px !important;
    }

    .display-none {
        display: none;
    }

    .style-form-add {
        border-top: 1px solid;
    }

    table {
        border-collapse: collapse;
        padding: 8px !important;
    }

    table, td, th {
        border: 1px solid #252323 !important;
    }

    #gridTaskDetail > table {
        border: 1px #ccc solid !important;
        border-width: 0 !important;
    }

        #gridTaskDetail > table > td {
            border: 1px #ccc solid !important;
            border-width: 0 !important;
        }

    .k-grid table {
        border-collapse: collapse !important;
        border: 1px solid #ccc !important;
    }

    .cblockUI {
        /*pointer-events: none;*/
        opacity: 1;
    }

    .hidebutton {
        display: none;
    }
</style>
<style>
    .CRNo:hover {
        color: white;
        text-decoration: underline;
        cursor: pointer;
    }

    .Refnum:hover {
        color: white;
        text-decoration: underline;
        cursor: pointer;
    }

    .Refnum {
        color: blue;
    }

    .CRNo {
        color: blue;
    }

    .history {
        color: blue;
    }
</style>
<input hidden value="@Model.RECEIVER" id="dataForLstDefect" />
<input hidden value="@ViewBag.SEC" id="SEC" />
<div class="row">

    @using (Html.BeginForm("ViewApproval", "NCRApproval", FormMethod.Post, new { @class = "form-horizontal", role = "form", @enctype = "form-data", @id = "Create" }))
    {
        <input type="hidden" name="Comment" id="Comment" />
        <input type="hidden" name="MRB_LOC" id="MRB_LOC" />
        <input type="hidden" id="STT" value="@ViewBag.STT" />
        @Html.HiddenFor(model => model.NCR_NUM)
        <div class="col-md-12">
            <!-- BEGIN EXAMPLE TABLE PORTLET-->
            <div class="portlet box">
                <div class="portlet-title">
                    <div class="caption">
                        @if ((bool)ViewBag.IsMRBTeam && ViewBag.Status == StatusInDB.WaitingForDisposition)
                        {
                            <input type="hidden" value="@StatusInDB.WaitingForDisposition" name="submitRole" id="submitRole" />
                            <a class="btn btn-success btn-sm" onclick="submitApprDispo()" id="btn-dispo">Disposition</a>
                            <a class="btn btn-success btn-sm display-none" id="btn-okdispo" onclick="saveDataDispo()">Save</a>
                        }
                        @if ((bool)ViewBag.IsWHMRB && ViewBag.Status == StatusInDB.Submitted)
                        {
                            <input type="hidden" value="@StatusInDB.Submitted" name="submitRole" id="submitRole" />
                            <a class="btn btn-success btn-sm " onclick="submitApprConfirm()" id="btn-confirm">Confim NCR</a>
                            <a class="btn btn-warning btn-sm " onclick="submitApprRejectWH()" id="btn-reject">Reject NCR</a>
                        }


                        @if ((bool)ViewBag.IsOPE && ViewBag.isOPEOwner && ViewBag.Status == StatusInDB.Created)
                        {
                            <input type="hidden" value="@StatusInDB.Created" name="submitRole" id="submitRole" />
                            <a class="btn btn-success btn-sm " onclick="EditNCR()" id="btn-edit">Edit</a>
                            <input type="hidden" id="ROLEOFUSER" value="OPE" />
                            <button type="button" class="btn btn-success btn-sm" id="submit" onclick="submitApprcreate()">Submit To WH</button>
                            <button type="button" class="btn btn-success btn-sm" id="submitFloNCR" onclick="SelectLocalMRB()">Submit To FloorMRB</button>
                            @*<button type="button" class="btn btn-success btn-sm" style="display: none" id="savesubmit" onclick="submitApprcreate()">Save</button>*@
                        }
                        <a class="btn btn-success btn-sm " id="bt-close">Back to list</a>
                    </div>

                    <div class="actions" style="margin-top: 0px;">
                        @if ((ViewBag.IsSQE@*|| ViewBag.IsBuyer*@) && ViewBag.HasVendor && @Model.requered == "checked" && ViewBag.Status == StatusInDB.DispositionApproved)
{
<a class="btn btn-success btn-sm" onclick="createSCAR('@Model.NCR_NUM')" id="btn-scar">SCAR</a>
}
                        @if ((bool)ViewBag.ShowBtnChangeSubmitItem & ViewBag.Status == StatusInDB.DispositionApproved)
                        {
                            <a class="btn btn-success btn-sm" id="click">
                                Submit Change Item
                            </a>
                        }
                        @if (ViewBag.Status != StatusInDB.Created & ViewBag.Status != StatusInDB.Close)
                        {
                            <a class="btn btn-success btn-sm" id="closencr" target="_blank" href="@Url.Action("CreateTaskManagementNcrByTaskNo", "TaskManagement", new { taskNO = Model.NCR_NUM.Trim(),type="NCR" })">
                                Add Task
                            </a>
                        }
                        <a class="btn btn-success btn-sm " style="margin-right: 10px;" target="_blank" href="@Url.Action("PrintMRBTAG", "NCRApproval", new { NCR_NUM = Model.NCR_NUM })">Print MRB Tag</a>
                        <button type="button" class="btn btn-success btn-sm" style="margin-right: 10px;" data-toggle="modal" data-target="#modelPrint" id="showprintf">
                            Print
                        </button>
                        @if ((bool)ViewBag.isOPEOwner && ViewBag.Status == StatusInDB.Created)
                        {
                            <a class="btn btn-success btn-sm" id="void" onclick="submitApprVoid()">
                                Void
                            </a>
                        }
                        @if ((bool)ViewBag.IsChairm && ViewBag.Status == StatusInDB.DispositionApproved)
                        {
                            <a class="btn btn-danger btn-sm" id="closencr" onclick="closencr()">
                                Close NCR
                            </a>

                        }

                    </div>

                </div>
                <p style="text-align:right; padding:0px; margin:0px; font-size:20px;">NO.<span style="color: red"> @Model.NCR_NUM</span></p>
                <div class="table-responsive" style="overflow: hidden">
                    <table class="table table-striped table-bordered table-hover">
                        <colgroup>
                            <col width="30%" />
                            <col width="10%" />
                            <col width="30%" />
                            <col width="15%" />
                            <col width="15%" />
                        </colgroup>
                        <tbody>
                            <tr>
                                <td>
                                    <p><b>MI PART NO.</b></p>
                                    @Model.MI_PART_NO
                                </td>
                                <td>
                                    <p><b>REV</b></p>
                                    @Model.DRAW_REV
                                </td>
                                <td>
                                    <p><b>PO NUMBER</b></p>
                                    @Model.PO_NUM
                                </td>
                                <td colspan="2">
                                    <p><b>TRAVELER NO./ ARM NO. /LOT#.</b></p>
                                    @Model.LOT
                                </td>
                            </tr>
                            <tr>
                                <td colspan="2">
                                    <p><b>DESCRIPTION OF MATERIAL</b></p>
                                    @Model.ITEM_DESC
                                </td>
                                <td>
                                    <p><b>MODEL OR  SERIAL NO.</b></p>
                                    @Model.MODEL_NO
                                </td>
                                @if (@Model.TYPE_NCR == "IQC")
                                {
                                    <td>
                                        <p><b>REC.INSP</b></p>
                                        <input type="checkbox" disabled="disabled" class="checkboxes" checked="checked" />
                                    </td>
                                    <td>
                                        <p><b>IN PROCESS</b></p>
                                        <input type="checkbox" class="checkboxes" disabled="disabled" readonly="readonly" />
                                    </td>
                                }

                                else if (@Model.TYPE_NCR == "PROCESS")
                                {
                                    <td>
                                        <p><b>REC.INSP</b></p>
                                        <input type="checkbox" id="Type_Insp" class="checkboxes" disabled="disabled" />
                                    </td>
                                    <td>
                                        <p><b>INPROCESS</b></p>
                                        <input type="checkbox" id="inprocess" class="checkboxes" disabled="disabled" checked="checked" />
                                    </td>
                                }
                            </tr>
                        </tbody>
                    </table>
                    <table class="table table-striped table-bordered table-hover" id="sample_3">
                        <thead>
                            <tr>
                                <th colspan="6" class="text-center">INSPECTION PLAN</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td rowspan="4" style="vertical-align:middle">VENDOR</td>
                                <td rowspan="2">
                                    <p><b>NAME OF VENDOR</b></p>
                                    @Model.VEN_NAME
                                </td>
                                @if (@Model.SAMPLE_INSP == true)
                                {
                                    <td colspan="2">
                                        <p><b>SAMPLE INSC</b></p>
                                        <input type="checkbox" class="checkboxes" disabled="disabled" checked="checked" />
                                        <label>AQL</label> 0.65 LEVEL C=0
                                    </td>
                                }
                                else
                                {
                                    <td colspan="2">
                                        <p><b>SAMPLE INSP</b></p>
                                        <input type="checkbox" class="checkboxes" disabled="disabled" />
                                        <label>AQL</label>  LEVEL
                                    </td>
                                }
                                @if (@Model.PERCENT_INSP == true)
                                {
                                    <td>
                                        <p><b>100%</b></p>
                                        INSP
                                        <input type="checkbox" class="checkboxes" disabled="disabled" checked="checked" />
                                    </td>
                                }
                                else
                                {
                                    <td>
                                        <p><b>100%</b></p>
                                        INSP
                                        <input type="checkbox" class="checkboxes" disabled="disabled" />
                                    </td>

                                }
                                @if (Model.FIRST_ARTICLE == true)
                                {
                                    <td colspan="2">
                                        <p><b>FIRST ARTICLE</b></p>
                                        <input type="checkbox" class="checkboxes" checked="checked" disabled="disabled" />
                                    </td>
                                }
                                else
                                {
                                    <td colspan="2">
                                        <p><b>FIRST ARTICLE</b></p>
                                        <input type="checkbox" class="checkboxes" disabled="disabled" />
                                    </td>
                                }


                            </tr>
                            <tr>
                                <td colspan="6">
                                    <p style="text-align: center"><b>QUANTITY</b></p>
                                </td>
                            </tr>
                            <tr class="odd gradeX">
                                <td>
                                    <p><b>STREET ADDRESS</b></p>
                                    @Model.VEN_ADD
                                </td>
                                <td>
                                    <p><b>RECEIVED</b></p>
                                    @Model.REC_QTY
                                </td>
                                <td>
                                    <p><b>INSPECTED</b></p>
                                    @Model.INS_QTY
                                </td>
                                <td>
                                    <p><b>DEFECTIVE</b></p>
                                    @Model.defect
                                </td>
                                <td>
                                    <p> <b>REJECTED</b></p>
                                    @Model.REJ_QTY
                                </td>
                            </tr>
                            <tr class="odd gradeX">
                                <td style="text-align: left">
                                    <p>
                                        <b>CITY :</b> @Model.CITY
                                        <b>STATE:</b> @Model.STATE <b> ZIP CODE:</b> @Model.ZIP_CODE
                                    </p>
                                </td>
                                <td>
                                    <p><b>REPORT WRITTEN BY </b></p>
                                    @Model.INSPECTOR
                                </td>
                                <td colspan="3">
                                    <p><b>DATE</b></p>
                                    @(Model.INS_DATE.HasValue ? Model.INS_DATE.Value.GetDateTimeFormat() : "")
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <div>
                        <fieldset class="col-md-12">
                            <div class="form-body">
                                <div class="form-group">
                                    <label class="col-md-offset-4  control-label">
                                        <span>VN Material Traceability</span> <span style="color: red">* &nbsp;&nbsp;&nbsp;<a target="_blank" href="@Url.Action("DownloadVNMaterialTraceability", "NCRApproval", new { id = Model.OldVNMaterialTraceability})"><i class="fa fa-file-pdf-o">View File</i></a></span>
                                        <p style="margin:0;"><a target="_blank" href="@ViewBag.VNMaterialTraceabilityLink">Link to eCQ “VN Material Traceability”</a></p>
                                    </label>
                                </div>
                            </div>
                            <br />
                            <legend>Attach Evidence</legend>
                            <div class="">
                                <table class="table table-striped table-bordered table-hover table-checkable order-column" id="tbEvidenceInProcess">
                                    <thead>
                                        <tr>
                                            <th>File Name</th>
                                        </tr>
                                    </thead>
                                    <tbody id="tbodyEvidenceInProcess">
                                        @foreach (var evi in Model.OldEvidence)
                                        {
                                            <tr>
                                                <td width="80%;" style="text-align: left !important;">
                                                    &nbsp;&nbsp;&nbsp;&nbsp;
                                                    <a target="_blank" href="@Url.Action("DownloadFile", "NCRApproval", new { fileId = evi.EVI_ID })"><i class="fa fa-file-pdf-o"> &nbsp; @evi.EVI_PATH.Split('/')[1] </i></a>
                                                    <input type="hidden" name="EVIID" value="@evi.EVI_ID" />
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>

                        </fieldset>
                    </div>
                    <div class="portlet grey col-md-12">
                        <div class="row margin-left-right-0">
                            <div class="form-group" style="padding-left:50px;padding-right:50px">
                                <h4 style="font-weight: bold">Non-Comformity:</h4>
                                <table class="table table-striped table-bordered table-hover table-checkable order-column" id="tbl-NCRDETs">
                                    <thead>
                                        <tr>
                                            <th width="5%">ITEM</th>
                                            <th width="5%">QTY</th>
                                            <th width="15%">DEFECT</th>
                                            <th width="15%">DESCRIPTION</th>
                                            <th width="20%">REMARK</th>
                                            <th width="15%">RESPON</th>
                                            <th width="15%">DISP'N</th>
                                        </tr>
                                    </thead>
                                    <tbody id="tbody-NCRDETs">
                                        @{
                                            var count = 0;
                                            foreach (var item in Model.NCRDETs)
                                            {
                                                var i = count + 1;
                                                <tr class="odd data-non-confirmity" id="data-confirmity-@item.ITEM" rev="@item.ITEM">
                                                    <td>
                                                        @i
                                                        <input type="hidden" value="@item.ITEM" name="NCRDETs[@item.ITEM].ITEM" />
                                                    </td>
                                                    <td id="item-qty_@count">
                                                        @item.QTY
                                                        <input type="hidden" value="@item.QTY" name="NCRDETs[@item.ITEM].QTY" />
                                                    </td>
                                                    <td>
                                                        @item.DEFECT_STRING
                                                        <input type="hidden" value="@item.DEFECT_STRING" name="NCRDETs[@item.ITEM].DEFECT_STRING" />
                                                    </td>
                                                    <td>
                                                        @item.NC_DESC_STRING
                                                        <input type="hidden" value="@item.DEFECT_STRING" name="NCRDETs[@item.ITEM].DEFECT_STRING" />
                                                    </td>
                                                    <td>
                                                        @item.REMARK
                                                        <input type="hidden" value="@item.REMARK" name="NCRDETs[@item.ITEM].REMARK" />
                                                    </td>
                                                    <td id="reponsedrop" class="reponsedrop">
                                                        @Html.DropDownList("NCRDETs[" + item.ITEM + "].RESPONSE", new SelectList(Model.ListRespon, "ID", "NAME"), "Please select", new { @class = "form-control NCRDETs_response display-none" })
                                                        <span class="display-none hasRespon">@item.RESPONSENAME</span>
                                                    </td>
                                                    <td id="depositiondrop" class="depositiondrop">
                                                        @Html.DropDownList("NCRDETs[" + item.ITEM + "].DISPOSITION", new SelectList(Model.ListDispo, "ID", "NAME"), "Please select", new { @class = "form-control NCRDETs_disposition display-none", @onchange = "changeNCR_DET_DISPOSITION(" + count + ", this)", onfocus = "this.selectedIndex = -1;" })
                                                        <span class="display-none hasDis">@item.DISPOSITIONNAME</span>
                                                    </td>
                                                </tr>
                                                count++;
                                            }
                                        }
                                    </tbody>
                                </table>

                                <!--Div Attach file and Rework-->
                                @if (Model.STATUS.Trim() != StatusInDB.Created & Model.STATUS.Trim() != StatusInDB.Submitted & Model.STATUS.Trim() != StatusInDB.Void)
                                {
                                    <div id="attackmentfiledispo" style="display:none">
                                        <br />
                                        <h4 style="font-weight: bold">Disposition attachments</h4>
                                        <table class="table table-striped table-bordered table-hover table-checkable order-column" id="tb-non-comformity-file">
                                            <thead>
                                                <tr>
                                                    <th width="15%">ITEM</th>
                                                    <th width="20%">DISPOSITION</th>
                                                    <th width="20%">ATTACH FILE</th>
                                                    <th width="45%">MESSAGE</th>
                                                    @*<th width="45%">TYPE</th>*@
                                                </tr>
                                            </thead>

                                            <tbody id="tbody-non-comformity-file">
                                                @{
                                                    if (Model.STATUS.Trim() == StatusInDB.WaitingForDisposition & Model.SAMPLE_INSP == false) ///la
                                                    {
                                                        int i = 0;
                                                        foreach (var item in Model.NCRDETs)
                                                        {
                                                            int ii = i + 1;
                                                            <tr id="tr-non-confirmity-file-@item.ITEM" style="display:none">
                                                                <td>
                                                                    <span>@ii</span>
                                                                    <input type="hidden" value="@item.ITEM" name="DISPOSITION[@item.ITEM].Item" id="non-confirmity-item-@item.ITEM" />
                                                                    <input type="hidden" value="0" name="DISPOSITION[@item.ITEM].IsSave" id="non-confirmity-save-@item.ITEM" />
                                                                    <input type="hidden" value="DET" name="DISPOSITION[@item.ITEM].Type" id="or-type-@item.ITEM" />
                                                                </td>
                                                                <td>
                                                                    <span></span>
                                                                    <input type="hidden" value="" name="DISPOSITION[@item.ITEM].Disposition" id="non-confirmity-type-@item.ITEM" />
                                                                </td>
                                                                <td>
                                                                    <span></span>
                                                                    <input onchange="ckFileUpload(this)" hidden type="file" accept="application/pdf,application/PDF" class="form-control valid" data-val="true" data-val-maximumfilesize="File Attach can not be larger than 10 MB" data-val-maximumfilesize-size="10" data-val-required="The File Attach field is required." data-val-validfiletype="File Attach must be one of the following file types: pdf,PDF" data-val-validfiletype-filetypes="pdf,PDF" value="" aria-required="true" aria-describedby="FileAttach-error" aria-invalid="false" name="DISPOSITION[@item.ITEM].FileAttach" style="display:none" id="non-confirmity-file-@item.ITEM" />
                                                                </td>
                                                                <td>
                                                                    <span></span>
                                                                    <input type="hidden" name="DISPOSITION[@item.ITEM].Message" value="" id="non-confirmity-message-@item.ITEM" />
                                                                </td>
                                                                @*<td></td>*@
                                                            </tr>
                                                            i++;
                                                        }
                                                    }
                                                    else if (Model.STATUS.Trim() == StatusInDB.WaitingForDispositionApproval ||
                                                        Model.STATUS.Trim() == StatusInDB.DispositionApproved ||
                                                        Model.STATUS.Trim() == StatusInDB.Close)
                                                    {
                                                        foreach (var item in Model.DISPOSITION)
                                                        {
                                                            int ii = int.Parse(item.Item) + 1;
                                                            string filename = !string.IsNullOrEmpty(item.FileAttachName) ? item.FileAttachName.Split('/')[1] : "";
                                                            <tr id="tr-non-confirmity-file-@item.Item">
                                                                <td>
                                                                    <span>@ii</span>
                                                                </td>
                                                                <td>
                                                                    <span>@item.Disposition</span>
                                                                </td>
                                                                <td>
                                                                    <span><a target="_blank" href="@Url.Action("DownloadFile", "NCRApproval", new {fileId = 0, type = "OrderDisposition", filepath = item.FileAttachName })">@filename</a></span>
                                                                </td>
                                                                <td>
                                                                    <span>@item.Message</span>
                                                                </td>
                                                                @*<td>@item.Type</td>*@
                                                            </tr>
                                                        }
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                }


                                <div id="divNCRDISs" class="display-none">
                                    <br />
                                    <h4 style="font-weight: bold">ADDITIONALS INSTRUCTIONS</h4>
                                    <table class="table table-striped table-bordered table-hover table-checkable order-column" id="tb-NCRDISs">
                                        <thead>
                                            <tr>
                                                <th width="7%">ITEM</th>
                                                <th width="10%">QTY</th>
                                                <th width="25%">ADDITIONALS INSTRUCTIONS</th>
                                                <th width="20%">REMARK</th>
                                                <th width="20%">INSP.</th>
                                                <th width="10%">DATE</th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                        @{
                                            List<SelectListItem> listItem = new List<SelectListItem>();
                                            var dem = 1;
                                            foreach (var item in Model.NCRDETs)
                                            {
                                                listItem.Add(new SelectListItem { Value = dem.ToString(), Text = dem.ToString() });
                                                dem++;
                                            }
                                        }
                                        <tbody id="append-data-NCRDISs">
                                            @if (Model.STATUS.Trim() == StatusInDB.WaitingForDisposition)
                                            {
                                                <tr class="display-none" id="tr-NCRDIS_template">
                                                    <td style="width:60px">
                                                        @Html.DropDownList("NCRDIS_template_item", listItem, "Please select", new { @class = "form-control", onchange = ("addclassslitem(this)") })
                                                    </td>
                                                    <td>@Html.TextBox("NCRDIS_template_qty", null, new { maxlength = 80, @class = "form-control", onkeypress = "return keypress(this)", onchange = ("Checkvalidateqty(this)") })</td>
                                                    <td>
                                                        @Html.DropDownList("NCRDIS_template_addins", new SelectList(Model.ListAddition, "ID", "NAME"), "Please select", new { @class = "form-control", @onchange = "add_raw_addins_onchange(this)", @onfocus = "this.selectedIndex = -1;" })
                                                    </td>
                                                    <td>@Html.TextArea("NCRDIS_template_remark", null, new { maxlength = 100000000, size = 10, @class = "form-control" })</td>
                                                    <td>
                                                        @Html.DropDownList("NCRDIS_template_inp", lstAllUsers, "Please select", new { maxlength = 80, @class = "form-control", @onfocus = "this.selectedIndex = -1;" })
                                                    </td>
                                                    <td>@*@DateTime.Now.ToString("dd-MMM-yy")*@</td>
                                                    <td>
                                                        <button type="button" class="btn btn-info" btn-role="edit" onclick="EditNCRDISs(this)">EDIT</button>
                                                        <button type="button" class="btn btn-danger" btn-role="delete" onclick="DeleteNCRDISs(this)">Delete</button>
                                                    </td>
                                                </tr>
                                            }
                                            else if (Model.STATUS.Trim() == StatusInDB.WaitingForDispositionApproval)
                                            {
                                                <tr class="display-none" id="tr-NCRDIS_template">
                                                    <td style="width:60px">
                                                        @Html.DropDownList("NCRDIS_template_item", listItem, "Please select", new { @class = "form-control", onchange = ("addclassslitem(this)") })
                                                    </td>
                                                    <td>
                                                        @Html.TextBox("NCRDIS_template_qty", null, new { maxlength = 80, @class = "form-control", onkeypress = "return keypress(this)",
                                                   autocomplete = "false" @*onchange = ("Checkvalidateqty(this)")*@})
                                                    </td>
                                                    <td>
                                                        @Html.DropDownList("NCRDIS_template_addins", new SelectList(Model.ListAddition, "ID", "NAME"), "Please select", new { @class = "form-control", @onchange = "add_raw_addins_onchange(this)", @onfocus = "this.selectedIndex = -1;" })
                                                    </td>
                                                    <td>@Html.TextArea("NCRDIS_template_remark", null, new { maxlength = 100000000, size = 10, @class = "form-control" })</td>
                                                    <td>
                                                        @Html.DropDownList("NCRDIS_template_inp", lstAllUsers, "Please select", new { maxlength = 80, @class = "form-control", @onfocus = "this.selectedIndex = -1;" })
                                                    </td>
                                                    <td>@*@DateTime.Now.ToString("dd-MMM-yy")*@</td>
                                                    <td>
                                                        @*<button  type="button" class="btn btn-info" btn-role="edit" onclick="EditNCRDISsForApproval(this)">EDIT</button>*@
                                                        <button type="button" class="btn btn-danger" btn-role="delete" onclick="DeleteNCRDISs(this)">Delete</button>
                                                    </td>
                                                </tr>
                                                for (int i = 0; i < Model.NCRDISs.Count; i++)
                                                {
                                                    var item = Model.NCRDISs[i];
                                                    int ii = int.Parse(item.ITEM) + 1;
                                                    <tr class="tr-NCRDIS-old" id="tr-NCRDIS-new-@i">
                                                        <td style="width:60px">
                                                            <span>@ii</span>
                                                        </td>
                                                        <td>@Html.TextBox("NCRDIS_qty" + i, item.QTY, new { maxlength = 80, @class = "form-control", onkeypress = "return keypress(this)", disabled = true })</td>
                                                        <td>
                                                            <span>@item.ADD_INS</span>
                                                        </td>
                                                        <td>
                                                            <span id="dis-remark-old-@item.ITEM">@item.REMARK</span>
                                                            @Html.TextArea("NCRDIS_remark" + i, item.REMARK, new { maxlength = 100000000, size = 10, @class = "form-control display-none", disabled = true })
                                                        </td>
                                                        <td>
                                                            <span>@item.INSPECTOR</span>
                                                        </td>
                                                        <td>@(item.DATEAPPROVAL.HasValue ? item.DATEAPPROVAL.Value.GetDateTimeFormat() : "")</td>
                                                        <td>
                                                            @if (!item.DATEAPPROVAL.HasValue)
                                                            {
                                                                @*<button type="button" class="btn btn-info" btn-role="edit" ncrdis-id="@item.Id" onclick="EditNCRDISsForApproval(this)">EDIT</button>
                                                                    <button type="button" class="btn btn-danger" btn-role="delete" ncrdis-id="@item.Id" onclick="DeleteNCRDISsForApproval(this)">Delete</button>*@
                                                            }
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                            else if (Model.STATUS.Trim() == StatusInDB.DispositionApproved || Model.STATUS.Trim() == StatusInDB.Close)
                                            {
                                                for (int i = 0; i < Model.NCRDISs.Count; i++)
                                                {
                                                    var item = Model.NCRDISs[i];
                                                    int ii = int.Parse(item.ITEM) + 1;
                                                    <tr class="tr-NCRDIS-old" id="tr-NCRDIS-new-@i">
                                                        <td style="width:60px">
                                                            <span>@ii</span>
                                                        </td>
                                                        <td>@Html.TextBox("NCRDIS_qty" + i, item.QTY, new { maxlength = 80, @class = "form-control", onkeypress = "return keypress(this)", disabled = true })</td>
                                                        <td>
                                                            <span>@item.ADD_INS</span>
                                                        </td>
                                                        <td>
                                                            <span id="dis-remark-old-@item.ITEM">@item.REMARK</span>
                                                            @Html.TextArea("NCRDIS_remark" + i, item.REMARK, new { maxlength = 100000000, size = 10, @class = "form-control display-none", disabled = true })
                                                        </td>
                                                        <td>
                                                            <span>@item.INSPECTOR</span>
                                                        </td>
                                                        <td>@(item.DATEAPPROVAL.HasValue ? item.DATEAPPROVAL.Value.GetDateTimeFormat() : "")</td>
                                                        <td></td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                    @if (Model.STATUS.Trim() != StatusInDB.DispositionApproved & Model.STATUS.Trim() != StatusInDB.Close)
                                    {
                                        <button type="button" class="btn btn-success pull-right" id="btn-NCRDIS-add" style="margin-top:-20px;margin-bottom:10px;" onclick="btnAdd(this)">ADD NEW</button>
                                        <button type="button" class="btn btn-success pull-right display-none " id="btn-ok-c" style="margin-top:-20px;margin-bottom:10px;" onclick="addNewRaw(this)">Save</button>
                                    }


                                    <!-- Tuan Lua add attackfile cho addin-->
                                    <div id="add-in_table" style="display:none">
                                        <br />
                                        <h4 style="font-weight: bold">List attachments files Additional Instructions</h4>
                                        <table class="table table-striped table-bordered table-hover table-checkable order-column" id="tb-addin-file">
                                            <thead>
                                                <tr>
                                                    <th width="15%">ITEM</th>
                                                    <th width="20%">Additional Instructions</th>
                                                    <th width="20%">ATTATCH FILE</th>
                                                    <th width="45%">MESSAGE</th>
                                                </tr>
                                            </thead>

                                            <tbody id="tbody-addin-file">
                                                @*<tr id="tr-addin-file-template" class="tr-addin-file-active" style="display:none">
                                                        <td>
                                                            <span>#temp-item</span>
                                                            <input type="hidden" value="#temp-item-save" name="ADDIN[#temp-item-save].Item" id="addin-item-#temp-item-save" />
                                                            <input type="hidden" value="0" name="ADDIN[#temp-item-save].IsSave" id="addin-save-#temp-item-save" />
                                                            <input type="hidden" value="DIS" name="ADDIN[#temp-item-save].Type" id="addin-type-#temp-item-save" />
                                                        </td>
                                                        <td>
                                                            <span></span>
                                                            <input type="hidden" value="" name="ADDIN[#temp-item-save].Disposition" id="non-addin-type-#temp-item-save" />
                                                        </td>
                                                        <td>
                                                            <span></span>
                                                            <input onchange="ckFileUpload(this)" hidden type="file" accept="application/pdf,application/PDF" class="form-control valid" data-val="true" data-val-maximumfilesize="File Attach can not be larger than 10 MB" data-val-maximumfilesize-size="10" data-val-required="The File Attach field is required." data-val-validfiletype="File Attach must be one of the following file types: pdf,PDF" data-val-validfiletype-filetypes="pdf,PDF" value="" aria-required="true" aria-describedby="FileAttach-error" aria-invalid="false" name="ADDIN[#temp-item-save].FileAttach" style="display:none" id="addin-file-#temp-item-save" />
                                                        </td>
                                                        <td>
                                                            <span></span>
                                                            <input type="hidden" name="ADDIN[#temp-item-save].Message" value="" id="addin-message-#temp-item-save" />
                                                        </td>
                                                    </tr>*@
                                            </tbody>
                                        </table>
                                    </div>


                                    <!---->

                                    <br />
                                    @if (Model.SAMPLE_INSP == false)
                                    {
                                        <h4 style="font-weight: bold" id="remain-sum">REMAINING</h4>
                                        <table class="table table-striped table-bordered table-hover table-checkable order-column" id="table-remain">
                                            <thead>
                                                <tr>
                                                    <th>ITEM</th>
                                                    <th>QTY</th>
                                                </tr>
                                            </thead>
                                            <tbody id="append-data-remain">
                                                @if (Model.STATUS.Trim() == StatusInDB.WaitingForDispositionApproval)
                                                {
                                                    foreach (var det in Model.NCRDETs)
                                                    {
                                                        if (det.DISPOSITION == CONFIRMITY_DISPN.ID_DESCRIBE || det.DISPOSITION == CONFIRMITY_DISPN.ID_TBD)
                                                        {
                                                            int i = int.Parse(det.ITEM) + 1;
                                                            var sumdis = Model.NCRDISs.Where(x => x.ITEM.Trim().Equals(det.ITEM.Trim())).Sum(x => x.QTY);
                                                            if (det.QTY > sumdis)
                                                            {
                                                                <tr>
                                                                    <td>@i</td>
                                                                    <td>@(det.QTY - sumdis)</td>
                                                                </tr>
                                                            }
                                                        }
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    }
                                </div>





                            </div>

                        </div>
                    </div>

                </div>
            </div>
        </div>
        if ((bool)ViewBag.IsOPE && ViewBag.isOPEOwner && ViewBag.Status == StatusInDB.Created)
        {
            <!-- Modal Submit without meetting -->
            <div id="mdsubmitconfirm" class="modal fade" role="dialog">
                <div class="modal-dialog">

                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">Do you want to submit NCR ?</h4>
                        </div>
                        <div class="modal-body">
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-info" onclick="$('#mdsubmitwithoutmeeting').modal({ backdrop: 'static', keyboard: false })" data-dismiss="modal">Yes, submit and approve without meeting</button>
                            <button type="button" class="btn btn-success" onclick="submitNCR()" data-dismiss="modal">Yes, submit this NCR</button>
                            <button type="button" class="btn btn-danger" data-dismiss="modal">No</button>
                        </div>
                    </div>

                </div>
            </div>

            <!-- Modal Submit without meetting -->
            <div id="mdsubmitwithoutmeeting" class="modal fade" role="dialog">
                <div class="modal-dialog">

                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">Leave The Message</h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group">
                                <textarea id="mdsubmitwithoutmeeting-message" class="form-control" cols="10"></textarea>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-success" onclick="submitNCR($('#mdsubmitwithoutmeeting-message').val())" data-dismiss="modal">OK</button>
                            <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                        </div>
                    </div>

                </div>
            </div>
            <!-- Modal Submit Local MRB(Floor NCR) -->
            <div id="mdFloorNCR" class="modal fade" role="dialog">
                <div class="modal-dialog">

                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">Choose Floor MRB</h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group">
                                <select class="form-control" id="localMRB">
                                    <option>ASS_MRB</option>
                                    <option>SYS_MRB</option>
                                    <option>FE_MRB</option>
                                    <option>MC_MRB</option>
                                </select>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-success" onclick="submitFloorNCR()" data-dismiss="modal">OK</button>
                            <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                        </div>
                    </div>

                </div>
            </div>
            <div class="row" id="modelSubmit" style="display: none">
                <div class="col-md-12" id="div-Approver">
                    <div class="portlet grey bordered">
                        <div class="row">
                            <div class="col-md-12 form-horizontal">
                                <div class="col-md-6 form-group">
                                    <div class="col-md-12">
                                        <h3 style="font-weight: bold">MARLOW MRB AUTHORIZATION</h3>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!--MRB Auth for disposition-->
                        <div class="" id="modelSubmitForSubmit">
                            <div class="">
                                <table class="table table-striped table-bordered table-hover table-checkable order-column" id="tbMRBAuthorizationForSubmit">
                                    <thead>
                                        <tr>
                                            <th>Role name</th>
                                            <th>User name</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody id="tbodyApprovarForSubmit"></tbody>
                                </table>
                                <button type="button" class="btn btn-success pull-right" id="btnApproverForSubmit">Add Approver</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>


            <script>

                $('#btnApproverForSubmit').click(function () {

                    let listRow = $('.tr-Approver-forSubmit');
                    let rowlength = listRow.length;

                    for (let i = 0; i < rowlength; i++) {
                        var ListColumns = listRow[i].children;
                        ListColumns[0].children[0].name = "UserApprove[" + i + "].RoleId";
                        ListColumns[1].children[0].name = "UserApprove[" + i + "].UserId";
                    }

                    let selectRole = $('#ListRoleTemplate').html();
                    let trtemplate = '<tr class="tr-Approver-forSubmit" >' +
                        '<td width="40%"><select id="option-role-approve-forSubmit-' + rowlength +'" name="UserApprove[' + rowlength + '].RoleId">' + selectRole +'</select></td>' +
                        '<td width="40%"><select id="option-user-approve-forSubmit-' + rowlength + '" style="display:none" name="UserApprove[' + rowlength +'].UserId"><option value="">Select Approver</option></select></td>'+
                        '<td><button onclick="deleteApproverForSubmit(this)" type="button" class="btn btn-danger pull-right">Delete</button></td></tr>';
                    $("tbody#tbodyApprovarForSubmit").append(trtemplate);

                    $("#option-role-approve-forSubmit-" + rowlength).multiselect({
                        dropUp: true,
                        enableFiltering: true, enableCaseInsensitiveFiltering: true,
                        onChange: function (option, checked) {

                            console.log(checked + ' - ' + option + ' - ' + $("#option-role-approve-forSubmit-" + rowlength).val());
                            $.get('@Url.Action("GetUserByRoleWaittingdispo", "NCRApproval")?role=' + $("#option-role-approve-forSubmit-" + rowlength).val())
                                .success(function (data) {
                                    $('#option-user-approve-forSubmit-' + rowlength).show();
                                    $('#option-user-approve-forSubmit-' + rowlength).multiselect({ dropUp: true, enableFiltering: true, enableCaseInsensitiveFiltering: true, buttonWidth: '100%' });
                                    $('#option-user-approve-forSubmit-' + rowlength).multiselect('dataprovider', data);
                                });

                        }
                    });

                    if ($('.tr-Approver-forSubmit').length === 1) {
                        $('#btnApproverForSubmit').hide();
                        return;
                    }
                });

                function deleteApproverForSubmit(btndelete) {
                    let tr = $($(btndelete).parent().parent());
                    let tbody = $(tr.parent());
                    tr.remove();

                    let listRow = $('#' + $(tbody).attr('id') + ' tr.tr-Approver-forSubmit');
                    let rowlength = listRow.length;

                    for (let i = 0; i < rowlength; i++) {
                        var ListColumns = listRow[i].children;
                        ListColumns[0].children[0].children[0].name = "UserApprove[" + i + "].RoleId";
                        ListColumns[1].children[0].children[0].name = "UserApprove[" + i + "].UserId";

                        ListColumns[0].children[0].children[0].id = "option-role-approve-forSubmit-" + i;
                        ListColumns[1].children[0].children[0].id = "option-user-approve-forSubmit-" + i;
                    }

                    if ($('.tr-Approver-forSubmit').length === 1) {
                        $('#btnApproverForSubmit').hide();
                    }
                    else {
                        $('#btnApproverForSubmit').show();
                    }
                }

                function SelectLocalMRB() {
                    
                    $('#mdFloorNCR').modal({ backdrop: 'static', keyboard: false });
                }
                function submitFloorNCR() {

                    //$('#mdFloorNCR').modal({ backdrop: 'static', keyboard: false });
                    //if (!confirm("Do you really want to submit for FLOOR NCR?")) return;
                    $('#MRB_LOC').val($('#localMRB').val());
                    
                    
                    let DEFECTIVE = parseFloat('@Model.defect');
                    let DETQTY = parseFloat('@ViewBag.DETQTY');
                        if (DEFECTIVE !== DETQTY) {
                            bootbox.alert("QTY of Non-Comformity not equal DEFECTIVE, PLEASE EDIT NCR !!!", function () {
                                //Auto redirect to edit ncr, because of deny submit ncr
                                EditNCR();
                            });
                        }

                    let checkENGINEERING = false;
                    //Check Approver is ENGINEERING
                    $('.tr-Approver-forSubmit').each(function (i, e) {
                        var selectRole = $(e).children().children().children().first();
                        if ($('#' + $(selectRole).attr('id') + ' option:selected').val() != "") {
                            checkENGINEERING = true;
                            return;
                        }
                    });

                    if (checkENGINEERING) {
                        //$('#MRB_LOC').val($('localMRB').val());
                        //$myform.submit();
                        $('#mdsubmitconfirm').modal({ backdrop: 'static', keyboard: false });
                    }
                    else {
                        bootbox.alert('Please select MARLOW MRB AUTHORIZATION !');
                    }


                }
                function submitApprcreate() {

                    let DEFECTIVE = parseFloat('@Model.defect');
                    let DETQTY = parseFloat('@ViewBag.DETQTY');
                        if (DEFECTIVE !== DETQTY) {
                            bootbox.alert("QTY of Non-Comformity not equal DEFECTIVE, PLEASE EDIT NCR !!!", function () {
                                //Auto redirect to edit ncr, because of deny submit ncr
                                EditNCR();
                            });
                        }
                    //}
                    $('#MRB_LOC').val('WH_MRB');
                    $('#Comment').val();
                    //bootbox.dialog({
                    //    title: 'Confirm submit NCR',
                    //    message: 'Do you want to submit NCR ?',
                    //    inputType: 'text',
                    //    buttons: {
                    //        csubmit: {
                    //            label: 'Yes, submit and approve without meeting',
                    //            className: 'btn btn-info',
                    //            callback: function () {
                    //                bootbox.prompt({
                    //                    title: "Leave The Message",
                    //                    inputType: 'textarea',
                    //                    callback: function (result) {
                    //                        if (result === '' | result === undefined) {
                    //                            bootbox.alert('Leave The Message is required');
                    //                            return;
                    //                        }

                    //                        submitNCR(result);
                    //                        console.log(result);
                    //                    }
                    //                });
                    //            }
                    //        },
                    //        confirm: {
                    //            label: 'Yes, submit this NCR',
                    //            className: 'btn-success',
                    //            callback: function () {
                    //                submitNCR(null);
                    //            }
                    //        },
                    //        cancel: {
                    //            label: 'No',
                    //            className: 'btn-danger'
                    //        }
                    //    },
                    //    closeButton: false
                    //});

                    $('#mdsubmitconfirm').modal({ backdrop: 'static', keyboard: false });

                }
                function submitNCR(mess) {
                    //TUANLUA
                    debugger;
                   
                   
                    if (IsMegerNCR === true) {

                        //Deny Meger NCR
                        //bootbox.alert("Exist NCRs same part and lot, click OK to be merge NCR");

                        bootbox.alert("Exist NCRs same part and lot, click OK to be merge NCR", function () {
                            $.blockUI();
                            $.post('@Url.Action("MegerNCR", "NCRApproval", new { NCRNUM = Model.NCR_NUM })',

                                function (data) {
                                    if (data.success) {
                                        bootbox.alert(data.message, function () {
                                            EditNCR();
                                        });

                                    } else {
                                        bootbox.alert(data.message);
                                    }
                                }).fail(function () {
                                    bootbox.alert('Please contact to Administrator!');
                                }).always(function () {
                                    $.unblockUI();
                                });

                            return;
                        });
                    }
                    else {
                        $('#Comment').val(mess);
                        ncrnumber = $("#NCR_NUM").val();
                        let checkENGINEERING = false;
                       // let checkCHAIRMAN = false;
                        //Check Approver is ENGINEERING
                        $('.tr-Approver-forSubmit').each(function (i, e) {
                            var selectRole = $(e).children().children().children().first();
                            if ($('#' + $(selectRole).attr('id') + ' option:selected').val() != "") {
                                checkENGINEERING = true;
                                return;
                            }
                            //else if ($('#' + $(selectRole).attr('id') + ' option:selected').val() === CHAIRMANRoleId) {
                            //    checkCHAIRMAN = true;
                            //    return;
                            //}
                        });

                        if (checkENGINEERING) {//(checkENGINEERING && checkCHAIRMAN)
                        //    console.log('checkENGINEERING: ' + checkENGINEERING);
                            //console.log('checkCHAIRMAN: ' + checkCHAIRMAN);
                            if (allowSCRAP) {
                                bootbox.confirm({
                                    message: "NC value less than " + SCRAPMONEY + "$, allow SCRAP at production cost. Do you want to SCRAP it at Production line?",
                                    buttons: {
                                        confirm: {
                                            label: 'Yes',
                                            className: 'btn-success'
                                        },
                                        cancel: {
                                            label: 'No',
                                            className: 'btn-danger'
                                        }
                                    },
                                    callback: function (result) {
                                        if (result) {
                                            SubmitScrap(mess);
                                        }
                                        else {
                                            $('#Comment').val(mess);
                                            $myform.submit();
                                        }
                                    }
                                });
                            }
                            else $myform.submit();
                        } else {
                            bootbox.alert('Please select MARLOW MRB AUTHORIZATION !');
                        }
                    }
                }
            </script>
        }
        <div id="author" style="display: none">
            <div class="col-md-12">
                <!--_loadauthorization-->
                @Html.Partial("_loadauthorization", Model)
            </div>
        </div>
        @*Tuong - Dev - Appr*@
        <div id="modalForAppr">
            @*All file upload*@
            <div id="modelAll" class="modal fade" role="dialog" disposition-role="">
                <div class="modal-dialog">
                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">
                            <h3 class="modal-title" style="font-weight: bold"></h3>
                        </div>
                        <div class="modal-body">
                            @{
                                int rework_count1 = 0;
                            }

                            @foreach (var item in Model.NCRDETs)
                            {
                                <div style="display:none" class="div-non-confirmity-all" id="non-confirmity-all-@rework_count1">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <span id="txt-all-btnupload-text-@rework_count1">Attach “Rework Instruction” </span>
                                        </div>
                                        <div class="col-md-6">
                                            <button type="button" onclick="$('#non-confirmity-file-@rework_count1').trigger('click')" class="btn btn-success pull-right">Browser</button>
                                        </div>
                                    </div>

                                </div>
                                rework_count1++;
                            }
                        </div>
                        <div class="modal-footer">
                            <button type="button" id="btn-all-form-Cancel" class="btn btn-default">Close</button>
                            <button type="button" id="btn-all-form-OK" class="btn btn-primary" ncr-det="">Upload</button>
                        </div>
                    </div>

                </div>
            </div>
            @* Modal Rework *@
            <div id="modelRework" class="modal fade" role="dialog" disposition-role="">
                <div class="modal-dialog">
                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">
                            <h3 class="modal-title" style="font-weight: bold"></h3>
                        </div>
                        <div class="modal-body">
                            @{
                                int rework_count = 0;
                            }

                            @foreach (var item in Model.NCRDETs)
                            {
                                <div style="display:none" id="non-confirmity-rework-@rework_count">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <span id="txt-rework-btnupload-text-@rework_count">Attach “Rework Instruction” </span>
                                        </div>
                                        <div class="col-md-6">
                                            <button type="button" onclick="$('#non-confirmity-file-@rework_count').trigger('click')" class="btn btn-success pull-right">Browser</button>
                                        </div>
                                    </div>
                                    <div class="row" id="reworkcost-@rework_count">
                                        <div class="col-md-12">
                                            Estimated Cost is optional
                                        </div>
                                        <div class="col-md-12">
                                            <input class="form-control" onchange="$('#non-confirmity-message-@rework_count').val($(this).val())" />
                                        </div>
                                    </div>
                                </div>
                                rework_count++;
                            }
                        </div>
                        <div class="modal-footer">
                            <button type="button" id="btn-rework-form-Cancel" class="btn btn-default">Close</button>
                            <button type="button" id="btn-rework-form-OK" class="btn btn-primary" ncr-det="">Upload</button>
                        </div>
                    </div>

                </div>
            </div>

            @*Modal Scrap*@
            <div id="modelScrap" class="modal fade" role="dialog">
                <div class="modal-dialog">

                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">
                            <h3 class="modal-title" style="font-weight: bold">SCRAP</h3>
                        </div>
                        <div class="modal-body">
                            <div class="row" id="non-confirmity-scrap">
                                <div class="col-md-6">
                                    File Upload
                                </div>
                                <div class="col-md-6">
                                    <button type="button" id="btn-scrap-upload-file" onclick="fnScrapUploadfile(this)" class="btn btn-success pull-right">Browser</button>
                                </div>
                                <div class="col-md-12">
                                    REASON
                                </div>
                                <div class="col-md-12">
                                    @*<textarea class="form-control" id="area-non-confirmity-scrap" rows="20" style="resize: vertical; overflow-y:auto"></textarea>*@
                                    @Html.DropDownList("area-non-confirmity-scrap", (SelectList)ViewBag.SCRAPCategory, "Please select", new { id = "area-non-confirmity-scrap", @class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" ncr-det="" id="btn-non-confirmity-scrap-Canel">Close</button>
                            <button type="button" class="btn btn-primary" ncr-det="" id="btn-non-confirmity-scrap-OK">Upload</button>
                        </div>
                    </div>

                </div>
            </div>

            @*get pass word*@
            <div id="modelpassword" class="modal fade" data-backdrop="static" data-keyboard="false" role="dialog">
                <div class="modal-dialog">
                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">
                            @*<button type="button" class="close" data-dismiss="modal">&times;</button>*@
                            <h3 class="modal-title" style="font-weight: bold"></h3>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <div class="col-md-4">
                                    Password
                                </div>
                                <div class="col-md-8">
                                    <input type="password" id="pass" autocomplete="false" required="required" />
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" id="btn-ok-pass" class="btn btn-success btn-sm" onclick="getpass(this)">OK</button>
                            <button type="button" class="btn btn-danger btn-sm ms-uncheck" data-dismiss="modal">Close</button>
                        </div>
                    </div>

                </div>
            </div>

            @* Modal ADDINS *@
            <div id="modelOrAddins" class="modal fade" role="dialog" addins-item="">
                <div class="modal-dialog">
                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">
                            <h3 class="modal-title" style="font-weight: bold"></h3>
                        </div>
                        <div class="modal-body">

                            <div id="model-or-addins">
                                <div class="row">
                                    <div class="col-md-6">
                                        <span id="txt-btnupload-or-text">Attach File” </span>
                                    </div>
                                    <div class="col-md-6">
                                        <button type="button" onclick="$('#addins-file-' + $('#modelOrAddins').attr('addins-item')).trigger('click')" class="btn btn-success pull-right">Browser</button>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12" id="div-or-addins-message">
                                        Leave message
                                    </div>
                                    <div class="col-md-12">
                                        <input id="input-or-addins-text" class="form-control" onchange="$('#addins-message-'+ $('#modelOrAddins').attr('addins-item')).val($(this).val())" />
                                        @Html.DropDownList("area-or-addins-scrap", (SelectList)ViewBag.SCRAPCategory, "Please select", new { id = "area-or-addins-scrap", @class = "form-control", @style = "display:none" })
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="modal-footer">
                            <button type="button" id="btn-modelOrAddins-form-Cancel" class="btn btn-default">Close</button>
                            <button type="button" id="btn-modelOrAddins-form-OK" class="btn btn-primary">Upload</button>
                        </div>
                    </div>

                </div>
            </div>
            <!--Tuan Lua ADD khi dispo100% la DICRIBE-->
            <div id="model100Addins" class="modal fade" role="dialog" addins-item="">
                <div class="modal-dialog">
                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">
                            <h3 class="modal-title" style="font-weight: bold"></h3>
                        </div>
                        <div class="modal-body">

                            <div id="model-100-addins">
                                <div class="row">
                                    <div class="col-md-6">
                                        <span id="txt-btnupload-100-text">Attach File” </span>
                                    </div>
                                    <div class="col-md-6">
                                        <button type="button" onclick="$('#addin-file-' + $('#model100Addins').attr('addins-item')+'-'+$('#model100Addins').attr('addins-item-index')).trigger('click')" class="btn btn-success pull-right">Browser</button>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12" id="div-100-addins-message">
                                        Leave message
                                    </div>
                                    <div class="col-md-12">
                                        <input id="input-100-addins-text" class="form-control" onchange="$('#addin-message-'+ $('#model100Addins').attr('addins-item')+'-'+$('#model100Addins').attr('addins-item-index')).val($(this).val())" />
                                        @Html.DropDownList("area-100-addins-scrap", (SelectList)ViewBag.SCRAPCategory, "Please select", new { id = "area-100-addins-scrap", @class = "form-control", @style = "display:none" })
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="modal-footer">
                            <button type="button" id="btn-model100Addins-form-Cancel" class="btn btn-default">Close</button>
                            <button type="button" id="btn-model100Addins-form-OK" class="btn btn-primary">Upload</button>
                        </div>
                    </div>

                </div>
            </div>
            <div>
                @*@if (Model.STATUS.Trim() == StatusInDB.WaitingForDispositionApproval)
                    {
                    <div class="col-md-12">
                        CORRECTIVE ACTION <span style="color:red">* </span>: &nbsp;
                        <input type="radio" disabled="disabled" class="checkbox-inline" @Model.Notrequered /> NOT REQUIRED
                        <input type="radio" disabled="disabled" class="checkbox-inline" @Model.requered />  REQUIRED
                        <input type="radio" disabled="disabled" class="checkbox-inline" @Model.notification /> NOTIFCATION
                        <br />
                    </div>
                    }*@
            </div>
            <div id="show-data-watting" style="display: none">
                <div class="col-md-12">
                    CORRECTIVE ACTION <span style="color:red">* </span>: &nbsp;
                    <input type="radio" disabled="disabled" class="checkbox-inline" @Model.Notrequered /> NOT REQUIRED
                    <input type="radio" disabled="disabled" class="checkbox-inline" @Model.requered />  REQUIRED
                    <input type="radio" disabled="disabled" class="checkbox-inline" @Model.notification /> NOTIFCATION
                    <br />
                </div>
                <div class="col-md-12">
                    <label class="">FOLLOW UP NOTES:</label>
                    @if (ViewBag.TaskList != null)
                    {
                        var TaskList = (TASKLIST)ViewBag.TaskList;
                        <div class="row">
                            <div class="col-xs-18 col-md-12">
                                @(Html.Kendo().Grid<II_VI_Incorporated_SCM.Models.TaskManagement.TaskManagementNCRViewModel>()
                                                                                                                                                                                                                                    .Name("gridTaskDetail")
                                                                                                                                                                                                                                    .Columns(columns =>
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                        columns.Bound(p => p.TaskDetail.TaskID).Hidden();
                                                                                                                                                                                                                                        columns.Bound(p => p.TaskDetail.TASKNAME).Title("Task").HtmlAttributes(new { @class = "ClickGrid" });
                                                                                                                                                                                                                                        columns.Bound(p => p.TaskDetail.OWNER).Title("Owner").Hidden();
                                                                                                                                                                                                                                        columns.Bound(p => p.AssigneeName).Title("Assignee").HtmlAttributes(new { @class = "ClickGrid" });
                                                                                                                                                                                                                                        columns.Bound(p => p.TaskDetail.EstimateEndDate).Title("Due Date").HtmlAttributes(new { @class = "ClickGrid" }).ClientTemplate("#= TaskDetail.EstimateEndDate ? kendo.toString(kendo.parseDate(TaskDetail.EstimateEndDate), 'dd/MMM/yy') : '' #");
                                                                                                                                                                                                                                        columns.Bound(p => p.TaskDetail.STATUS).Title("Status").HtmlAttributes(new { @class = "ClickGrid" });
                                                                                                                                                                                                                                        columns.Bound(p => p.TaskDetail.PRIORITY).Title("Priority").HtmlAttributes(new { @class = "ClickGrid" });
                                                                                                                                                                                                                                    })
                                                                                                                                                                                                                                    .Pageable()
                                                                                                                                                                                                                                    .Sortable()
                                                                                                                                                                                                                                    .Scrollable()
                                                                                                                                                                                                                                    .Filterable()
                                                                                                                                                                                                                                    .HtmlAttributes(new { style = "height:200px; border: 1px solid black;" })
                                                                                                                                                                                                                                    .DataSource(dataSource => dataSource
                                                                                                                                                                                                                                        .Ajax()
                                                                                                                                                                                                                                        .PageSize(10)
                                                                                                                                                                                                                                        .Read(read => read.Action("ReadTaksMantNCR", "TaskManagement", new { taskID = TaskList.TopicID, type = "NCR" }))
                                                                                                                                                                                                                                        .Sort(sort => sort.Add("TaskDetail.EstimateStartDate").Ascending())
                                                                                                                                                                                                                                    ))
                            </div>
                        </div>
                    }
                </div>
                <div class="col-md-12">
                    <label class="">Changed items</label>
                    <div class="row">
                        <div class="col-xs-18 col-md-12">
                            @(Html.Kendo().Grid<ChangeItemViewmodel>()
                                                                                 .Name("gridChangeitemNCR")
                                                                                 .Columns(columns =>
                                                                                 {
                                                                                     columns.Bound(p => p.REF_NUM).Title("History").HtmlAttributes(new { @class = "history" }).Width(120);
                                                                                     columns.Bound(p => p.CRNo).Title("CR NO").HtmlAttributes(new { @class = "CRNo" }).Width(150);
                                                                                             //  columns.Bound(p => p.REF_NUM).Title("Ref Number").HtmlAttributes(new { @class = "Refnum" }).Width(120);
                                                                                             columns.Bound(p => p.Brief).Title("Brief Description of the change").Width(300);
                                                                                     columns.Bound(p => p.Submitername).Title("User Submit").Width(150);
                                                                                     columns.Bound(p => p.Priority).Title("Priority").Width(100);
                                                                                     columns.Bound(p => p.CRStatus).Title("Status").Width(100);
                                                                                     columns.Bound(p => p.DateSubmitted).Title("Date Submitted").Format("{0:dd-MMM-yy}").Width(150);
                                                                                     columns.Bound(p => p.DateRequired).Title("Date Required").Format("{0:dd-MMM-yy}").Width(150);
                                                                                 })
                                                                                 .Sortable()
                                                                                 .Scrollable()
                                                                                 .Filterable()
                                                                                 //     .Pageable(m => m.PageSizes(new List<object> { 5, 10, 20, 50, "All" }).Refresh(true))
                                                                                 .HtmlAttributes(new { style = "height:180px;" })
                                                                                 .DataSource(dataSource => dataSource
                                                                                     .Ajax()
                                                                                     .PageSize(10)
                                                                                     .Read(read => read.Action("NCRChangeItemByNCR", "ChangeItem", new { NCRNUM = Model.NCR_NUM }))
                                                                                  .Sort(sort => sort.Add("DateSubmitted").Descending())

                                                                                 ))
                        </div>
                    </div>
                </div>

                <div class="col-md-12" style="margin-top:10px">
                    ISSUED CA REQUEST NO: @Html.Raw(Model.ISSUED_REQUEST_NO)  DATE: @(Model.ISSUED_REQUEST_DATE.HasValue ? Model.ISSUED_REQUEST_DATE.Value.ToShortDateString() : "")
                </div>
                <div class="col-md-12">
                    ACCTG, USE ONLY
                    <br />
                    REMOVED FROM :@Model.REMOVED_FROM
                    <br /> BOOK INV : @Model.BOOK_INV
                </div>
            </div>
            <div class="row" id="modelDisposition" style="display: none">
                <!--_DepositionPartial-->
                @Html.Partial("_DepositionPartial", Model)
            </div>
        </div>

        <div class="show_footer" style="display: none">
            <div class="row">
                <div class="col-md-4">
                    <b>SHIPPING METHOD</b>
                </div>
                <div class="col-md-8">
                    <input name="SHIPPING_METHOD" class="form-control" id="txt_shipping" />
                </div>
            </div>
            <br>
            <div class="row">
                <div class="col-md-4">
                    <b>RETURN MATERIAL AUTHORIZATION NUMBER</b>
                </div>
                <div class="col-md-8">
                    <input class="form-control" name="RETURN_NUMBER" id="txt_material" />
                </div>
            </div>
        </div>

        @* Modal Reject *@
        <div id="model-approval-reject" class="modal fade" role="dialog" disposition-role="">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h3 class="modal-title" style="font-weight: bold">Reject NCR</h3>
                    </div>
                    <div class="modal-body">
                        <div>
                            <div class="row">
                                <div class="col-md-12">
                                    <label>Please provide a reason for reject </label> <span style="color:red"> * </span>
                                </div>
                                <div class="col-md-12">
                                    <textarea class="form-control" id="txt-model-approval-reject" rows="10"></textarea>
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" data-dismiss="modal" class="btn btn-default">Cancel</button>
                        <button type="button" class="btn btn-primary" onclick="SubmitReject()">OK</button>
                    </div>
                </div>

            </div>
        </div>

        <div id="model-approval-rejectEng" class="modal fade" role="dialog" disposition-role="">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h3 class="modal-title" style="font-weight: bold">Reject NCR</h3>
                    </div>
                    <div class="modal-body">
                        <div>
                            <div class="row">
                                <div class="col-md-12">
                                    <label>Please provide a reason for reject </label> <span style="color:red"> * </span>
                                </div>
                                <div class="col-md-12">
                                    <textarea class="form-control" id="txt-model-approval-rejectEng" rows="10"></textarea>
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" data-dismiss="modal" class="btn btn-default">Cancel</button>
                        <button type="button" class="btn btn-primary" onclick="SubmitRejectEng()">OK</button>
                    </div>
                </div>

            </div>
        </div>

        @* Modal RejectWH *@
        <div id="model-approval-rejectWH" class="modal fade" role="dialog" disposition-role="">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h3 class="modal-title" style="font-weight: bold">Reject NCR</h3>
                    </div>
                    <div class="modal-body">
                        <div>
                            <div class="row">
                                <div class="col-md-12">
                                    <label>Please provide a reason for reject </label> <span style="color:red"> * </span>
                                </div>
                                <div class="col-md-12">
                                    <textarea class="form-control" id="txt-model-approval-rejectWH" rows="10"></textarea>
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" data-dismiss="modal" class="btn btn-default">Cancel</button>
                        <button type="button" class="btn btn-primary" onclick="SubmitRejectWH()">OK</button>
                    </div>
                </div>

            </div>
        </div>

        @* Modal Re Assign *@
        <div id="model-approval-reassign" class="modal fade" role="dialog" disposition-role="">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h3 class="modal-title" style="font-weight: bold">Assign to someone else</h3>
                    </div>
                    <div class="modal-body">
                        <div>
                            <div class="row">
                                <div class="col-md-6">
                                    <label>New Signer's name </label><span style="color:red"> * </span>
                                </div>
                                <div class="col-md-6">
                                    <select id="sl-model-approval-reassign"></select>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <label>Please provide a reason for reassign </label>
                                </div>
                                <div class="col-md-12">
                                    <textarea class="form-control" id="txt-model-approval-reassign" rows="10"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" data-dismiss="modal" class="btn btn-default">Cancel</button>
                        <button type="button" class="btn btn-primary" onclick="SubmitAssign()">Assign to someone else</button>
                    </div>
                </div>

            </div>
        </div>
        //Engineer
        <div id="model-approval-reassignEng" class="modal fade" role="dialog" disposition-role="">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h3 class="modal-title" style="font-weight: bold">Assign to someone else</h3>
                    </div>
                    <div class="modal-body">
                        <div>
                            <div class="row">
                                <div class="col-md-6">
                                    <label>Select Role </label><span style="color:red"> * </span>
                                </div>
                                <div class="col-md-6">
                                    @if (Model.STATUS.Trim() == StatusInDB.WaitingForDisposition)
                                    {
                                        var listUser = (List<UserDispositionModelView>
                                        )ViewBag.ListUser;
                                        foreach (var approver in Model.ListUSerAppr)
                                        {
                                            var UserOfRole = listUser.Where(x => x.RoleId == approver.RoleId).ToList();
                                            @Html.DropDownListFor(n => n.ListUSerAppr.FirstOrDefault(x => x.RoleId == approver.RoleId).RoleId, new SelectList(ViewBag.ListRole2, "Value", "Text", approver.RoleId), "Select Role",
                                                                           new
                                                                           {
                                                                               id = "role-new",
                                                                           })
                                        }
                                    }
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <div class="col-md-6">
                                    <label>Select User </label><span style="color:red"> * </span>
                                </div>
                                <div class="col-md-6">
                                    <select id="sl-model-approval-reassignEng"></select>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <label>Please provide a reason for reassign </label>
                                </div>
                                <div class="col-md-12">
                                    <textarea class="form-control" id="txt-model-approval-reassignEng" rows="10"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" data-dismiss="modal" class="btn btn-default">Cancel</button>
                        <button type="button" class="btn btn-primary" onclick="SubmitAssignEng()">Assign to someone else</button>
                    </div>
                </div>

            </div>
        </div>

    }<!--END FORM-->
    @*<div id="printf" hidden>
            @Html.Action("PrintNCR","NCRApproval")
        </div>*@

</div>
<table class="table table-striped table-bordered table-hover table-checkable order-column" id="tbMRBAuthorizationTemplate" style="display:none">
    <thead>
        <tr>
            <th>Role name</th>
            <th>User name</th>
            <th></th>
        </tr>
    </thead>
    <tbody id="tbodyApprovarTemplate">
        <tr id="tr-ApproverTemplate">
            <td>@Html.DropDownList("ListRoleTemplate", (SelectList)ViewBag.ListRole, "Select Role", new { id = "ListRoleTemplate" })</td>
            <td><select id="ListUserTemplate"></select></td>
            <td><button onclick="deleteApprover(this)" type="button" class="btn btn-danger pull-right">Delete</button></td>
        </tr>
    </tbody>
</table>

@if ((bool)ViewBag.ShowBtnChangeSubmitItem)
{
    <div id="popup" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="basicModal" aria-hidden="true">
        <div class="modal-dialog" style="width:950px;">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Submit Change Item</h4>
                </div>
                <div class="modal-body">
                    @Html.Partial("~/Views/ChangeItem/_formchangesubmititem.cshtml", new ChangeItemViewmodel(ViewBag.FullName))
                </div>
            </div>
        </div>
    </div>
}
@*Print*@
<div id="modelPrint" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h3 class="modal-title" style="font-weight: bold">Select file print</h3>
            </div>

            <div class="modal-body">
                <div class="">
                    <form action="@Url.Action("PrintNCR")" name="frm-Print" id="frm-Print" method="get" target="_blank">
                        <input type="hidden" name="NCR_NUM" value="@Model.NCR_NUM.Trim()" />
                        <table class="table table-striped table-bordered table-hover table-checkable order-column">
                            <thead>
                                <tr>
                                    <th width="80%">File Name</th>
                                    <th width="20%"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.OldEvidence.Count; i++)
                                {
                                    var evi = Model.OldEvidence[i];
                                    string path = ViewBag.RootPath.ToString() + evi.EVI_PATH;
                                    <tr>
                                        <td width="80%;" style="text-align: left !important;">
                                            &nbsp;&nbsp;&nbsp;&nbsp;
                                            <a target="_blank" href="@path"><i class="fa fa-file-pdf-o"> &nbsp; @evi.EVI_PATH.Split('/')[1] </i></a>
                                            <input type="hidden" name="OldEvidence[@i].EVI_ID" value="@evi.EVI_ID" />
                                        </td>
                                        <td><input type="checkbox" name="OldEvidence[@i].IsPrint" class="form-control" value="false" onchange="if ($(this).val() === 'true') $(this).val('false'); else $(this).val('true')" /></td>
                                    </tr>
                                }
                                <tr>
                                    <td width="80%;" style="text-align: left !important;">
                                        &nbsp;&nbsp;&nbsp;&nbsp;
                                        <a target="_blank" href="@ViewBag.ViewVNMaterialTraceability"><i class="fa fa-file-pdf-o"> &nbsp; VN Material Traceability  </i></a>
                                        <input type="hidden" name="OldVNMaterialTraceabilityID" value="@Model.OldVNMaterialTraceability.Trim()" />
                                    </td>
                                    <td><input type="checkbox" name="OldVNMaterialTraceabilityIDIsPrint" value="false" class="form-control" onchange="if ($(this).val() === 'true') $(this).val('false'); else $(this).val('true')" /></td>
                                </tr>
                            </tbody>
                        </table>
                    </form>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="$('#frm-Print').submit()">Print</button>
            </div>
        </div>

    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script>
    var homeUrl = '@Url.Action("Index", "NCR")';
    var Url = '@Url.Action("GetdropdownDefect", "WriteNcrForProcess")';
    var UrlChange = '@Url.Action("GetdropdownDeCript", "WriteNcrForProcess")';
    var UrlChangeIQC = '@Url.Action("GetdropdownDeCript", "WriteNcrForIqc")';
    var UrlChangeIQCByList = '@Url.Action("GetDropdownlistIQC", "WriteNcrForIqc")';
    var dem = 0;
    var IdUser = '@User.Identity.GetUserId()';
    var Name = '@User.Identity.GetUserName()';
    var final = false;
    var SubmitConfirm = '@ViewBag.SubmitConfirm' === 'True';
    var ENGINEERINGRoleId = '@ViewBag.ENGINEERINGRoleId';
    var MRBRoleId = '@ViewBag.MRBRoleId';
    var allowSCRAP = '@ViewBag.allowSCRAP' === 'True';
    var SCRAPMONEY = parseFloat('@ViewBag.SCRAPMONEY');
    var NCRDETCount = parseFloat('@Model.NCRDETs.Count');
    var IsAQL = '@Model.SAMPLE_INSP' === 'True';
    var CHAIRMANRoleId = '@ViewBag.CHAIRMANRoleId';
    //TUan Lua
    var IsMegerNCR = false;
   @*var IsMegerNCR = '@ViewBag.IsMegerNCR' === 'True;*@
</script>
@section scripts {
    <script type="text/javascript">

        var $myform = $('#Create');
        var defectData = null;
        var UrlChange = '@Url.Action("GetdropdownDeCript", "WriteNcrForProcess")';
        // global rowId of Conformity
        var ROWID = 1;
        var GLOBAL_QTY = 0;
        var qty = 0;

        function EditNCR() {
            let NCR_NUM = $("#NCR_NUM").val();
            let type = $("#dataForLstDefect").val();
            if (!$('#inprocess').is(":checked")) {

                window.location = '@Url.Action("EditNCRForIQC", "NCRApproval")' + "?NCR_NUM=" + NCR_NUM;
            } else {
                window.location = '@Url.Action("EditNCRForProcess", "WriteNcrForProcess")' + "?ncrnum=" + NCR_NUM;
            }
    }
    //$('#showprintf').on('click', function (e) {
    //    e.preventDefault();
    //    $('#modelPrint').show();
    //})

        $(document).ready(function () {
            $('#role-new').multiselect({ dropUp: true, enableFiltering: true, enableCaseInsensitiveFiltering: true, buttonWidth: '100%'});
                $('#attackmentfiledispo').removeAttr('style', 'display:none');
        $.post('@Url.Action("CreateNCREvident", "NCRApproval", new { NCR_NUM = Model.NCR_NUM})');

            $('#click').click(function (e) {
                e.preventDefault();
                $('#popup').modal('show');
            });
            //Check User Disposition is ENGINEERING: blockUI
            $('#append-data-approver tr').each(function (i, e) {
                let role = $(e).children().first().children().children().first().val();
               // if (role === ENGINEERINGRoleId) {
                    let btndeleteOfRole = $(e).children().first().next().next().children();
                    let selectrole = $(e).children().first().children().children().first().attr('id');
                    let selectuid = $(e).children().first().next().children().children().first().attr('id');
                    $('#' + selectrole).multiselect('disable');
                    $('#' + selectuid).multiselect('disable');
                    //$(btndeleteOfRole).attr('disabled', true);
            //    };

                if (role === CHAIRMANRoleId) {
                    let btndeleteOfRole = $(e).children().first().next().next().children();
                    let selectrole = $(e).children().first().children().children().first().attr('id');
                    let selectuid = $(e).children().first().next().children().children().first().attr('id');
                    $('#' + selectrole).multiselect('disable');
                    $('#' + selectuid).multiselect('disable');
                    //$(btndeleteOfRole).attr('disabled', true);
                }
            });


            var receiver = $("#dataForLstDefect").val();
            $.blockUI();

            $.post('@Url.Action("GetdropdownDefect", "WriteNcrForProcess")',
                { receiver: receiver },
                function(result) {
                    defectData = result;
                    var count = 1;
                    $(".dd_defect").each(function(item) {
                        $("#dd_defect_" + count).multiselect({ dropUp: true, enableFiltering: true, enableCaseInsensitiveFiltering: true, buttonWidth: '100%' });
                        $("#dd_defect_" + count).multiselect('dataprovider', result);
                        //   $('.multiselect').addClass('disabled');
                        count++;
                    });
                }).fail(function() {
                    bootbox.alert('Please contact to Administrator!');
                }).always(function() {
                    $.unblockUI();
                });
            $.blockUI();

            $.post('@Url.Action("GetListDefect", "NCRApproval")',
                { receiver: receiver },
                function(data) {
                    createListDescript(data.result);
                }).fail(function() {
                    bootbox.alert('Please contact to Administrator!');
                }).always(function() {
                    $.unblockUI();
                });

            $(".dd_defect").on('change',
                function() {
                    var tmp = $(this).attr('rev');
                    var listcheck = $("#dd_defect_" + tmp).val();
                    $.blockUI();

                    $.post('@Url.Action("GetdropdownDeCript", "WriteNcrForProcess")',
                        { id: listcheck },
                        function(result) {
                            $('#dd_descript_' + tmp).multiselect('dataprovider', result);

                        }).fail(function() {
                            bootbox.alert('Please contact to Administrator!');
                        }).always(function() {
                            $.unblockUI();
                        });
                });
            //catch status submit view confirm
            var STT = ('@Model.STATUS');
            if (STT.trim() === "a") {
                $('#modelSubmit').css('display', 'inherit');
            } else {
                $('#author').css('display', 'inherit');
            }

            //catch status view watting
            var wh = '@Model.STATUS';
            if (wh === "wh") {
                //$('#btn-dispo').css('display', 'unset');
                $('#btn-edit').css('display', 'none');
                $('#submit').css('display', 'none');
                $('#void').css('display', 'none');
            }

            if (SubmitConfirm) {
                $('#div-Approver').css('border', '2px blue solid');
                $(window).load(function () {
                    $("html, body").animate({ scrollTop: $(document).height() }, 1000);
                });
            }

        });

        function createListDescript(lstDefect) {
            $.each(lstDefect,
                function(i) {
                    $.blockUI();
                    $.post('@Url.Action("GetDropdownlistIQC", "WriteNcrForIqc")',
                        { id: lstDefect[i].Non_Conformances },
                        function(result) {
                            defectData = result;
                            $("#dd_descript_" + (i + 1)).multiselect({ dropUp: true, enableFiltering: true, enableCaseInsensitiveFiltering: true, buttonWidth: '100%' });
                            $("#dd_descript_" + (i + 1)).multiselect('dataprovider', result);
                            //   $('.multiselect').addClass('disabled');
                        }).fail(function() {
                            bootbox.alert('Please contact to Administrator!');
                        }).always(function() {
                            $.unblockUI();
                        });
                });
        }

        $('#btn-save').click(function() {
            $myform.submit();
        });
        $('#bt-close').click(function() {
            window.location = '@Url.Action("Index", "NCR")';
        });

        $myform.submit(function (e) {
            e.preventDefault();
            debugger;
            let submitrole = $('#submitRole').val();
            console.log(submitrole);
            if (submitrole === '@StatusInDB.Created') {
                $.blockUI();
                var data = new FormData(this);
                //var $fromObj = $(this);
                var urlAction = '@Url.Action("SubmitNCR", "NCRApproval")';
                //Thi.Nguyen: 3-Oct-2020 Submit for Floor NCR
               
                if (!$('#MRB_LOC').val().includes("WH"))
                    urlAction = '@Url.Action("SubmitFloorNCR", "NCRApproval")';
                $.ajax({
                    url: urlAction,
                    type: 'POST',
                    dataType: "Json",
                    contentType: false,
                    cache: false,
                    processData: false,
                    data: data,
                    fail: function () {
                        bootbox.alert('Please contact to Administrator!');
                    }
                }).always(function () {
                    $.unblockUI();
                }).success(function (result) {
                    if (result.success) {
                        bootbox.alert('Submit NCR Successful', function () {
                            //window.location.reload();
                            window.location.href = '@Url.Action("ViewApproval", "NCRApproval", new { NCR_NUM = Model.NCR_NUM})';
                        });
                    }
                    else {
                        bootbox.alert(result.message);
                    }
                });
            }
            else if (submitrole === '@StatusInDB.Submitted') {
                $.blockUI();
                var datas = new FormData(this);
                //var $fromObj = $(this);
                var urlAction = '@Url.Action("SubmitConfirmNCR", "NCRApproval")';
                $.ajax({
                    url: urlAction,
                    type: 'POST',
                    dataType: "Json",
                    contentType: false,
                    cache: false,
                    processData: false,
                    data: datas,
                    fail: function () {
                        bootbox.alert('Please contact to Administrator!');
                    }
                }).always(function () {
                    $.unblockUI();
                }).success(function (result) {
                    if (result) {
                        bootbox.alert('Confirm NCR Successful', function () {
                            window.location.reload();
                        });
                    }
                    else {
                        bootbox.alert(message);
                    }
                });
            }
            else if (submitrole === '@StatusInDB.WaitingForDisposition') {

                let IsApprover = false;
                $('#append-data-approver tr').each(function (i, e) {
                    console.log($(e).children().first().children().first().children().first().val());
                    if ($(e).children().first().children().first().children().first().val() === IdUser) {
                        IsApprover = true;
                        return;
                    }
                });

                $.blockUI();

                $('.tr-NCRDIS-unactive').each(function (i, e) {
                    let newtr = $(e);
                    let item = $(newtr).children().first().children();
                    let qty = $(newtr).children().first().next().children();
                    let select = $(newtr).children().first().next().next().children();
                    //let insp = $(newtr).children().first().next().next().next().next().children();
                    let insp = $(newtr).children().first().next().next().next().next().children().children();


                    $(item).attr('disabled', false);
                    $(qty).attr('disabled', false);
                    $(select).attr('disabled', false);
                    $($(newtr).children().first().next().next().next().children()).attr('disabled', false);
                    //$(insp).attr('disabled', false);
                    $('#' + insp[0].id).multiselect('enable');

                });

                var datac = new FormData(this);
                //var $fromObj = $(this);
                var urlAction = '@Url.Action("SubmitDispositionNCR", "NCRApproval")';
                $.ajax({
                    url: urlAction,
                    type: 'POST',
                    dataType: "Json",
                    contentType: false,
                    cache: false,
                    processData: false,
                    data: datac,
                    fail: function () {
                        bootbox.alert('Please contact to Administrator!');
                    }
                }).always(function () {
                    $.unblockUI();
                }).success(function (result) {
                    if (result) {
                        if (IsApprover === true) {
                            bootbox.confirm("Do you want to approve ?", function (conf) {
                                if (conf === true) {
                                    bootbox.alert('Disposition NCR Successful', function () {
                                        window.location.href = '@Url.Action("ViewApproval", "NCRApproval", new { NCR_NUM = Model.NCR_NUM})&Pre=true';
                                    });
                                }
                                else {
                                    bootbox.alert('Disposition NCR Successful', function () {
                                        window.location.reload();
                                    });
                                }
                            });
                        }
                        else {
                            bootbox.alert('Disposition NCR Successful', function () {
                                window.location.reload();
                            });
                        }
                    }
                    else {
                        bootbox.alert(message);
                    }
                });
            }
        });

        function SubmitScrap(mess) {
            $.blockUI();
            //Thi.Nguyen-21-jan-20: Auto send email for Hang
            var WHMRBid = 'b156d82f-5517-4b06-8eaf-a1fb47e63e87';
            $.get('@Url.Action("SubmitSCRAP", "NCRApproval", new { NCR_NUM = Model.NCR_NUM })&Comment=' + mess + '&WHMRBid=' + WHMRBid,

                function(data) {
                    if (data.success) {
                        bootbox.alert("Submit allow SCRAP Successful");
                        window.location = '@Url.Action("Index", "NCR")';
                    } else {
                        bootbox.alert(data.message);
                    }
                }).fail(function() {
                    bootbox.alert('Please contact to Administrator!');
                }).always(function() {
                    $.unblockUI();
                });
        }

        function setDisbaleRequired() {
            @*let chk = false;
            $(".NCRDETs_response").each(function (i, e) {
                if ($(e).val() === '@CONFIRMITY_RESPON.ID_VENDOR') {
                    chk = true;
                }
            });
            if (chk) {
                $("#chkb_required").prop('disabled', false);
            } else {
                $("#chkb_required").prop('disabled', true);
                $("#chkb_required").attr('checked', false);
            }*@
        }

        function removeTableAdditions() {
            let count = 1;
            $.each($(".data-confirmity"),
                function(k, v) {
                    if ($("#dd_respon_" + count).val() !== '@CONFIRMITY_RESPON.ID_DESCRIBE' &&
                        $("#dd_disp_" + count).val() !== '@CONFIRMITY_DISPN.ID_DESCRIBE') {
                        $.each($("tr#ins_row_" + count),
                            function(k, v) {
                                $(this).remove();
                            });
                    }
                    count++;
                });
        }

        function removeTableRemains() {
            let count = 1;
            $.each($(".data-confirmity"),
                function(k, v) {
                    if ($("#dd_respon_" + count).val() !== '@CONFIRMITY_RESPON.ID_DESCRIBE' &&
                        $("#dd_disp_" + count).val() !== '@CONFIRMITY_DISPN.ID_DESCRIBE') {
                        $("tr#remain_row_" + count).remove();
                    }
                    count++;
                });
        }

        function removeInputIns() {
            $("input#txt_add_qty").val('');
            $("#lstAdditions").val('@CONFIRMITY_DISPN.ID_VENEXP');
            $("textarea#txt_add_remark").val('');
            $("#lstAllUsers").val('');
        }

        function addRemainShow(useQty, qty) {
            if (useQty === qty) return;
            let res = createDataRemain(useQty, qty);
            let data = $("#append-data-remain").html();
            data = data + res;
            $("#append-data-remain").html(data);
            $("#remain_row_").css('display', 'none');
        }

        function createDataRemain(useQty, qty) {
            let res = '<tr id="remain_row_' + ROWID + '" rev="' + $("#data-confirmity-" + ROWID).attr('rev') + '">';
            res = res + '<td id="remain_item_' + ROWID + '">' + ROWID + '</td>';
            res = res + '<td id="remain_qty_' + ROWID + '">' + (qty - useQty) + '</td>';
            return res;
        }

        function createDataIns() {
            let dt_now = new Date();
            var month = (dt_now.getMonth() + 1) + "";
            if (month.length === 1) {
                month = "0" + month;
            }
            let i = 1;
            let dt_string = month + '/' + dt_now.getDate() + '/' + dt_now.getFullYear();
            let res = '<tr id="ins_row_' + ROWID + '">';
            res = res +
                '<td id="ins_item_' +
                ROWID +
                '"  rev="' +
                $("#data-confirmity-" + ROWID).attr('rev') +
                '">' +
                ROWID +
                '</td>';
            res = res + '<td id="ins_qty_' + ROWID + '">' + $("input#txt_add_qty").val() + '</td>';
            res = res +
                '<td id="ins_addition_' +
                ROWID +
                '" rev="' +
                $("select#lstAdditions").val() +
                '" rev-item="' + ROWID + '_' + $("select#lstAdditions").val() + '" rev="' + $("select#lstAdditions").val()+'">' +
                   $("select#lstAdditions option:selected").text() +
                '</td>';
            res = res + '<td id="ins_remark_' + ROWID + '">' + $("textarea#txt_add_remark").val() + '</td>';
            res = res +
                '<td id="ins_insp_' +
                ROWID +
                '" rev="' +
                $("select#lstAllUsers").val() +
                '">' +
                $("select#lstAllUsers option:selected").text() +
                '</td>';
            res = res + '<td id="ins_date_' + ROWID + '">' + dt_string + '</td></tr>';
            return res;
        }
        // handle Scrap
    function openModalScrap(id) {
        $('#area-non-confirmity-scrap').multiselect({ dropUp: true, enableFiltering: true, enableCaseInsensitiveFiltering: true, buttonWidth: '100%' });
        $('#non-confirmity-type-' + id).val('SCRAP');
        $('#non-confirmity-type-' + id).prev().text('SCRAP');
        $('#btn-non-confirmity-scrap-OK').attr('ncr-det', id);
        $('#btn-non-confirmity-scrap-Canel').attr('ncr-det', id);
        $('#non-confirmity-message-' + id).val('');
        $('#non-confirmity-message-' + id).prev().text('');
        $('#non-confirmity-file-' + id).prev().text('');

        $('#tr-non-confirmity-file-' + id).show();

        //$("#area-non-confirmity-scrap").val('');
        $('#non-confirmity-scrap').show();
        $('#btn-scrap-upload-file').attr('det-item', id);
        $("#modelScrap").modal({ backdrop: 'static', keyboard: false });
        }

        // handle Rework
        function openModalRework(rowid) {
            if ($('#modelRework').attr('disposition-role') === 'USI') {
                $('#txt-rework-btnupload-text-' + rowid).text('Attach Waiver');
                $('#non-confirmity-type-' + rowid).val('USEASIS');
                $('#non-confirmity-type-' + rowid).prev().text('USE AS IS');
            }
            else if ($('#modelRework').attr('disposition-role') === 'VENMI') {
                $('#txt-rework-btnupload-text-' + rowid).text('Attach File');
                $('#non-confirmity-type-' + rowid).val('FileVENMI');
                $('#non-confirmity-type-' + rowid).prev().text('RETURN TO VEN DOR MI EXP');

            }
                else {
                $('#non-confirmity-type-' + rowid).val('REWORK');
                $('#non-confirmity-type-' + rowid).prev().text('REWORK');
                $('#txt-rework-btnupload-text-' + rowid).text('Attach “Rework Instruction”');
                $('#non-confirmity-message-' + rowid).val('');
            }

            $('#non-confirmity-file-' + rowid).prev().text('');
            $('#non-confirmity-message-' + rowid).prev().text('');
            $('#btn-rework-form-OK').attr('ncr-det', rowid);
            $('#btn-rework-form-Cancel').attr('ncr-det', rowid);
            $('#tr-non-confirmity-file-' + rowid).show();
            $('#non-confirmity-rework-' + rowid).show();
            $("#modelRework").modal({ backdrop: 'static', keyboard: false });
        }

        function submitApprConfirm() {
            bootbox.confirm({
                message: "Do you want confirm NCR?",
                buttons: {
                    confirm: {
                        label: 'Yes, confirm this NCR',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-danger'
                    }
                },
                closeButton: false,
                callback: function(result) {
                    if (result) {
                        //let countEng = 0;
                        //$('#append-data-approver tr').each(function (i, e) {
                        //    let role = $(e).children().first().children().children().first().val();
                        //    if (role === ENGINEERINGRoleId) countEng = countEng + 1;
                        //});
                      //  if (countEng >= 1)
                            $myform.submit();
                      //  else {
                      //      bootbox.alert('Please select MARLOW MRB AUTHORIZATION!  -  ENGINEERING');
                     //   }
                    }
                }
            });
        }

        function submitApprVoid() {
             ncrnumber = $("#NCR_NUM").val();
                        var datapost = {
                            NCRNUM: ncrnumber,
                        }
                        $.blockUI();
                        $.post('@Url.Action("CheckHistory", "NCR")',
                            datapost,
                            function(data) {
                                if (data.result ==true) {
                                    bootbox.alert("The NCR cannot be voied because it has been submitted to WH before.");
                                } else if (data.result == false) {
                                   bootbox.confirm({
                message: "Do you want void NCR?",
                buttons: {
                    confirm: {
                        label: 'Yes, Void this NCR',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-danger'
                    }
                },
                closeButton: false,
                callback: function(result) {
                    if (result) {
                        ncrnumber = $("#NCR_NUM").val();
                        var datapost = {
                            ncrnumber: ncrnumber,
                        }
                        $.blockUI();
                        $.post('@Url.Action("ChooseUserSubmitVoid", "WriteNcrForIqc")',
                            datapost,
                            function(data) {
                                if (data.result) {
                                    bootbox.alert("Void Successful");
                                    window.location = '@Url.Action("Index", "NCR")';
                                } else {
                                    bootbox.alert("Please contact to Administrator!");
                                }
                            }).fail(function() {
                                bootbox.alert('Please contact to Administrator!');
                            }).always(function() {
                                $.unblockUI();
                            });

                    }
                }
            });
                                }
                            }).fail(function() {
                                bootbox.alert('Please contact to Administrator!');
                            }).always(function() {
                                $.unblockUI();
                            });

                    }

//comment lai de lam fuction void moi
        @*function submitApprVoid() {
            bootbox.confirm({
                message: "Do you want void NCR?",
                buttons: {
                    confirm: {
                        label: 'Yes, Void this NCR',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-danger'
                    }
                },
                closeButton: false,
                callback: function(result) {
                    if (result) {
                        ncrnumber = $("#NCR_NUM").val();
                        var datapost = {
                            ncrnumber: ncrnumber,
                        }
                        $.blockUI();
                        $.post('@Url.Action("ChooseUserSubmitVoid", "WriteNcrForIqc")',
                            datapost,
                            function(data) {
                                if (data.result) {
                                    bootbox.alert("Confim Successful");
                                    window.location = '@Url.Action("Index", "NCR")';
                                } else {
                                    bootbox.alert("Please contact to Administrator!");
                                }
                            }).fail(function() {
                                bootbox.alert('Please contact to Administrator!');
                            }).always(function() {
                                $.unblockUI();
                            });

                    }
                }
            });

        }*@



        function changeStatusDispo() {
            // $("#modelSubmitStatus").show();
            ncrnumber = $("#NCR_NUM").val();
            var datapost = {
                ncrnumber: ncrnumber
            };
            $.blockUI();
            $.post('@Url.Action("ChooseUserSubmitDispo", "WriteNcrForIqc")',
                datapost,
                function(data) {
                    if (data.result) {
                        bootbox.alert("Confim Successful");
                        window.location = '@Url.Action("Index", "NCR")';
                    } else {
                        bootbox.alert("Please contact to Administrator!");
                    }
                }).fail(function() {
                    bootbox.alert('Please contact to Administrator!');
                }).always(function() {
                    $.unblockUI();
                });
        }

        $(document).ready(function() {
            var isMRBWH='@((bool)ViewBag.IsWHMRB && ViewBag.Status == StatusInDB.Submitted)' === 'True' ;
            var stastus = '@Model.STATUS';
            if (stastus.trim() === '@StatusInDB.DispositionApproved' | stastus.trim() === '@StatusInDB.Close') {
                console.log('Disposition Approved');
                $('#divNCRDISs').show();
                $('#table-show-ins').removeClass('display-none');
                $('.check-box-user').css('display', 'inherit');
                $('#show-data-watting').css('display', 'inherit');
                // $('#table-remain-dispo').removeClass('display-none');
                $('#remain').removeClass('display-none');
                $('#disposhow').removeClass('display-none');
                $('th#datede').removeClass('display-none');
                $('th#add-tradition').removeClass('display-none');
                $('#bt-add').addClass('display-none');
                $('#add-dispo').addClass('display-none');
                $.each($('.add-date'),
                    function() {
                        $(this).removeClass('display-none');
                    });
                $.each($('.adddet'),
                    function() {
                        $(this).removeClass('display-none');
                    });
                //  $('#remainshow').removeClass('display-none');

                $.each($(".hasRespon"),
                    function() {
                        $(this).removeClass('display-none');
                    });
                $.each($(".hasDis"),
                    function() {
                        $(this).removeClass('display-none');
                    });
            }
            if (stastus.trim() === '@StatusInDB.Created') {
                console.log('Created');
            }
            if (stastus.trim() === '@StatusInDB.WaitingForDispositionApproval') {
               // $('#NCRDIS_template_inp').multiselect({ dropUp: true, enableFiltering: true, enableCaseInsensitiveFiltering: true });
                $('#show-data-watting').css('display', 'inherit');
                console.log('Waiting For Disposition Approval');
                $.each($(".hasRespon"),
                    function () {
                        $(this).removeClass('display-none');
                    });
                $.each($(".hasDis"),
                    function () {
                        $(this).removeClass('display-none');
                    });

                $('div#div-Approver').removeClass('cblockUI');
                $('div#div-Approver #btn-add-approver').addClass('display-none');
                $('#divNCRDISs').removeClass('display-none');
                //$('#divNCRDISs #btn-NCRDIS-add').addClass('display-none');

            }
            if (stastus.trim() === '@StatusInDB.Submitted') {
                console.log('@StatusInDB.Submitted');
            }
            if (stastus.trim() === '@StatusInDB.WaitingForDisposition') {
                $('#show-data-watting').css('display', 'inherit');
            }
        });

        function createRowRemain(item, useQty) {
            let res = '<tr id="remain_row_' + item + '" rev="' + $("#data-confirmity-" + item).attr('rev') + '">';
            res = res + '<td>' + item + '</td>';
            res = res + '<td id="useQty_' + item + '">' + useQty + '</td>';
            return res;
        }

        function createSCAR(ncrNUM) {
            window.open('@Url.Action("CreateSCARForNCR", "SCAR")' + "?NCR_NUM=" + ncrNUM);
            @*window.location = '@Url.Action("CreateSCARForNCR", "SCAR")' + "?NCR_NUM=" + ncrNUM;*@
        }

    </script>



    <!-- BEGIN Waiting for Disposition -->
    <script>
        var arrExtension = ['png', 'pdf', 'jpeg', 'jpg', 'bmp'];
        function ckFileUpload(evi_file) {
            var test_value = $(evi_file).val();
            var extension = test_value.split('.').pop().toLowerCase();

            if ($.inArray(extension, arrExtension) === -1 & test_value !== '') {
                bootbox.alert("Invalid file !");
                evi_file.value = '';
                return;
            }
            if (evi_file.files[0].size > 10485760) {
                bootbox.alert('File is too big, more than 10mb !!!');
                evi_file.value = '';
                return;
            }
        }
        function overrideNCRDISs() {
            let listRow = $('.tr-NCRDIS-new');
            let rowlength = listRow.length;
            debugger;
            for (let i = 0; i < rowlength; i++) {
                var ListColumns = listRow[i].children;
                ListColumns[0].children[0].name = "NCRDISs[" + i + "].ITEM";
                ListColumns[1].children[0].name = "NCRDISs[" + i + "].QTY";
                ListColumns[1].children[0].classList.add('addinsqty');
                ListColumns[2].children[0].name = "NCRDISs[" + i + "].ADD_INS";
                ListColumns[3].children[0].name = "NCRDISs[" + i + "].REMARK";

                //Add on 22-01-2019
                if (ListColumns[4].children[0].id == '') {
                    ListColumns[4].children[0].children[0].name = "NCRDISs[" + i + "].INSPECTOR";
                    ListColumns[4].children[0].children[0].id = "NCRDISs_" + i + "_INSPECTOR";
                    ListColumns[4].children[0].children[0].disabled = false;
                    let select = ListColumns[4].children[0].children[0].outerHTML;
                    let val = ListColumns[4].children[0].children[0].options[ListColumns[4].children[0].children[0].selectedIndex].value;
                    //tuan lua comment 30/01
                    //loi tren ie k nhan.
                    //ListColumns[4].children[0].remove();
                    ListColumns[4].innerHTML = select;
                    $("#NCRDISs_" + i + "_INSPECTOR").multiselect({ dropUp: true, enableFiltering: true, enableCaseInsensitiveFiltering: true, buttonWidth: '100%' });
                    $("#NCRDISs_" + i + "_INSPECTOR").multiselect('select', [val]);
                    if (val != '') {
                        $("#NCRDISs_" + i + "_INSPECTOR").multiselect('disable');
                    }
                }
                else {
                    ListColumns[4].children[0].name = "NCRDISs[" + i + "].INSPECTOR";
                    ListColumns[4].children[0].id = "NCRDISs_" + i + "_INSPECTOR";
                    $("#NCRDISs_" + i + "_INSPECTOR").multiselect({ dropUp: true, enableFiltering: true, enableCaseInsensitiveFiltering: true, buttonWidth: '100%' });
                }
            }
        }

        function btnAdd(vm) {
            let tbodyidNCRDISs = 'append-data-NCRDISs';
            //$($(vm).prev()).find('tr:last').toggleClass('display-none')
            $(vm).toggleClass('display-none');
            $(vm).next().toggleClass('display-none');

            let listRow = $('.tr-NCRDIS-new');
            let rowlength = listRow.length;

            let html_template = $('#tr-NCRDIS_template').html();
            //let newr = $('#append-data-NCRDISs tr').length - 1;
            //html_template = html_template.replace('NCRDIS_template_inp', 'NCRDIS_template_inp_' + newr);
            let trtemplate = '<tr class="tr-NCRDIS-new tr-NCRDIS-active" >' + html_template + '</tr>';
            $('#append-data-NCRDISs').append(trtemplate);
            overrideNCRDISs();
           // $('#NCRDIS_template_inp_' + newr).multiselect({ dropUp: true, enableFiltering: true, enableCaseInsensitiveFiltering: true });
        }

        //old-value
        var ncrDis_old_qty = '';
        var ncrDis_old_remark = '';

        function EditNCRDISs(btn) {
            debugger;
            let cktr = $(btn).parent().parent().hasClass('tr-NCRDIS-unactive');
            if (cktr === false) {
                bootbox.alert('Please save ADDITIONALS INSTRUCTIONS before edit ');
                return;
            }
            let role = $(btn).attr('btn-role');
            let remark = $(btn).parent().prev().prev().prev();
            let qty = $(btn).parent().prev().prev().prev().prev().prev();
            ncrDis_old_qty = '';
            ncrDis_old_remark = '';
            if (role === 'edit') {
                remark.children().attr('disabled', false);
                qty.children().attr('disabled', false);
                $(btn).attr('btn-role', 'save')
                $(btn).text('Save');

                ncrDis_old_qty = qty.children().val();
                ncrDis_old_remark = remark.children().val();

                $(btn).next().text('Cancel');
                $(btn).next().attr('btn-role', 'cancel');
            }
            else {
                let check = true;
                if (/*parseFloat(qty.children().val()) == NaN | parseFloat(qty.children().val()) <= 0*/ isNormalInteger(qty.children().val()) === false) {
                    check = false;
                    bootbox.alert('Please input QTY');
                    return;
                }

                if (check) {
                    ncrDis_old_qty = '';
                    ncrDis_old_remark = '';
                    remark.children().attr('disabled', true);
                    qty.children().attr('disabled', true);
                    $(btn).attr('btn-role', 'edit');
                    $(btn).text('EDIT');

                    $(btn).next().text('Delete');
                    $(btn).next().attr('btn-role', 'delete');
                }
            }

            RenderAndReloadRemain();
        }

        function DeleteNCRDISs(btn) {
            debugger;
            let role = $(btn).attr('btn-role');
            let remark = $(btn).parent().prev().prev().prev();
            let qty = $(btn).parent().prev().prev().prev().prev().prev();
            let item = $(btn).parent().prev().prev().prev().prev().prev().prev();
            let rowid = item.children().val();
            let index = $(btn).attr('dis-item-index');
            if (role === 'cancel') {
                remark.children().val(ncrDis_old_remark);
                qty.children().val(ncrDis_old_qty);

                remark.children().attr('disabled', true);
                qty.children().attr('disabled', true);

                ncrDis_old_qty = '';
                ncrDis_old_remark = '';
                RenderAndReloadRemain();
            }
            else {
                bootbox.confirm("Are you sure to delete ?",
                    function (result) {
                        if (result) {
                            $(btn).parent().parent().remove();
                            $('#btn-ok-c').addClass('display-none');
                            $('#btn-NCRDIS-add').removeClass('display-none');
                            overrideNCRDISs();
                            $('#tr-addin-file-template-' + rowid + '-' + index).remove();
                            $('#tbody-addin-file tr').each(function (i, e) {
                                debugger;
                                e.children[0].children[1].name = 'ADDIN[' + i + '].Item';
                                e.children[0].children[2].name = 'ADDIN[' + i + '].IsSave';
                                e.children[0].children[3].name = 'ADDIN[' + i + '].Type';
                                e.children[1].children[1].name = 'ADDIN[' + i + '].Disposition';
                                e.children[2].children[1].name = 'ADDIN[' + i + '].FileAttach';
                                e.children[3].children[1].name = 'ADDIN[' + i + '].Message';
                            })
                            RenderAndReloadRemain();
                            if ('@Model.STATUS.Trim()' === '@StatusInDB.WaitingForDispositionApproval.Trim()') {
                                window.location.reload();
                            }
                        }
                    });
            }
            RenderAndReloadRemain();

        }

        $('#btn-non-confirmity-scrap-OK').click(function (e) {
            e.preventDefault();
            $('#area-non-confirmity-scrap').css('border', '');
            let rowid = $(this).attr('ncr-det');
            if ($('#area-non-confirmity-scrap').val() === '') {
                bootbox.alert("Reason is required!");
                return;
            }

            //Tuan Lua Them
            let fullPath = document.getElementById('non-confirmity-file-' + rowid).value;
            let filename = "";
            if (fullPath) {
                let startIndex = (fullPath.indexOf('\\') >= 0 ? fullPath.lastIndexOf('\\') : fullPath.lastIndexOf('/'));
                filename = fullPath.substring(startIndex);
                if (filename.indexOf('\\') === 0 || filename.indexOf('/') === 0) {
                    filename = filename.substring(1);
                }
                console.log(filename);
                $('#non-confirmity-file-' + rowid).prev().text(filename);
            }

            //
            $('#non-confirmity-message-' + rowid).prev().text($('#area-non-confirmity-scrap').val());
            $('#non-confirmity-message-' + rowid).val($('#area-non-confirmity-scrap').val());
            $("#modelScrap").modal('hide');
        });

        $('#btn-non-confirmity-scrap-Canel').click(function (e) {
            let rowid = $(this).attr('ncr-det');
            ResetScrapform(rowid);
            $('#btn-non-confirmity-scrap-OK').attr('ncr-det', '');
            $('#btn-non-confirmity-scrap-Cancel').attr('ncr-det', '');
            $('#NCRDETs_' + rowid + '__DISPOSITION').val('');
            $('#btn-scrap-upload-file').attr('det-item', '');
            $("#modelScrap").modal('hide');
        });

        $('#btn-rework-form-OK').click(function (e) {
            e.preventDefault();
            let rowid = $(this).attr('ncr-det');
            let fullPath = document.getElementById('non-confirmity-file-' + rowid).value;
            let filename = "";
            if (fullPath) {
                let startIndex = (fullPath.indexOf('\\') >= 0 ? fullPath.lastIndexOf('\\') : fullPath.lastIndexOf('/'));
                filename = fullPath.substring(startIndex);
                if (filename.indexOf('\\') === 0 || filename.indexOf('/') === 0) {
                    filename = filename.substring(1);
                }
                console.log(filename);
                $('#non-confirmity-file-' + rowid).prev().text(filename);
            }
            if (filename === '' & $('#modelRework').attr('disposition-role') === 'USI') {
                bootbox.alert('Missing Waiver');
                return;
            }

            if (filename === '') {
                bootbox.alert('Missing REWORK INSTRUCTON');
                return;
            }
            $('#non-confirmity-message-' + rowid).prev().text($('#non-confirmity-message-' + rowid).val());
            $('#non-confirmity-rework-' + rowid).hide();
            $('#modelRework').modal('hide');
        });

        $('#btn-rework-form-Cancel').click(function (e) {
            let rowid = $(this).attr('ncr-det');
            $('#tr-non-confirmity-file-' + rowid).hide();
            //removeRework();
            $('#btn-rework-form-OK').attr('ncr-det', '');
            $('#btn-rework-form-Cancel').attr('ncr-det', '');
            $('#NCRDETs_' + rowid + '__DISPOSITION').val('');
            $('#non-confirmity-type-' + rowid).val('');
            $('#modelRework').modal('hide');
            $('#non-confirmity-rework-' + rowid).hide();
            ResetReworkform(rowid);
        });

        $('#btn-modelOrAddins-form-OK').click(function (e) {
            e.preventDefault();
            $('#area-non-confirmity-scrap').css('border', '');
            let rowid = $('#modelOrAddins').attr('addins-item');
            let type = $('#modelOrAddins').attr('addins-type');
            if (type == 'SCRAP') {
                if ($('#area-or-addins-scrap').val() === '') {
                    bootbox.alert("Reason is required!");
                    return;
                }

                $('#addins-message-' + rowid).val($('#area-or-addins-scrap').val());
                $('#addins-message-' + rowid).prev().text($('#area-or-addins-scrap').val());
            }
            else {
                $('#addins-message-' + rowid).prev().text($('#addins-message-' + rowid).val());
            }


            let fullPath = document.getElementById('addins-file-' + rowid).value;
            let filename = "";
            if (fullPath) {
                let startIndex = (fullPath.indexOf('\\') >= 0 ? fullPath.lastIndexOf('\\') : fullPath.lastIndexOf('/'));
                filename = fullPath.substring(startIndex);
                if (filename.indexOf('\\') === 0 || filename.indexOf('/') === 0) {
                    filename = filename.substring(1);
                }
                console.log(filename);
                $('#addins-file-' + rowid).prev().text(filename);
            }
            if (filename === '' & type === 'USEASIS') {
            bootbox.alert('Missing Waiver');
            return;
            }
            if (filename === '' & type === 'REWORK' && type === 'VEN EXP' && type === 'VEN MI' && type ==='SORT100' && type === 'SALVAGE' && type === 'OTHER' && type === 'ACCEPTED' && type ==='SCRAP AND DESTROY') {
                bootbox.alert('Missing File');
                return;
            }
            ////
            //$('#non-confirmity-message-' + rowid).prev().text($('#area-non-confirmity-scrap').val());
            //$('#non-confirmity-message-' + rowid).val($('#area-non-confirmity-scrap').val());
            $("#modelOrAddins").modal('hide');
        });

        $('#btn-modelOrAddins-form-Cancel').click(function (e) {
            debugger;
            let rowid = $('#modelOrAddins').attr('addins-item');
            let type = $('#modelOrAddins').attr('addins-type');
            let item = parseInt(rowid) + 1;
            $('#input-or-addins-text').val('')
            $('#area-or-addins-scrap').multiselect('destroy');
            $('#area-or-addins-scrap').css('display', 'none');
            $('#tr-addins-file-' + item).remove();
          //  $('#NCRDISs + rowid+.ADD_INS').val('');
            //  $('#NCRDIS_template_addins').text("Please select");
            if (type == 'REWORK' | type == 'USEASIS' | type == 'SCRAP') {
                $('#append-data-NCRDISs tr:last')[0].children[2].children[0].value = '';
            }
            $("#modelOrAddins").modal('hide');
        })

        //tuan lua add model 100
        $('#btn-model100Addins-form-Cancel').click(function (e) {
            debugger;
            let rowid = $('#model100Addins').attr('addins-item');
            let type = $('#model100Addins').attr('addins-type');
            let rowindex = $('#model100Addins').attr('addins-item-index');
            $('#input-100-addins-text').val('')
            $('#area-100-addins-scrap').multiselect('destroy');
            $('#area-100-addins-scrap').css('display', 'none');
            $('#tr-addin-file-template-' + rowid + '-' + rowindex).remove();
            if (type == 'REWORK' | type == 'USEASIS' | type == 'SCRAP') {
                $('#append-data-NCRDISs tr:last')[0].children[2].children[0].value = '';
            }
            $("#model100Addins").modal('hide');
        })
        $('#btn-model100Addins-form-OK').click(function (e) {
            debugger;
            e.preventDefault();
            $('#area-non-confirmity-scrap').css('border', '');
            let rowid = $('#model100Addins').attr('addins-item');
            let rowindex = $('#model100Addins').attr('addins-item-index');
            let type = $('#model100Addins').attr('addins-type');
            if (type == 'SCRAP') {
                if ($('#area-100-addins-scrap').val() === '') {
                    bootbox.alert("Reason is required!");
                    return;
                }

                $('#addin-message-' + rowid + '-' + rowindex).val($('#area-100-addins-scrap').val());
                $('#addin-message-' + rowid + '-' + rowindex).prev().text($('#area-100-addins-scrap').val());
            }
            else {
                $('#addin-message-' + rowid + '-' + rowindex).prev().text($('#addin-message-' + rowid + '-' + rowindex).val());
            }


            let fullPath = document.getElementById('addin-file-' + rowid + '-' + rowindex).value;
            let filename = "";
            if (fullPath) {
                let startIndex = (fullPath.indexOf('\\') >= 0 ? fullPath.lastIndexOf('\\') : fullPath.lastIndexOf('/'));
                filename = fullPath.substring(startIndex);
                if (filename.indexOf('\\') === 0 || filename.indexOf('/') === 0) {
                    filename = filename.substring(1);
                }
                console.log(filename);
                $('#addin-file-' + rowid + '-' + rowindex).prev().text(filename);
            }
            if (filename === "" & type === 'USEASIS') {
                bootbox.alert('Missing Waiver');
                return;
            }
            if (filename === "" & type === "REWORK" /*&& type === "VEN EXP" && type === "VEN MI" && type === "SORT100" && type === "SALVAGE" && type === "OTHER" && type === "ACCEPTED"*/) {
                bootbox.alert('Missing File');
                return;
            }
            if (filename === "" &  type === "VEN EXP") {
                bootbox.alert('Missing File');
                return;
            }
            if (filename === "" & type === "VEN MI") {
                bootbox.alert('Missing File');
                return;
            }
            if (filename === "" & type === "SORT100") {
                bootbox.alert('Missing File');
                return;
            }
            if (filename === "" & type === "SALVAGE") {
                bootbox.alert('Missing File');
                return;
            }
            if (filename === "" & type === "OTHER") {
                bootbox.alert('Missing File');
                return;
            }
            if (filename === "" & type === "ACCEPTED") {
                bootbox.alert('Missing File');
                return;
            }
            if (filename === "" & type === "SCRAP AND DESTROY") {
                bootbox.alert('Missing File');
                return;
            }
            ////
            //$('#non-confirmity-message-' + rowid).prev().text($('#area-non-confirmity-scrap').val());
            //$('#non-confirmity-message-' + rowid).val($('#area-non-confirmity-scrap').val());
            $("#model100Addins").modal('hide');
        });
       
        //Save Form dispo
        function saveDataDispo() {
            debugger
            let save = true;
            if ($('.tr-NCRDIS-active').length > 0) {
                //bootbox.confirm('Exists addins not save, are you sure save?', function (res) {
                //    save = res;
                //});
                bootbox.alert('ADDITIONALS INSTRUCTIONS has been selected, Please select or save or delete ADDITIONALS INSTRUCTIONS!');
                $('html,body').animate({
                    scrollTop: $("#divNCRDISs").offset().top
                }, 1000);
                return;
            }
            //if (save == false) return;
            let DEFECTIVE = parseFloat('@Model.defect');
            let REJECTED = parseFloat('@Model.REJ_QTY');
            let ckreponsedrop = true;
            let depositiondrop = true;
            let ckDESCRIBE = false;
            let ckDESCRIBE_qty = true;
            let ckADDITIONALSINSTRUCTIONS = true;

            let DESCRIBE_item = '';
            let DESCRIBE_qty = 0;
            let Addins_qty = 0;

            $('.reponsedrop').each(function (i, e) {
                if ($(e).children().val() === '' | $(e).children().val() === null) {
                    ckreponsedrop = false;
                }
            });

            $('.depositiondrop').each(function (i, e) {
                DESCRIBE_item = '';
                DESCRIBE_qty = 0;
                Addins_qty = 0;
                if ($(e).children().val() === '' | $(e).children().val() === null) {
                    depositiondrop = false;
                }
                if ($(e).children().val() === '@CONFIRMITY_DISPN.ID_DESCRIBE') {
                    ckDESCRIBE = true;
                    let itemt = parseFloat($(e).prev().prev().prev().prev().prev().prev().children().val());
                    let itemp = itemt + 1;
                    DESCRIBE_item = itemp.toString();
                    DESCRIBE_qty = parseFloat($(e).prev().prev().prev().prev().prev().children().val());

                    $('.tr-NCRDIS-unactive').each(function (i, e) {
                        debugger;
                        let selectitem = $(e).children().first().children();
                        let selectitem_qty = $(e).children().first().next().children();
                        //tuanlua 24-01-2019 -check insp khi save dispo
                        //let ckinsp = $(e).children().first().next().next().children();
                        //if (ckinsp.val() == '') {
                        //    bootbox.alert('Please select INSP!');
                        //}
                       if ($(selectitem).val() === DESCRIBE_item)
                           Addins_qty += parseFloat($(selectitem_qty).val());
                    });
                }
                if ( Addins_qty > DESCRIBE_qty & IsAQL === false & $(e).children().val() === '@CONFIRMITY_DISPN.ID_DESCRIBE') {
                //if (Addins_qty !== DESCRIBE_qty & IsAQL === false) {
                    ckDESCRIBE_qty = false;
                    return;
                }

                if (Addins_qty <= 0 & IsAQL === false & $(e).children().val() === '@CONFIRMITY_DISPN.ID_DESCRIBE') {
                    ckDESCRIBE_qty = false;
                    return;
                }
            });

            if (IsAQL === true) { // AQL
                let sumaddinsqty = 0;
                if ($('.tr-NCRDIS-unactive .addinsqty').length <= 0) {
                    bootbox.alert('ADDITIONALS INSTRUCTIONS is required!');
                    return;
                }
                $('.tr-NCRDIS-unactive .addinsqty').each(function (i, e) {
                    sumaddinsqty += parseFloat($(e).val());
                });

                if (sumaddinsqty !== REJECTED) {
                    ckDESCRIBE_qty = false;
                }
            }

            else {// 100%
                let sumaddinsqty = 0;
                $('.tr-NCRDIS-unactive .addinsqty').each(function (i, e) {
                    sumaddinsqty += parseFloat($(e).val());
                });

                if (sumaddinsqty > DEFECTIVE) {
                    ckADDITIONALSINSTRUCTIONS = false;
                }
            }
            //check insp null

            if (ckADDITIONALSINSTRUCTIONS === false) {
                bootbox.alert("QTY of ADDITIONALS INSTRUCTIONS must be equal total qty of item of Non-Comformity");
                return;
            }

            if (ckDESCRIBE && !ckDESCRIBE_qty) {
                if (IsAQL === false)
                    bootbox.alert("QTY of ADDITIONALS INSTRUCTIONS must be equal total qty of item of Non-Comformity");
                else bootbox.alert("QTY of ADDITIONALS INSTRUCTIONS must be equal total Rejected qty");
                return;
            }



            if (ckreponsedrop === false) {
                bootbox.alert("The RESPON not be empty !!!");
                return;
            }
            else if (depositiondrop === false) {
                bootbox.alert("The DISP'N not be empty !!!");
                return;
            }
            let notrchk = $('#chkb_notrequired').prop('checked');
            let rchk = $('#chkb_required').prop('checked');
            let notichk = $('#chkb_notification').prop('checked');

            if (notrchk === false & rchk === false & notichk === false) {
                bootbox.alert("The CORRECTIVE ACTION is required !!!");
                return;
            }

            if ($('#append-data-approver tr').length <= 2) {
                bootbox.alert("Select MARLOW MRB AUTHORIZATION !!!");
                return;
            }
            ///TODO: check chairman - ugent
            let checkChairman = false;
            $('#append-data-approver tr').each(function (i, e) {
                console.log($(e).children().first().children().first().children().first().val());
                if ($(e).children().first().children().first().children().first().val() === CHAIRMANRoleId) {
                    checkChairman = true;
                    return;
                }
            });
            if (checkChairman === false) {
                bootbox.alert("Select MARLOW MRB AUTHORIZATION - Chairman !!!");
                return;
            }

            let arrApprover = [];
            $('#append-data-approver tr').each(function (i, e) {
                console.log($(e).children().first().next().children().children().first().val());
                let ckselect = $(e).children().first().next().children().children().first().val();
                arrApprover.push(ckselect);
                console.log(ckselect);
            });

            //let findDuplicates = (arr) => arr.filter((item, index) => arr.indexOf(item) !== index);
            console.log(find_duplicate_in_array(arrApprover));
            if (find_duplicate_in_array(arrApprover).length > 0) {
                bootbox.alert('Duplicate Approver, please select other !!!', function () {

                });
                return;
            }


            console.log('Check Success');
            $myform.submit();
        }

        function hasDuplicates(array) {
            return (new Set(array)).size !== array.length;
        }

        function find_duplicate_in_array(arra1) {
            var object = {};
            var result = [];

            arra1.forEach(function (item) {
                if (!object[item])
                    object[item] = 0;
                object[item] += 1;
            });

            for (var prop in object) {
                if (object[prop] >= 2) {
                    result.push(prop);
                }
            }

            return result;

        }

        function submitApprDispo() {
            RenderAndReloadRemain();
            let countMRB = 0;
            $('#append-data-approver tr').each(function (i, e) {
                let role = '@ViewBag.IsMRBTeam';
                let uid = $(e).children().first().next().children().children().first().val();
                if (role === 'True' & uid === IdUser) countMRB = countMRB + 1;
            });
            if (countMRB >= 1) {
                $('#div-Approver').removeClass('cblockUI');
                console.log('Accept disposition');
                $("#modelDisposition").css('display', 'inherit');
                $("#btn-dispo").addClass('display-none');
                $('#divNCRDISs').removeClass('display-none');
                $("#btn-NCRDIS-add").removeClass('display-none');
                $('#hasRespon').addClass('display-none');
                $("#hasDis").addClass('display-none');
                $('#rejectENg').addClass('hidebutton');
                $('#rejectAssign').addClass('hidebutton');
                $('#btn-okdispo').removeClass('display-none');
                //moi them vao de hien thi "" khi chon
                $("#add_raw_addins").val("");
                $('.show_footer').css('display', 'inherit');
                $.each($(".NCRDETs_response"),
                    function () {
                        $(this).removeClass('display-none');
                    });

                $.each($(".NCRDETs_disposition"),
                    function () {
                        $(this).removeClass('display-none');
                    });
            }
            else {
                bootbox.alert('You are not permitted');
            }
            return;
        }

        function add_raw_addins_onchange(vm) {//vm is select
            let check = true;
            let valuedoubplicate = vm.parentNode.parentNode.children[0].children[0].value + '_' + vm.value;
            $('.tr-NCRDIS-unactive').each(function (i, e) {
                let value = e.children[0].children[0].value + '_' + e.children[2].children[0].value;
                if (e.children[2].children[0].value === '')
                {
                    $('#btn-NCRDIS-add').addClass('display-none');
                    bootbox.alert('Please select ADDITIONALS INSTRUCTIONS!');
                    check = false;
                    $(vm).val('');
                    return;
                }
                else if (value === valuedoubplicate) {
                    $('#btn-NCRDIS-add').addClass('display-none');
                    bootbox.alert('Duplicate Additionals Instructions: ' + vm.options[vm.selectedIndex].text);
                    check = false;
                    $(vm).val('');
                    return;
                }

            });
            if (!check) return;
            //add on 22-01-2019
            if ('@Model.STATUS.Trim()' == '@StatusInDB.WaitingForDisposition') {
                $('#add-in_table').removeAttr('style');
                $('.tr-NCRDIS-old').each(function (i, e) {
                    if (e.children[2].children[0].innerText == vm.options[vm.selectedIndex].text) {
                        $('#btn-NCRDIS-add').addClass('display-none');
                        bootbox.alert('Duplicate Additionals Instructions: ' + vm.options[vm.selectedIndex].text);
                        check = false;
                        $(vm).val('');
                        return;
                    }
                });
            }
            // check is aql and open popup rework and use as is
            let item = vm.parentNode.parentNode.children[0].children[0].value;
            if (IsAQL & check) { @*{
                $('#model-or-addins').children().first().next().show();
                if (item == '') {
                    bootbox.alert('Please select item !', function () {
                        $(vm).val('');
                    });
                    return;
                }
                let itemsave = parseInt(item) - 1;
                let index = $('#tbody-non-comformity-file tr').length;
                let disp = '', disp_save = '';
                let ck = $('#tr-addins-file-' + item).length;

                if (ck >= 1) {
                    $('#tr-addins-file-' + item).remove();
                }
                debugger;
                if (vm.value == '@ADDINS.ID_REWORK') {
                    disp = disp_save = 'REWORK';
                    $('#modelOrAddins').attr('addins-type', 'REWORK');
                }
                else if (vm.value == '@ADDINS.ID_SCRAP') {
                    disp = disp_save = 'SCRAP';
                    $('#modelOrAddins').attr('addins-type', 'SCRAP');
                }
                else if (vm.value == '@ADDINS.ID_USEASIS') {
                    disp = 'USE AS IS';
                    disp_save = 'USEASIS';
                    $('#modelOrAddins').attr('addins-type', 'USEASIS');
                    $('#model-or-addins').children().first().next().hide();
                }
                 else if (vm.value == '@ADDINS.ID_VENEXP') {
                    disp = 'VEN EXP';
                    disp_save = 'VEN EXP';
                    $('#modelOrAddins').attr('addins-type', 'VEN EXP');
                    $('#model-or-addins').children().first().next().hide();
                }
                else if (vm.value == '@ADDINS.ID_VENMI') {
                    disp = 'VEN MI';
                    disp_save = 'VEN MI';
                    $('#modelOrAddins').attr('addins-type', 'VEN MI');
                    $('#model-or-addins').children().first().next().hide();
                }
                  else if (vm.value == '@ADDINS.ID_SALVAGE') {
                    disp = 'SALVAGE';
                    disp_save = 'SALVAGE';
                    $('#modelOrAddins').attr('addins-type', 'SALVAGE');
                    $('#model-or-addins').children().first().next().hide();
                }
                 else if (vm.value == '@ADDINS.ID_ACCEPTED') {
                    disp = 'ACCEPTED';
                    disp_save = 'ACCEPTED';
                    $('#modelOrAddins').attr('addins-type', 'ACCEPTED');
                    $('#model-or-addins').children().first().next().hide();
                }
                else if (vm.value == '@ADDINS.ID_SORT100') {
                    disp = 'SORT100';
                    disp_save = 'SORT100';
                    $('#modelOrAddins').attr('addins-type', 'SORT100');
                    $('#model-or-addins').children().first().next().hide();
                }
                  else if (vm.value == '@ADDINS.ID_OTHER') {
                    disp = 'OTHER';
                    disp_save = 'OTHER';
                    $('#modelOrAddins').attr('addins-type', 'OTHER');
                    $('#model-or-addins').children().first().next().hide();
                }
                //else {
                //    if (ck >= 1) {
                //        $('#tr-addins-file-' + item).remove();
                //    }
                //}

                let template = '<tr id="tr-addins-file-' + item + '">' +
                    '<td>' +
                    '<span>' + item + '</span>' +
                    '<input type="hidden" value="' + itemsave + '" name="DISPOSITION[' + index + '].Item" id="addins-item-' + itemsave + '" />' +
                    '<input type="hidden" value="0" name="DISPOSITION[' + index + '].IsSave" id="addins-save-' + itemsave + '" />' +
                    '<input type="hidden" value="DIS" name="DISPOSITION[' + index + '].Type" id="or-type-' + itemsave + '" />' +
                    '</td>' +
                    '<td>' +
                    '<span>' + disp + '</span>' +
                    '<input type="hidden" value="' + disp_save + '" name="DISPOSITION[' + index + '].Disposition" id="addins-type-' + itemsave + '" />' +
                    '</td>' +
                    '<td>' +
                    '<span></span>' +
                    '<input onchange="ckFileUpload(this)" hidden type="file" accept="application/pdf,application/PDF" class="form-control valid" data-val="true" data-val-maximumfilesize="File Attach can not be larger than 10 MB" data-val-maximumfilesize-size="10" data-val-required="The File Attach field is required." data-val-validfiletype="File Attach must be one of the following file types: pdf,PDF" data-val-validfiletype-filetypes="pdf,PDF" value="" aria-required="true" aria-describedby="FileAttach-error" aria-invalid="false" name="DISPOSITION[' + index + '].FileAttach" style="display:none" id="addins-file-' + itemsave + '" />' +
                    '</td>' +
                    ' <td>' +
                    '<span></span>' +
                    '<input type="hidden" name="DISPOSITION[' + index + '].Message" value="" id="addins-message-' + itemsave + '" />' +
                    //'<select style="display:none;" class="form-control" id="area-or-addins-scrap-' + itemsave + '" name="area-or-addins-scrap-' + itemsave + '">' + $('#area-non-confirmity-scrap').html()+'</select>'+
                    '</td></tr>';

                if (vm.value == '@ADDINS.ID_REWORK' | vm.value == '@ADDINS.ID_SCRAP' | vm.value == '@ADDINS.ID_USEASIS' | vm.value == '@ADDINS.ID_VENEXP'| vm.value == '@ADDINS.ID_SALVAGE' | vm.value == '@ADDINS.ID_VENMI' | vm.value == '@ADDINS.ID_SORT100' | vm.value == '@ADDINS.ID_ACCEPTED' | vm.value == '@ADDINS.ID_OTHER')  {
                    $('#input-or-addins-text').css('display', '')
                    $('#area-or-addins-scrap').multiselect('destroy');
                    $('#area-or-addins-scrap').css('display', 'none');
                    if (vm.value == '@ADDINS.ID_REWORK') {
                        $('#tbody-non-comformity-file').append(template);
                        $('#modelOrAddins').attr('addins-item', itemsave);
                        $('#input-or-addins-text').val('');
                    }
                    else if (vm.value == '@ADDINS.ID_SCRAP') {
                        $('#tbody-non-comformity-file').append(template);
                        $('#input-or-addins-text').css('display', 'none')
                        $('#area-or-addins-scrap').css('display', '');
                        $('#area-or-addins-scrap').multiselect({ dropUp: true, enableFiltering: true, enableCaseInsensitiveFiltering: true, buttonWidth: '100%' });
                        //thieu cai nay k chay dc lol
                        $('#modelOrAddins').attr('addins-item', itemsave);
                    }
                    else  if (vm.value == '@ADDINS.ID_USEASIS') {
                        $('#tbody-non-comformity-file').append(template);
                        $('#modelOrAddins').attr('addins-item', itemsave);
                    }
                        else  if (vm.value == '@ADDINS.ID_VENEXP') {
                        $('#tbody-non-comformity-file').append(template);
                        $('#modelOrAddins').attr('addins-item', itemsave);
                    }
                         else  if (vm.value == '@ADDINS.ID_VENMI') {
                        $('#tbody-non-comformity-file').append(template);
                        $('#modelOrAddins').attr('addins-item', itemsave);
                    }
                          else  if (vm.value == '@ADDINS.ID_ACCEPTED') {
                        $('#tbody-non-comformity-file').append(template);
                        $('#modelOrAddins').attr('addins-item', itemsave);
                    }
                           else  if (vm.value == '@ADDINS.ID_SORT100') {
                        $('#tbody-non-comformity-file').append(template);
                        $('#modelOrAddins').attr('addins-item', itemsave);
                    }
                           else  if (vm.value == '@ADDINS.ID_OTHER') {
                        $('#tbody-non-comformity-file').append(template);
                        $('#modelOrAddins').attr('addins-item', itemsave);
                    }
                           else  if (vm.value == '@ADDINS.ID_SALVAGE') {
                        $('#tbody-non-comformity-file').append(template);
                        $('#modelOrAddins').attr('addins-item', itemsave);
                    }
                    else {
                        $('#input-or-addins-text').css('display', '')
                        $('#area-or-addins-scrap').multiselect('destroy');
                        $('#area-or-addins-scrap').css('display', 'none');
                    }

                    $('#modelOrAddins').modal({ backdrop: 'static', keyboard: false });
                }
                return;
            }

            else {
                let ck = $('#tr-addins-file-' + item).length;
                if (ck >= 1) {
                    $('#tr-addins-file-' + item).remove();
                }*@

                //sua 21.02.2019
                {
                    if (item == '') {
                        bootbox.alert('Please select item !', function () {
                            $(vm).val('');
                        });
                        return;
                    }
                let itemsave = parseInt(item) - 1;
                let index = vm.parentNode.parentNode.children[6].children[1].getAttribute('dis-item-index');
                let indexdelete = vm.parentNode.parentNode.children[6].children[1].getAttribute('dis-item-index');
                let disp = '', disp_save = '';
                      //  $('#model-or-addins').children().first().next().show();
                         if (vm.value == '@ADDINS.ID_REWORK') {
                        disp = disp_save = 'REWORK';
                        $('#model100Addins').attr('addins-type', 'REWORK');
                    }
                    else if (vm.value == '@ADDINS.ID_SCRAP') {
                        disp = disp_save = 'SCRAP';
                        $('#model100Addins').attr('addins-type', 'SCRAP');
                    }
                    else if (vm.value == '@ADDINS.ID_USEASIS') {
                        disp = 'USE AS IS';
                        disp_save = 'USEASIS';
                        $('#model100Addins').attr('addins-type', 'USEASIS');
                        $('#model-100-addins').children().first().next().hide();
                    }
                     else if (vm.value == '@ADDINS.ID_VENEXP') {
                        disp = 'VEN EXP';
                        disp_save = 'VEN EXP';
                        $('#model100Addins').attr('addins-type', 'VEN EXP');
                        $('#model-100-addins').children().first().next().hide();
                    }
                    else if (vm.value == '@ADDINS.ID_VENMI') {
                        disp = 'VEN MI';
                        disp_save = 'VEN MI';
                        $('#model100Addins').attr('addins-type', 'VEN MI');
                        $('#model-100-addins').children().first().next().hide();
                    }
                      else if (vm.value == '@ADDINS.ID_SALVAGE') {
                        disp = 'SALVAGE';
                        disp_save = 'SALVAGE';
                        $('#model100Addins').attr('addins-type', 'SALVAGE');
                        $('#model-100-addins').children().first().next().hide();
                    }
                     else if (vm.value == '@ADDINS.ID_ACCEPTED') {
                        disp = 'ACCEPTED';
                        disp_save = 'ACCEPTED';
                        $('#model100Addins').attr('addins-type', 'ACCEPTED');
                        $('#model-100-addins').children().first().next().hide();
                    }
                    else if (vm.value == '@ADDINS.ID_SORT100') {
                        disp = 'SORT100';
                        disp_save = 'SORT100';
                        $('#model100Addins').attr('addins-type', 'SORT100');
                        $('#model-100-addins').children().first().next().hide();
                    }
                      else if (vm.value == '@ADDINS.ID_OTHER') {
                        disp = 'OTHER';
                        disp_save = 'OTHER';
                        $('#model100Addins').attr('addins-type', 'OTHER');
                        $('#model-100-addins').children().first().next().hide();
                    }
                     else if (vm.value == 'K') {
                        disp = 'SCRAP AND DESTROY';
                        disp_save = 'SCRAP AND DESTROY';
                        $('#model100Addins').attr('addins-type', 'SCRAP AND DESTROY');
                        $('#model-100-addins').children().first().next().hide();
                }
                let newindex = $('#tbody-addin-file tr').length;
                let template = '<tr id="tr-addin-file-template-' + item + '-' + index + '" class="tr-addin-file-active">' +
                    ' <td> <span>' + item + '</span> <input type="hidden" value="' + itemsave + '" name="ADDIN[' + newindex + '].Item" id="addin-item-' + item + '-' + index + '">' +
                    '<input type="hidden" value="0" name="ADDIN[' + newindex + '].IsSave" id="addin-save-' + item + '-' + index + '">' +
                    '<input type="hidden" value="DIS" name="ADDIN[' + newindex + '].Type" id="addin-type-' + item + '-' + index +  '"></td>' +
                    '<td>' +
                    '<span>' + disp_save + '</span>' +
                    '<input type="hidden" value="' + disp_save + '" name="ADDIN[' + newindex + '].Disposition" id=" non-addin-type-' + item + '-' + index +  '"> </td> <td> <span></span>' +
                    '<input onchange="ckFileUpload(this)" hidden="" type="file" accept="application/pdf,application/PDF" class="form-control valid" data-val="true" data-val-maximumfilesize="File Attach can not be larger than 10 MB" data-val-maximumfilesize-size="10" data-val-required="The File Attach field is required." data-val-validfiletype="File Attach must be one of the following file types: pdf,PDF" data-val-validfiletype-filetypes="pdf,PDF" value="" aria-required="true" aria-describedby="FileAttach-error" aria-invalid="false" name="ADDIN[' + newindex + '].FileAttach" style="display:none" id="addin-file-' + item + '-' + index +  '">' +
                    '</td> <td>  <span></span> <input type="hidden" name="ADDIN[' + newindex + '].Message" value="" id="addin-message-' + item + '-' + index +  '" /> </td> </tr> ';
                     if (vm.value == '@ADDINS.ID_REWORK' | vm.value == '@ADDINS.ID_SCRAP' | vm.value == '@ADDINS.ID_USEASIS' | vm.value == '@ADDINS.ID_VENEXP'| vm.value == '@ADDINS.ID_SALVAGE' | vm.value == '@ADDINS.ID_VENMI' | vm.value == '@ADDINS.ID_SORT100' | vm.value == '@ADDINS.ID_ACCEPTED' | vm.value == '@ADDINS.ID_OTHER' | vm.value == 'K')  {
                        $('#input-100-addins-text').css('display', '')
                        $('#area-100-addins-scrap').multiselect('destroy');
                         $('#area-100-addins-scrap').css('display', 'none');

                         if (vm.value == '@ADDINS.ID_REWORK') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                             $('#model100Addins').attr('addins-item-index', index);
                             $('#model-100-addins').children().first().next().show();
                            $('#input-100-addins-text').val('');
                        }
                         else if (vm.value == '@ADDINS.ID_SCRAP') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                            $('#input-100-addins-text').css('display', 'none')
                            $('#area-100-addins-scrap').css('display', '');
                             $('#area-100-addins-scrap').multiselect({ dropUp: true, enableFiltering: true, enableCaseInsensitiveFiltering: true, buttonWidth: '100%' });
                             $('#model-100-addins').children().first().next().show();
                            //thieu cai nay k chay dc lol
                             $('#model100Addins').attr('addins-item', item);
                        }
                         else if (vm.value == '@ADDINS.ID_USEASIS') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                        }
                         else if (vm.value == '@ADDINS.ID_VENEXP') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                        }
                         else if (vm.value == '@ADDINS.ID_VENMI') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                        }
                         else if (vm.value == '@ADDINS.ID_ACCEPTED') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                        }
                         else if (vm.value == '@ADDINS.ID_SORT100') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                        }
                         else if (vm.value == '@ADDINS.ID_OTHER') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                        }
                         else if (vm.value == '@ADDINS.ID_SALVAGE') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                         }
                              else if (vm.value == 'K') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                        }
                        else {
                            $('#input-100-addins-text').css('display', '')
                            $('#area-100-addins-scrap').multiselect('destroy');
                            $('#area-100-addins-scrap').css('display', 'none');
                        }
                         
                         $('#model100Addins').attr('addins-item', item);
                         $('#model100Addins').attr('addins-item-index', index);

                        $('#model100Addins').modal({ backdrop: 'static', keyboard: false });
                    }
                }
            }
            if ('@Model.STATUS.Trim()' == '@StatusInDB.WaitingForDisposition.Trim()' && '@Model.PERCENT_INSP' == 'True') {
            //tuan lua add atack file cho popup addin
            if (item == '') {
                bootbox.alert('Please select item !', function () {
                    $(vm).val('');
                });
                return;
            }

            let ckfffff = true;
            $('.depositiondrop').each(function (i, e) {
                debugger;
              let  is = i + 1;
                if (is == item && $(e).children().val() != 'G') {
                    if (vm.value != $(e).children().val()) {
                        bootbox.alert('Please check your Disposition!!!');
                        $(vm).val('');
                        ckfffff = false;
                        return;
                    }
                }
                
            })

            if (!ckfffff) return;
            else {
                let itemsave = parseInt(item) - 1;
                let index = vm.parentNode.parentNode.children[6].children[1].getAttribute('dis-item-index');
                let indexdelete = vm.parentNode.parentNode.children[6].children[1].getAttribute('dis-item-index');
                let disp = '', disp_save = '';
                      //  $('#model-or-addins').children().first().next().show();
                         if (vm.value == '@ADDINS.ID_REWORK') {
                        disp = disp_save = 'REWORK';
                        $('#model100Addins').attr('addins-type', 'REWORK');
                    }
                    else if (vm.value == '@ADDINS.ID_SCRAP') {
                        disp = disp_save = 'SCRAP';
                        $('#model100Addins').attr('addins-type', 'SCRAP');
                    }
                    else if (vm.value == '@ADDINS.ID_USEASIS') {
                        disp = 'USE AS IS';
                        disp_save = 'USEASIS';
                        $('#model100Addins').attr('addins-type', 'USEASIS');
                        $('#model-100-addins').children().first().next().hide();
                    }
                     else if (vm.value == '@ADDINS.ID_VENEXP') {
                        disp = 'VEN EXP';
                        disp_save = 'VEN EXP';
                        $('#model100Addins').attr('addins-type', 'VEN EXP');
                        $('#model-100-addins').children().first().next().hide();
                    }
                    else if (vm.value == '@ADDINS.ID_VENMI') {
                        disp = 'VEN MI';
                        disp_save = 'VEN MI';
                        $('#model100Addins').attr('addins-type', 'VEN MI');
                        $('#model-100-addins').children().first().next().hide();
                    }
                      else if (vm.value == '@ADDINS.ID_SALVAGE') {
                        disp = 'SALVAGE';
                        disp_save = 'SALVAGE';
                        $('#model100Addins').attr('addins-type', 'SALVAGE');
                        $('#model-100-addins').children().first().next().hide();
                    }
                     else if (vm.value == '@ADDINS.ID_ACCEPTED') {
                        disp = 'ACCEPTED';
                        disp_save = 'ACCEPTED';
                        $('#model100Addins').attr('addins-type', 'ACCEPTED');
                        $('#model-100-addins').children().first().next().hide();
                    }
                    else if (vm.value == '@ADDINS.ID_SORT100') {
                        disp = 'SORT100';
                        disp_save = 'SORT100';
                        $('#model100Addins').attr('addins-type', 'SORT100');
                        $('#model-100-addins').children().first().next().hide();
                    }
                      else if (vm.value == '@ADDINS.ID_OTHER') {
                        disp = 'OTHER';
                        disp_save = 'OTHER';
                        $('#model100Addins').attr('addins-type', 'OTHER');
                             $('#model-100-addins').children().first().next().hide();

                }
                  else if (vm.value == 'K') {
                        disp = 'SCRAP AND DESTROY';
                        disp_save = 'SCRAP AND DESTROY';
                        $('#model100Addins').attr('addins-type', 'SCRAP AND DESTROY');
                             $('#model-100-addins').children().first().next().hide();

                }
                let newindex = $('#tbody-addin-file tr').length;
                let template = '<tr id="tr-addin-file-template-' + item + '-' + index + '" class="tr-addin-file-active">' +
                    ' <td> <span>' + item + '</span> <input type="hidden" value="' + itemsave + '" name="ADDIN[' + newindex + '].Item" id="addin-item-' + item + '-' + index + '">' +
                    '<input type="hidden" value="0" name="ADDIN[' + newindex + '].IsSave" id="addin-save-' + item + '-' + index + '">' +
                    '<input type="hidden" value="DIS" name="ADDIN[' + newindex + '].Type" id="addin-type-' + item + '-' + index +  '"></td>' +
                    '<td>' +
                    '<span>' + disp_save + '</span>' +
                    '<input type="hidden" value="' + disp_save + '" name="ADDIN[' + newindex + '].Disposition" id=" non-addin-type-' + item + '-' + index +  '"> </td> <td> <span></span>' +
                    '<input onchange="ckFileUpload(this)" hidden="" type="file" accept="application/pdf,application/PDF" class="form-control valid" data-val="true" data-val-maximumfilesize="File Attach can not be larger than 10 MB" data-val-maximumfilesize-size="10" data-val-required="The File Attach field is required." data-val-validfiletype="File Attach must be one of the following file types: pdf,PDF" data-val-validfiletype-filetypes="pdf,PDF" value="" aria-required="true" aria-describedby="FileAttach-error" aria-invalid="false" name="ADDIN[' + newindex + '].FileAttach" style="display:none" id="addin-file-' + item + '-' + index +  '">' +
                    '</td> <td>  <span></span> <input type="hidden" name="ADDIN[' + newindex + '].Message" value="" id="addin-message-' + item + '-' + index +  '" /> </td> </tr> ';
                     if (vm.value == '@ADDINS.ID_REWORK' | vm.value == '@ADDINS.ID_SCRAP' | vm.value == '@ADDINS.ID_USEASIS' | vm.value == '@ADDINS.ID_VENEXP'| vm.value == '@ADDINS.ID_SALVAGE' | vm.value == '@ADDINS.ID_VENMI' | vm.value == '@ADDINS.ID_SORT100' | vm.value == '@ADDINS.ID_ACCEPTED' | vm.value == '@ADDINS.ID_OTHER' | vm.value =='K')  {
                        $('#input-100-addins-text').css('display', '')
                        $('#area-100-addins-scrap').multiselect('destroy');
                         $('#area-100-addins-scrap').css('display', 'none');

                         if (vm.value == '@ADDINS.ID_REWORK') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                             $('#model100Addins').attr('addins-item-index', index);
                             $('#model-100-addins').children().first().next().show();
                            $('#input-100-addins-text').val('');
                        }
                         else if (vm.value == '@ADDINS.ID_SCRAP') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                            $('#input-100-addins-text').css('display', 'none')
                            $('#area-100-addins-scrap').css('display', '');
                             $('#area-100-addins-scrap').multiselect({ dropUp: true, enableFiltering: true, enableCaseInsensitiveFiltering: true, buttonWidth: '100%' });
                             $('#model-100-addins').children().first().next().show();
                            //thieu cai nay k chay dc lol
                             $('#model100Addins').attr('addins-item', item);
                        }
                         else if (vm.value == '@ADDINS.ID_USEASIS') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                        }
                         else if (vm.value == '@ADDINS.ID_VENEXP') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                        }
                         else if (vm.value == '@ADDINS.ID_VENMI') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                        }
                         else if (vm.value == '@ADDINS.ID_ACCEPTED') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                        }
                         else if (vm.value == '@ADDINS.ID_SORT100') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                        }
                         else if (vm.value == '@ADDINS.ID_OTHER') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                        }
                         else if (vm.value == '@ADDINS.ID_SALVAGE') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                         }
                             else if (vm.value == 'K') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                        }
                        else {
                            $('#input-100-addins-text').css('display', '')
                            $('#area-100-addins-scrap').multiselect('destroy');
                            $('#area-100-addins-scrap').css('display', 'none');
                        }
                         
                         $('#model100Addins').attr('addins-item', item);
                         $('#model100Addins').attr('addins-item-index', index);

                        $('#model100Addins').modal({ backdrop: 'static', keyboard: false });
                    }
                }
            }
            if ('@Model.STATUS.Trim()' == '@StatusInDB.WaitingForDispositionApproval.Trim()')
            {
                debugger;
                $('#add-in_table').removeAttr('style');
                if (item == '') {
                    bootbox.alert('Please select item !', function () {
                        $(vm).val('');
                    });
                    return;
                }
                let itemsave = parseInt(item) - 1;
                let index = vm.parentNode.parentNode.children[6].children[0].getAttribute('dis-item-index');
                let indexdelete = vm.parentNode.parentNode.children[6].children[0].getAttribute('dis-item-index');
                let disp = '', disp_save = '';
                      //  $('#model-or-addins').children().first().next().show();
                         if (vm.value == '@ADDINS.ID_REWORK') {
                        disp = disp_save = 'REWORK';
                        $('#model100Addins').attr('addins-type', 'REWORK');
                    }
                    else if (vm.value == '@ADDINS.ID_SCRAP') {
                        disp = disp_save = 'SCRAP';
                        $('#model100Addins').attr('addins-type', 'SCRAP');
                    }
                    else if (vm.value == '@ADDINS.ID_USEASIS') {
                        disp = 'USE AS IS';
                        disp_save = 'USEASIS';
                        $('#model100Addins').attr('addins-type', 'USEASIS');
                        $('#model-100-addins').children().first().next().hide();
                    }
                     else if (vm.value == '@ADDINS.ID_VENEXP') {
                        disp = 'VEN EXP';
                        disp_save = 'VEN EXP';
                        $('#model100Addins').attr('addins-type', 'VEN EXP');
                        $('#model-100-addins').children().first().next().hide();
                    }
                    else if (vm.value == '@ADDINS.ID_VENMI') {
                        disp = 'VEN MI';
                        disp_save = 'VEN MI';
                        $('#model100Addins').attr('addins-type', 'VEN MI');
                        $('#model-100-addins').children().first().next().hide();
                    }
                      else if (vm.value == '@ADDINS.ID_SALVAGE') {
                        disp = 'SALVAGE';
                        disp_save = 'SALVAGE';
                        $('#model100Addins').attr('addins-type', 'SALVAGE');
                        $('#model-100-addins').children().first().next().hide();
                    }
                     else if (vm.value == '@ADDINS.ID_ACCEPTED') {
                        disp = 'ACCEPTED';
                        disp_save = 'ACCEPTED';
                        $('#model100Addins').attr('addins-type', 'ACCEPTED');
                        $('#model-100-addins').children().first().next().hide();
                    }
                    else if (vm.value == '@ADDINS.ID_SORT100') {
                        disp = 'SORT100';
                        disp_save = 'SORT100';
                        $('#model100Addins').attr('addins-type', 'SORT100');
                        $('#model-100-addins').children().first().next().hide();
                    }
                      else if (vm.value == '@ADDINS.ID_OTHER') {
                        disp = 'OTHER';
                        disp_save = 'OTHER';
                        $('#model100Addins').attr('addins-type', 'OTHER');
                        $('#model-100-addins').children().first().next().hide();
                }
                 else if (vm.value == 'K') {
                        disp = 'SCRAP AND DESTROY';
                             disp_save = 'SCRAP AND DESTROY';
                             $('#model100Addins').attr('addins-type', 'SCRAP AND DESTROY');
                        $('#model-100-addins').children().first().next().hide();
                }
                let newindex = $('#tbody-addin-file tr').length;
                let template = '<tr id="tr-addin-file-template-' + item + '-' + index + '" class="tr-addin-file-active">' +
                    ' <td> <span>' + item + '</span> <input type="hidden" value="' + itemsave + '" name="ADDIN[' + newindex + '].Item" id="addin-item-' + item + '-' + index + '">' +
                    '<input type="hidden" value="0" name="ADDIN[' + newindex + '].IsSave" id="addin-save-' + item + '-' + index + '">' +
                    '<input type="hidden" value="DIS" name="ADDIN[' + newindex + '].Type" id="addin-type-' + item + '-' + index +  '"></td>' +
                    '<td>' +
                    '<span>' + disp_save + '</span>' +
                    '<input type="hidden" value="' + disp_save + '" name="ADDIN[' + newindex + '].Disposition" id=" non-addin-type-' + item + '-' + index +  '"> </td> <td> <span></span>' +
                    '<input onchange="ckFileUpload(this)" hidden="" type="file" accept="application/pdf,application/PDF" class="form-control valid" data-val="true" data-val-maximumfilesize="File Attach can not be larger than 10 MB" data-val-maximumfilesize-size="10" data-val-required="The File Attach field is required." data-val-validfiletype="File Attach must be one of the following file types: pdf,PDF" data-val-validfiletype-filetypes="pdf,PDF" value="" aria-required="true" aria-describedby="FileAttach-error" aria-invalid="false" name="ADDIN[' + newindex + '].FileAttach" style="display:none" id="addin-file-' + item + '-' + index +  '">' +
                    '</td> <td>  <span></span> <input type="hidden" name="ADDIN[' + newindex + '].Message" value="" id="addin-message-' + item + '-' + index +  '" /> </td> </tr> ';
                     if (vm.value == '@ADDINS.ID_REWORK' | vm.value == '@ADDINS.ID_SCRAP' | vm.value == '@ADDINS.ID_USEASIS' | vm.value == '@ADDINS.ID_VENEXP'| vm.value == '@ADDINS.ID_SALVAGE' | vm.value == '@ADDINS.ID_VENMI' | vm.value == '@ADDINS.ID_SORT100' | vm.value == '@ADDINS.ID_ACCEPTED' | vm.value == '@ADDINS.ID_OTHER' | vm.value == 'K')  {
                        $('#input-100-addins-text').css('display', '')
                        $('#area-100-addins-scrap').multiselect('destroy');
                         $('#area-100-addins-scrap').css('display', 'none');

                         if (vm.value == '@ADDINS.ID_REWORK') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                             $('#model100Addins').attr('addins-item-index', index);
                             $('#model-100-addins').children().first().next().show();
                            $('#input-100-addins-text').val('');
                        }
                         else if (vm.value == '@ADDINS.ID_SCRAP') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                            $('#input-100-addins-text').css('display', 'none')
                            $('#area-100-addins-scrap').css('display', '');
                             $('#area-100-addins-scrap').multiselect({ dropUp: true, enableFiltering: true, enableCaseInsensitiveFiltering: true, buttonWidth: '100%' });
                             $('#model-100-addins').children().first().next().show();
                            //thieu cai nay k chay dc lol
                             $('#model100Addins').attr('addins-item', item);
                        }
                         else if (vm.value == '@ADDINS.ID_USEASIS') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                        }
                         else if (vm.value == '@ADDINS.ID_VENEXP') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                        }
                         else if (vm.value == '@ADDINS.ID_VENMI') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                        }
                         else if (vm.value == '@ADDINS.ID_ACCEPTED') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                        }
                         else if (vm.value == '@ADDINS.ID_SORT100') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                        }
                         else if (vm.value == '@ADDINS.ID_OTHER') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                        }
                         else if (vm.value == '@ADDINS.ID_SALVAGE') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                         }
                              else if (vm.value == 'K') {
                             if ($('#tr-addin-file-template-' + item + '-' + indexdelete).length === 0) {
                                 $('#tbody-addin-file').append(template);
                             }
                             $('#model100Addins').attr('addins-item', item);
                        }
                        else {
                            $('#input-100-addins-text').css('display', '')
                            $('#area-100-addins-scrap').multiselect('destroy');
                            $('#area-100-addins-scrap').css('display', 'none');
                        }
                         
                         $('#model100Addins').attr('addins-item', item);
                         $('#model100Addins').attr('addins-item-index', index);

                        $('#model100Addins').modal({ backdrop: 'static', keyboard: false });
                    }
                }
            //$('.NCRDETs_disposition ').each(function (i, e) {
            //    console.log($('#' + $(e).attr('id') + ' :selected').text())

            //})

        }

        function changeNCR_DET_DISPOSITION(rowid, selectD) {
            debugger;
            $('#modelRework').attr('disposition-role', '');
            $('#reworkcost-' + rowid).show();
            //setDisbaleRequired();
            let selectid = "#NCRDETs_" + rowid + "__DISPOSITION";
           // setDisbaleRequired();
            ROWID = rowid;
            //GLOBAL_QTY = parseFloat($("input#item_QTY_" + rowid).val());
            if (IsAQL) {
                if ($(selectD).val() !== '@CONFIRMITY_DISPN.ID_DESCRIBE') {
                    $(selectD).val('');
                    bootbox.alert("DISP'N must be DESCRIBE");
                    return;
                }
            }

            if ($(selectid).val().trim() === '@CONFIRMITY_DISPN.ID_REWORK') {
                openModalRework(rowid);
                ResetReMain();
                checkDelAddinsNonDis(rowid);
                return;
            }
            else if ($(selectid).val().trim() === '@CONFIRMITY_DISPN.ID_VENMI') {
                $('#modelAll').attr('disposition-role', 'VENMI');
                ResetReMain();
                openModalAll(rowid);
                checkDelAddinsNonDis(rowid);
                return;
            }
                //tuan lua add reload remain
            else if ($(selectid).val().trim() === '@CONFIRMITY_DISPN.ID_DESCRIBE') {
                RenderAndReloadRemain();
            }
                //else if ($(selectid).val().trim() === '@CONFIRMITY_DISPN.ID_VENEXP'||$(selectid).val().trim() === '@CONFIRMITY_DISPN.ID_VENREP'||$(selectid).val().trim() === '@CONFIRMITY_DISPN.ID_VENCRE') {
			
                    //else if ($(selectid).val().trim() === '@CONFIRMITY_DISPN.ID_VENEXP'||$(selectid).val().trim() === 'A1'||$(selectid).val().trim() === 'A2') {
                    else if ($(selectid).val().trim() === '@CONFIRMITY_DISPN.ID_VENEXP') {
                $('#modelAll').attr('disposition-role', 'VENEXP');
                ResetReMain();
              //  $('#reworkcost-' + rowid).hide();
                openModalAll(rowid);
                checkDelAddinsNonDis(rowid);
                return;
            }
                 else if ($(selectid).val().trim() === 'H') {
                $('#modelAll').attr('disposition-role', 'SCRAP AND DESTROY');
                ResetReMain();
              //  $('#reworkcost-' + rowid).hide();
                openModalAll(rowid);
                checkDelAddinsNonDis(rowid);
                return;
            }
                    else if ($(selectid).val().trim() === '@CONFIRMITY_DISPN.ID_SALVAGE') {
                $('#modelAll').attr('disposition-role', 'SALVAGE');
                ResetReMain();
              //  $('#reworkcost-' + rowid).hide();
                openModalAll(rowid);
                checkDelAddinsNonDis();
                return;
            }
            else if ($(selectid).val().trim() === '@CONFIRMITY_DISPN.ID_USEASIS') {
                $('#modelRework').attr('disposition-role', 'USI');
                $('#reworkcost-' + rowid).hide();
                ResetReMain();
                openModalRework(rowid);
                checkDelAddinsNonDis(rowid);
                return;
            }
            else {
                ResetReworkform(rowid);
            }

            if ($(selectid).val().trim() === '@CONFIRMITY_DISPN.ID_SCRAP') {
                openModalScrap(rowid);
                ResetReMain();
                checkDelAddinsNonDis(rowid);
                return;
            }
            else {
                ResetScrapform(rowid);
            }

        }

        function checkDelAddinsNonDis(rowid) {
            
            //chech dis delete addins
            @*if ($(selectid).val().trim() !== '@CONFIRMITY_DISPN.ID_DESCRIBE') {
                var iddel = rowid + 1;
                $('.tr-addins-item-' + iddel).each(function (i, e) {
                    $(e).remove();
                });
            }*@

            var iddel = rowid + 1;
            $('.tr-addins-item-' + iddel).each(function (i, e) {
                $(e).remove();
            });
        }

        function ResetReworkform(i) {
            if (i !== undefined) {
                // var btnupload = $('#non-confirmity-rework-' + i).children().first().children().next().children();
                var txtmessage = $('#non-confirmity-rework-' + i).children().first().next().children().next().children();
                    $('#non-confirmity-save-' + i).val('0');
                    $('#non-confirmity-type-' + i).val('');
                    $('#non-confirmity-file-' + i).val('');
                    $('#non-confirmity-message-' + i).val('');
                    $('#tr-non-confirmity-file-' + i).hide();
                    txtmessage.val('');
                    console.log(txtmessage);
            }
            else {
                $('.NCRDETs_disposition').each(function (i, e) {
                    if ($(e).val() === '@CONFIRMITY_DISPN.ID_REWORK' || $(e).val() === '@CONFIRMITY_DISPN.ID_USEASIS') {
                        $('#non-confirmity-save-' + i).val('0');
                        $('#non-confirmity-type-' + i).val('');
                        $('#non-confirmity-file-' + i).val('');
                        $('#non-confirmity-message-' + i).val('');
                        $('#tr-non-confirmity-file-' + i).hide();
                    }
                })
            }
        }

        function ResetScrapform(i) {
            //$('#area-non-confirmity-scrap').val('');
            if (i !== undefined) {
                // var btnupload = $('#non-confirmity-rework-' + i).children().first().children().next().children();
                $('#non-confirmity-save-' + i).val('0');
                $('#non-confirmity-type-' + i).val('');
                $('#non-confirmity-file-' + i).val('');
                $('#non-confirmity-message-' + i).val('');
                $('#tr-non-confirmity-file-' + i).hide();
            }
            else {
                $('.NCRDETs_disposition').each(function (i, e) {
                    if ($(e).val() === '@CONFIRMITY_DISPN.ID_SCRAP') {
                        $('#non-confirmity-save-' + i).val('0');
                        $('#non-confirmity-type-' + i).val('');
                        $('#non-confirmity-file-' + i).val('');
                        $('#non-confirmity-message-' + i).val('');
                        $('#tr-non-confirmity-file-' + i).hide();
                    }
                });
            }
        }



        function C_DeleteAddins(t) {
            let tr = $(t).parent().parent();
            //console.log(tr);
            tr.remove();
        }
        function ResetReMain() {
            $('tbody#append-data-remain').html("");
        }
        function RenderAndReloadRemain() {
            debugger;
            if (IsAQL) return;
            $('tbody#append-data-remain').html('');
            // '<tr> <td>1</td> <td>10</td> </tr>';
            let str = '';
            $('tbody#tbody-NCRDETs tr').each(function (i, e) {
                debugger;
                let item = 0;
                let itemhtml = $(e).children().first().text().trim();
                let iqty = parseFloat( $(e).children().first().next().text().trim());
                let qtyofi = 0;
                let disp = $(e).children().last().children();
                let approval = $(e).children().last().children()[1].outerText;
                if ('@Model.STATUS.Trim()' === '@StatusInDB.WaitingForDisposition.Trim()') {
                if (disp.val() === '@CONFIRMITY_DISPN.ID_DESCRIBE' @*|| disp.val() === '@CONFIRMITY_DISPN.ID_TBD'*@) {
                    $('.tr-NCRDIS-unactive').each(function (i, e) {
                        let ckitem = $(e).children().first().children().val();
                        if (ckitem === itemhtml) {
                            let ckqty = $(e).children().first().next().children().val();
                            qtyofi += parseFloat(ckqty);
                        }
                    });
                    if (iqty > qtyofi) {
                        str += '<tr> <td>' + itemhtml + '</td> <td>' + (iqty - qtyofi).toString() + '</td> </tr>';
                    }
                }
                }
                @*if ('@Model.STATUS.Trim()' == '@StatusInDB.WaitingForDispositionApproval.Trim()') {
                    if (approval === 'DESCRIBE' ) {
                        $('.tr-NCRDIS-old').each(function (i, e) {
                            let ckitem = $(e).children().first().children()[0].attributes.length;
                        if (ckitem  === itemhtml) {
                            let ckqty = $(e).children().first().next().children().val();
                            qtyofi += parseFloat(ckqty);
                        }
                    });
                    if (iqty > qtyofi) {
                        str += '<tr> <td>' + itemhtml + '</td> <td>' + (iqty - qtyofi).toString() + '</td> </tr>';
                    }
                }
                }*@


            });

            $('tbody#append-data-remain').html(str);
        }

        function fnScrapUploadfile(btn) {
            let rowid = $(btn).attr('det-item');
            $('#non-confirmity-file-' + rowid).trigger('click')
        }

    </script>
    <!--END Waiting for Disposition-->
    <!--BEGIN Waiting for Disposition Approval-->
    <script>

        var ncrDis_old_qty_old = '';
        var ncrDis_old_remark_old = '';
        function EditNCRDISsForApproval(btn) {
            let role = $(btn).attr('btn-role');

            if (role === "edit") {
                let qty = $(btn).parent().prev().prev().prev().prev().prev().children();
                let remark = $(btn).parent().prev().prev().prev().children('textarea');
                $(btn).parent().prev().prev().prev().children('span').hide();
                remark.attr('disabled', false);
                remark.removeClass('display-none');
                qty.attr('disabled', false);
                $(btn).attr('btn-role', 'save')
                $(btn).text('Save');

                ncrDis_old_qty_old = qty.val();
                ncrDis_old_remark_old = remark.val();

                $(btn).next().text('Cancel');
                $(btn).next().attr('btn-role', 'cancel');
            }
            else if (role === "save") {
                              let qty = $(btn).parent().prev().prev().prev().prev().prev().children();
                let remark = $(btn).parent().prev().prev().prev().children('textarea');
                let Id = $(btn).attr('ncrdis-id');
                let qtysave = qty.val();
                let remarksave = remark.val();
                let check = true;

                if (parseFloat(qtysave) == NaN | parseFloat(qtysave) <= 0) {
                    check = false;
                    bootbox.alert('Please input QTY');
                    return;
                }

                if (check) {
                    console.log('edit EditAddIns');

                    $.blockUI();
                        $.post('@Url.Action("EditAddIns", "NCRApproval")',
                        {
                            ncrnum: $("#NCR_NUM").val(),
                            item: Id,
                            qty: qtysave,
                            remark: remarksave
                        },
                        function(data) {
                            if (data.success) {
                                bootbox.alert("Edit ADDITIONALS INSTRUCTIONS Success", function () {
                                    window.location.reload();
                                });
                            } else {
                                bootbox.alert(data.message);
                            }
                        }).fail(function() {
                            bootbox.alert('Please contact to Administrator!');
                        }).always(function() {
                            $.unblockUI();
                        });
                }
            }

        }

        function DeleteNCRDISsForApproval(btn) {
            let role = $(btn).attr('btn-role');
            let qty = $(btn).parent().prev().prev().prev().prev().prev().children();
            let remark = $(btn).parent().prev().prev().prev().children('textarea');

            if (role === 'cancel') {
                remark.val(ncrDis_old_remark_old);
                qty.val(ncrDis_old_qty_old);

                $(btn).parent().prev().prev().prev().children('span').show();
                remark.addClass('display-none');
                remark.attr('disabled', true);
                qty.attr('disabled', true);

                ncrDis_old_qty_old = '';
                ncrDis_old_remark_old = '';
            }
            else {
                let Id = $(btn).attr('ncrdis-id');
                bootbox.confirm("Are you sure to delete ?",
                    function (result) {
                        if (result) {
                            console.log('request delete add ins');
                             $.blockUI();
                            $.post('@Url.Action("DeleteAddIns", "NCRApproval")',
                                {
                                    ncrnum: $("#NCR_NUM").val(),
                                    item: Id
                                },
                                function (data) {
                                    if (data.success) {
                                        bootbox.alert("Delete ADDITIONALS INSTRUCTIONS Success", function () {
                                            window.location.reload();
                                        });
                                    } else {
                                        bootbox.alert(data.message);
                                    }
                                }).fail(function () {
                                    bootbox.alert('Please contact to Administrator!');
                                }).always(function () {
                                    $.unblockUI();
                                });
                        }
                    });
            }
        }

        function getpass(vm) {
            let id = $(vm).attr('aid');
            let actn = $(vm).attr('actn');
            let approverId = $(vm).attr('approverId');
            let fullname = $(vm).attr('fullname');

            if ($('#pass').val() === undefined | $('#pass').val() === null | $('#pass').val() === '') {
                bootbox.alert('Please input password');
            }
            else {
                if (actn === 'appr') {
                    $.blockUI();
                $.post('@Url.Action("Approve", "NCRApproval")',
                    {
                        Id: id,
                        NCRNUM: $("#NCR_NUM").val(),
                        ApproverId: approverId,
                        password: $('#pass').val()
                    },
                    function (data) {
                        if (data.success) {
                            bootbox.alert("Approver " + fullname + " approve successful", function () {
                                window.location.reload();
                            });
                        } else {
                            bootbox.alert(data.message);
                        }
                    }).fail(function () {
                        bootbox.alert('Please contact to Administrator!');
                    }).always(function () {
                        $.unblockUI();
                        $('#modelpassword').modal('hide');
                        });

                    return;
                }
                else if (actn === 'rejt') {
                    Reject(id, approverId, false);
                }
                else if (actn === 'reass') {
                    let roleid = $('#btn-ok-pass').attr('roleid');
                    ReAssign(roleid, approverId, id, false);
                }
                else if (actn === 'rejtEng') {
                    RejectEng(id, approverId, false);
                }
                else if (actn === 'reassEng') {
                    let roleid = $('#btn-ok-pass').attr('roleid');
                    ReAssignEng(roleid, approverId, id, false);
                }
            }
        }

        function Approve(id, approverId, fullname) {
            if (approverId !== IdUser) {
                $('#pass').val('');
                $('#btn-ok-pass').attr('aid', id);
                $('#btn-ok-pass').attr('approverId', approverId);
                $('#btn-ok-pass').attr('fullname', fullname);
                $('#btn-ok-pass').attr('actn', 'appr');
                $('#modelpassword').modal('show');
                return;
            }

            $.blockUI();
            $.post('@Url.Action("Approve", "NCRApproval")',
                {
                    Id: id,
                    NCRNUM: $("#NCR_NUM").val(),
                    ApproverId: approverId,
                    password: $('#pass').val()
                },
                function (data) {
                    if (data.success) {
                        bootbox.alert("Approver " + fullname + " approve successful", function () {
                            window.location.reload();
                        });
                    } else {
                        bootbox.alert(data.message);
                    }
                }).fail(function () {
                    bootbox.alert('Please contact to Administrator!');
                }).always(function () {
                    $.unblockUI();
                });
        }

        function Reject(id, approverid, check) {
            if (IdUser !== approverid & check === true) {
                $('#pass').val('');
                $('#btn-ok-pass').attr('aid', id);
                $('#btn-ok-pass').attr('approverId', approverid);
                $('#btn-ok-pass').attr('actn', 'rejt');
                $('#modelpassword').modal('show');
                return;
            }
            $('#model-approval-reject').attr('approver-id', approverid);
            $('#model-approval-reject').attr('aid', id);
            $('#txt-model-approval-reject').val('');
            $('#model-approval-reject').modal('show');
        }

        function SubmitReject() {
            let approverId = $('#model-approval-reject').attr('approver-id');
            let id = $('#model-approval-reject').attr('aid');
            let reason = $('#txt-model-approval-reject').val();

            if (reason === '') {
                bootbox.alert('The reason of reject NCR is required');
                return;
            }

            $.blockUI();
            $.post('@Url.Action("RejectNCR", "NCRApproval")',
                {
                    Id: id,
                    NCRNUM: $("#NCR_NUM").val(),
                    ApproverId: approverId,
                    reason: reason,
                    password: $('#pass').val()
                },
                function (data) {
                    if (data.success) {
                        bootbox.alert("Reject NCR " + $("#NCR_NUM").val() + " successful", function () {
                            window.location.reload();
                        });
                    } else {
                        bootbox.alert(data.message, function (){
                            window.location.reload();
                        });
                    }
                }).fail(function () {
                    bootbox.alert('Please contact to Administrator!');
                }).always(function () {
                    $.unblockUI();
                });
        }

        function ReAssign(roleid, uid, id, check) {
            //tuan lua add role chairmain thi dc reassign
              let IsWHMRB = '@ViewBag.IsWHMRB';
            let ischarmain = '@ViewBag.IsChairm';
            if (IdUser !== uid & check === true && ischarmain === 'False' && IsWHMRB == 'False') {
                $('#model-approval-reassign').attr('aid', id);
                $('#pass').val('');
                $('#btn-ok-pass').attr('aid', id);
                $('#btn-ok-pass').attr('approverId', uid);
                $('#btn-ok-pass').attr('actn', 'reass');
                $('#btn-ok-pass').attr('roleid', roleid);
                $('#modelpassword').modal('show');

                return;
            }
            $('#model-approval-reassign').attr('aid', id);
            $('#btn-ok-pass').attr('approverId', uid);
            $.blockUI();
            $.get('@Url.Action("GetUserByRole", "NCRApproval")',
                {
                    role: roleid,
                    ncrnum: '@Model.NCR_NUM.Trim()'
                })
                .success(function (data) {
                    $('#sl-model-approval-reassign').multiselect({ dropUp: true, enableFiltering: true, enableCaseInsensitiveFiltering: true, buttonWidth: '100%' });
                    $('#sl-model-approval-reassign').multiselect('dataprovider', data);
                    $('#txt-model-approval-reassign').val('');
                    $('#model-approval-reassign').modal('show');
                }).fail(function () {
                    bootbox.alert('Please contact to Administrator!');
                }).always(function () {
                    $.unblockUI();
                });
            //model-approval-reassign
        }

        function SubmitAssign() {
            debugger;
            let approverId = $('#sl-model-approval-reassign').val();
            let id = $('#model-approval-reassign').attr('aid');
            let reason = $('#txt-model-approval-reassign').val();
            //$('#append-data-approver tr').each(function (i, e) {
            //    if ($(e).children().first().children().first().children().first().val() === IdUser) {
            //        bootbox.alert('Duplicate Approver, please select other!');
            //        return;
            //    }
            //});
            if (approverId === '') {
                bootbox.alert('The New Signer is required');
                return;
            }
            if (reason === '') {
                bootbox.alert('The reason of re-assign is required!!');
                return;
            }
            //$('#model-approval-reassign').attr('aid', id);
            $.blockUI();
            $.post('@Url.Action("AssignNCR", "NCRApproval")',
                {
                    Id: id,
                    NCRNUM: $("#NCR_NUM").val(),
                    ApproverId: approverId,
                    oldApproverId: $('#btn-ok-pass').attr('approverId'),
                    reason: reason,
                    password: $('#pass').val()
                })
                .success(function (data) {
                    if (data.success) {
                        bootbox.alert("Re-Assign NCR successful", function () {
                            window.location.reload();
                        });
                    } else {
                        bootbox.alert(data.message, function () {
                            window.location.reload();
                        });
                    }
                }).fail(function () {
                    bootbox.alert('Please contact to Administrator!');
                }).always(function () {
                    $.unblockUI();
                });
        }

    </script>
    <!--END Waiting for Disposition Approval-->
    <!--BEGIN ALL-->
    <script>
        function SetUnactive(tr) {
            tr.children().first().children().attr('disabled', true);
            tr.children().first().next().children().attr('readonly', true);
            tr.children().first().next().next().children().attr('disabled', true);
            tr.children().first().next().next().next().children().attr('readonly', true);
            tr.children().first().next().next().next().next().children().attr('disabled', true);
        }
        function isNormalInteger(e) {

            reg = /^-?\d+\.?\d*$/;
            if (!reg.test(e)) {
                return false;
            }
            if (parseFloat(e) <= 0) return false;
            return true;
            //var n = Math.floor(Number(str));
            //return n !== Infinity && String(n) === str && n >= 0;
            //return Number(n) === parseFloat(n);
        }
        function addNewRaw(vm) {
            debugger;
            let newtr = $($(vm).prev().prev()).find('tr:last');
            let item = $(newtr).children().first().children();
            let qty = $(newtr).children().first().next().children();
            let select = $(newtr).children().first().next().next().children();
            //let insp = $(newtr).children().first().next().next().next().next().children(); //not use multiselect bootstrap
            let insp = $(newtr).children().first().next().next().next().next().children().children();

            let tmpqty = parseFloat(qty.val());
            if (isNormalInteger(qty.val()) === false) {
                bootbox.alert('Please input  QTY !');
                tmpqty = 0;
                return;
            } 
            if (item.val() === '') {
                bootbox.alert('Please select ITEM');
                return;
            }
            else if (parseFloat(qty.val()) <= 0 | tmpqty <= 0) {
                bootbox.alert('Please input QTY');
                return;
            }
            else if (select.val() === '' || select.val() === null) {
                bootbox.alert('Please select ADDITIONALS INSTRUCTIONS');
                return;
            }
            else if (insp.val() === '' | insp.val() === null) {
                bootbox.alert('Please select INSP ');
                return;
            }


            $($(vm).prev().prev()).find('tr:last').toggleClass('tr-NCRDIS-active');
            $($(vm).prev().prev()).find('tr:last').toggleClass('tr-NCRDIS-unactive');

            var status = '@Model.STATUS';
            var DEFECTIVE = parseFloat('@Model.defect');
            var REJECTED = parseFloat('@Model.REJ_QTY');

            if (status.trim() === '@StatusInDB.WaitingForDisposition') {
                if ($('#btn-ok-c').hasClass('disabled')) return;
                if ($('button#bt-add').hasClass('disabled')) return;
                debugger;
                let btdelete = newtr[0].children[6].children[1];
                btdelete.setAttribute('style', 'display:none');
                $(item).attr('disabled', true);
                $(qty).attr('disabled', true);
                $(select).attr('disabled', true);
                $($(newtr).children().first().next().next().next().children()).attr('disabled', true);
                //$(insp).attr('disabled', true);

                $('#' + insp[0].id).multiselect('disable');
                newtr.addClass('tr-addins-item-' + item.val());
               // add_raw_addins_onchange(select.get(0));
                RenderAndReloadRemain();
            }

            //add luc da disposition

            if (status.trim() === '@StatusInDB.WaitingForDispositionApproval') {
                debugger;
                //tuanlua add;
                let qtyadd = 0;
                $('.tr-NCRDIS-old').each(function (i, e) {
                    let selectitem = $(e).children().first().children();
                    let selectitem_qty = $(e).children().first().next().children();
                    qtyadd += parseFloat($(selectitem_qty).val());
                });
                $('.tr-NCRDIS-unactive').each(function (i, e) {
                    let selectitem = $(e).children().first().children();
                    let selectitem_qty = $(e).children().first().next().children();
                    qtyadd += parseFloat($(selectitem_qty).val());

                });
                if (qtyadd > DEFECTIVE) {
                    $($(vm).prev().prev()).find('tr:last').toggleClass('tr-NCRDIS-active');
                    $($(vm).prev().prev()).find('tr:last').toggleClass('tr-NCRDIS-unactive');
                    bootbox.alert("Please check qty!");
                    return;
                }
                else {
                    let tr = $('#append-data-NCRDISs tr').last();
                    let item = tr[0].cells[0].children[0].value;
                    let index = tr[0].cells[6].children[0].attributes[4].value;
                   //var formData = new FormData();
                    debugger;
                    let check = $('#tbody-addin-file tr').length;
                    if (check > 0) {
                        let tr1 = $('#tbody-addin-file tr').children().children();
                        let filesave = $('#addin-file-' + item + '-' + index).get(0).files;
                        let name = '';
                        if (filesave.length > 0) {
                             name = filesave[0].name;
                        }
                        let Item = tr1.children().prevObject[1].value;
                        let Isave = tr1.children().prevObject[2].value;
                        let IsType = tr1.children().prevObject[3].value;
                        let disposition = tr1.children().prevObject[5].value;
                        let file = tr1.children().prevObject[7].value;
                        let massage = tr1.children().prevObject[9].value;
                        //formData.append('Item', Item);
                        //formData.append("Isave", Isave);
                        //formData.append("IsType", IsType);
                        //formData.append("Disposition", disposition);
                        //formData.append("FileAttach", filesave[0]);
                        //formData.append("Message", massage);
                        //var Oderdisposition = [{

                        //    ITEM: Item,
                        //    Isave: Isave,
                        //    IsType: IsType,
                        //    TypeOfDisposition: disposition,
                        //    FileName: file,
                        //    COST: massage,
                        //}];
                        //   var Datas = Oderdisposition;
                      
                        var formData = new FormData();
                        formData.append("file", filesave[0]); 
                      //  formData.get('file');
                        if (name != '') {
                        $.ajax({ url: '@Url.Action("SaveFileADDIN", "NCRApproval")', method: 'post', data: formData, contentType: false, processData: false })
                        }
                         $.post('@Url.Action("AddNewADDIns", "NCRApproval")',
                    {
                        NCRNUM: $("#NCR_NUM").val(),
                        ITEM: $(tr).children().first().children().val(),
                        QTY: $(tr).children().first().next().children().val(),
                        ADDINS: $(tr).children().first().next().next().children().val(),
                        Remark: $(tr).children().first().next().next().next().children().val(),
                        INSP: $(tr).children().first().next().next().next().next().children().children().val(),
                        OrDISPO: disposition,
                        OrFile: name,
                        OrMessage: massage
                    },
                    function (data) {
                        if (data.success) {
                            bootbox.alert("Add successful", function () {
                                window.location.reload();
                            });
                        } else {
                            bootbox.alert(data.message, function (){
                                window.location.reload();
                            });
                        }
                    }).fail(function () {
                        bootbox.alert('Please contact to Administrator!', function () {
                            window.location.reload();
                        });
                    }).always(function () {
                        $.unblockUI();
                        });
                    }
                    else {

                $.post('@Url.Action("AddNewADDIns", "NCRApproval")',
                    {
                        NCRNUM: $("#NCR_NUM").val(),
                        ITEM: $(tr).children().first().children().val(),
                        QTY: $(tr).children().first().next().children().val(),
                        ADDINS: $(tr).children().first().next().next().children().val(),
                        Remark: $(tr).children().first().next().next().next().children().val(),
                        INSP: $(tr).children().first().next().next().next().next().children().children().val(),
                    },
                    function (data) {
                        if (data.success) {
                            bootbox.alert("Add successful", function () {
                                window.location.reload();
                            });
                        } else {
                            bootbox.alert(data.message, function (){
                                window.location.reload();
                            });
                        }
                    }).fail(function () {
                        bootbox.alert('Please contact to Administrator!', function () {
                            window.location.reload();
                        });
                    }).always(function () {
                        $.unblockUI();
                        });
                    }
                }

            }
            $(vm).toggleClass('display-none');
            $(vm).prev().toggleClass('display-none');

        }

        function closencr() {
            let ncr_num = '@Model.NCR_NUM';
            bootbox.confirm({
                message: "Are you sure want to Close?",
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-danger'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-success'
                    }
                },
                callback: function (result) {
                    if (result) {
                        $.blockUI();
                        $.get('@Url.Action("CloseNCR", "NCRApproval")',
                        {
                            NCR_NUM: ncr_num,
                        },
                        function(data) {
                            if (!data.res) {
                                bootbox.alert("Close NCR " + ncr_num + " successful !", function () { window.location.reload(); });
                            } else {
                                bootbox.alert("NCR " + ncr_num + " exsits task in task managerment !");
                            }
                        }).fail(function() {
                            bootbox.alert('Please contact to Administrator!');
                        }).always(function() {
                            $.unblockUI();
                        });
                    }
                }
            });

        }

        function keypress(e) {
            let n = $(e).val();
            reg = /^-?\d+\.?\d*$/;
            if (!reg.test(n)) {
                $(e).val('');
            }
        }
        //tuanlua add:16/1/2019
        //reject WH
        $('#btn-reject').click(function () {
            $('#txt-model-approval-rejectWH').val('');
            $('#model-approval-rejectWH').modal('show');
        });
        //
         function SubmitRejectWH() {
            let reason = $('#txt-model-approval-rejectWH').val();

            if (reason === '') {
                bootbox.alert('The reason of reject NCR is required');
                return;
            }

            $.blockUI();
            $.post('@Url.Action("RejectNCRWH", "NCRApproval")',
                {
                    NCRNUM: $("#NCR_NUM").val(),
                    reason: reason,
                },
                function (data) {
                    if (data.success) {
                        bootbox.alert("Reject NCR " + $("#NCR_NUM").val() + " successful", function () {
                            window.location.reload();
                        });
                    } else {
                        bootbox.alert(data.message, function (){
                            window.location.reload();
                        });
                    }
                }).fail(function () {
                    bootbox.alert('Please contact to Administrator!');
                }).always(function () {
                    $.unblockUI();
                });
        }
        //reject Eng
        function RejectEng(id, approverid, check) {
            if (IdUser !== approverid & check === true) {
                $('#pass').val('');
                $('#btn-ok-pass').attr('aid', id);
                $('#btn-ok-pass').attr('approverId', approverid);
                $('#btn-ok-pass').attr('actn', 'rejtEng');
                $('#modelpassword').modal('show');
                return;
            }
            $('#model-approval-rejectEng').attr('approver-id', approverid);
            $('#model-approval-rejectEng').attr('aid', id);
            $('#txt-model-approval-rejectEng').val('');
            $('#model-approval-rejectEng').modal('show');
        }
          function SubmitRejectEng() {
            let approverId = $('#model-approval-rejectEng').attr('approver-id');
            let id = $('#model-approval-rejectEng').attr('aid');
            let reason = $('#txt-model-approval-rejectEng').val();

            if (reason === '') {
                bootbox.alert('The reason of reject NCR is required');
                return;
            }

            $.blockUI();
            $.post('@Url.Action("RejectNCREng", "NCRApproval")',
                {
                    Id: id,
                    NCRNUM: $("#NCR_NUM").val(),
                    ApproverId: approverId,
                    reason: reason,
                    password: $('#pass').val()
                },
                function (data) {
                    if (data.success) {
                        bootbox.alert("Reject NCR " + $("#NCR_NUM").val() + " successful", function () {
                            window.location.reload();
                        });
                    } else {
                        bootbox.alert(data.message, function (){
                            window.location.reload();
                        });
                    }
                }).fail(function () {
                    bootbox.alert('Please contact to Administrator!');
                }).always(function () {
                    $.unblockUI();
                });
        }
        //reasign Enginerr
        function ReAssignEng(roleid, uid, id, check) {
            let IsWHMRB = '@ViewBag.IsWHMRB';
            let ischairmain = '@ViewBag.IsChairm';
            if (IdUser !== uid & check === true && ischairmain == 'False' && IsWHMRB == 'False') {
                $('#model-approval-reassignEng').attr('aid', id);
                $('#pass').val('');
                $('#btn-ok-pass').attr('aid', id);
                $('#btn-ok-pass').attr('approverId', uid);
                $('#btn-ok-pass').attr('actn', 'reassEng');
                $('#btn-ok-pass').attr('roleid', roleid);
                $('#modelpassword').modal('show');
                return;
            }
            $('#model-approval-reassignEng').attr('aid', id);
            $('#btn-ok-pass').attr('approverId', uid);
             $.blockUI();
                  let roleidnew = $('role-new').val();
                $.get('@Url.Action("GetUserByRoleWaittingdispo", "NCRApproval")',
                    {
                        role: roleid,
                        ncrnum: '@Model.NCR_NUM.Trim()'
                    })
                    .success(function (data) {
                        $('#sl-model-approval-reassignEng').multiselect({ dropUp: true, enableFiltering: true, enableCaseInsensitiveFiltering: true, buttonWidth: '100%' });
                        $('#sl-model-approval-reassignEng').multiselect('dataprovider', data);
                        $('#txt-model-approval-reassignEng').val('');
                        $('#model-approval-reassignEng').modal('show');
                    }).fail(function () {
                        bootbox.alert('Please contact to Administrator!');
                    }).always(function () {
                        $.unblockUI();
                    });
            $('#role-new').on('change', function () {
                $.blockUI();
                  let roleidnew = $('#role-new').val();
                $.get('@Url.Action("GetUserByRoleWaittingdispo", "NCRApproval")',
                    {
                        role: roleidnew,
                        ncrnum: '@Model.NCR_NUM.Trim()'
                    })
                    .success(function (data) {
                        $('#sl-model-approval-reassignEng').multiselect({ dropUp: true, enableFiltering: true, enableCaseInsensitiveFiltering: true, buttonWidth: '100%' });
                        $('#sl-model-approval-reassignEng').multiselect('dataprovider', data);
                        $('#txt-model-approval-reassignEng').val('');
                        $('#model-approval-reassignEng').modal('show');
                    }).fail(function () {
                        bootbox.alert('Please contact to Administrator!');
                    }).always(function () {
                        $.unblockUI();
                    });
            });
            }
          
        function SubmitAssignEng() {
            let approverId = $('#sl-model-approval-reassignEng').val();
            let id = $('#model-approval-reassignEng').attr('aid');
            let reason = $('#txt-model-approval-reassignEng').val();
            let roleid = $('#role-new').val();
            if (approverId === '') {
                bootbox.alert('The New Signer is required');
                return;
            }
            if (reason === '') {
                bootbox.alert('The reason of re-assign is required!!');
                return;
            }
            //$('#model-approval-reassign').attr('aid', id);
            $.blockUI();
            $.post('@Url.Action("AssignNCREng", "NCRApproval")',
                {
                    Id: id,
                    NCRNUM: $("#NCR_NUM").val(),
                    ApproverId: approverId,
                    oldApproverId: $('#btn-ok-pass').attr('approverId'),
                    reason: reason,
                    password: $('#pass').val(),
                    roleid: roleid
                })
                .success(function (data) {
                    if (data.success) {
                        bootbox.alert("Re-Assign NCR successful", function () {
                            window.location.reload();
                        });
                    } else {
                        bootbox.alert(data.message, function () {
                            window.location.reload();
                        });
                    }
                }).fail(function () {
                    bootbox.alert('Please contact to Administrator!');
                }).always(function () {
                    $.unblockUI();
                });
        }


        //handle all
        function openModalAll(rowid) {
            debugger;
            //reset form
            let ireset = 0;
            $('.div-non-confirmity-all').each(function (e, i) {
                if (ireset != rowid) {
                    $('#non-confirmity-all-' + ireset).hide();
                }
                ireset++;
            })

            if ($('#modelAll').attr('disposition-role') === 'VENEXP') {
                $('#txt-all-btnupload-text-' + rowid).text('Attach File');
                $('#non-confirmity-type-' + rowid).val('VEN EXP');
                $('#non-confirmity-type-' + rowid).prev().text('RETURN TO VEN DOR VEN EXP');
            }
            else if ($('#modelAll').attr('disposition-role') === 'VENMI') {
                $('#txt-all-btnupload-text-' + rowid).text('Attach File');
                $('#non-confirmity-type-' + rowid).val('VEN MI');
                $('#non-confirmity-type-' + rowid).prev().text('RETURN TO VEN DOR MI EXP');

            }
            else if ($('#modelAll').attr('disposition-role') === 'SCRAP AND DESTROY') {
                $('#txt-all-btnupload-text-' + rowid).text('Attach File');
                $('#non-confirmity-type-' + rowid).val('SCRAP AND DESTROY');
                $('#non-confirmity-type-' + rowid).prev().text('SCRAP AND DESTROY');

            }
            else if ($('#modelAll').attr('disposition-role') === 'SALVAGE') {
                $('#txt-all-btnupload-text-' + rowid).text('Attach File');
                $('#non-confirmity-type-' + rowid).val('SALVAGE');
                $('#non-confirmity-type-' + rowid).prev().text('SALVAGE');

            }

            else {
                $('#non-confirmity-type-' + rowid).val('REWORK');
                $('#non-confirmity-type-' + rowid).prev().text('REWORK');
                $('#txt-all-btnupload-text-' + rowid).text('Attach “Rework Instruction”');
            }


            $('#non-confirmity-file-' + rowid).prev().text('');
            $('#btn-all-form-OK').attr('ncr-det', rowid);
            $('#btn-all-form-Cancel').attr('ncr-det', rowid);
            $('#tr-non-confirmity-file-' + rowid).show();
            $('#non-confirmity-all-' + rowid).show();
            $("#modelAll").modal({ backdrop: 'static', keyboard: false });
        }
        //file close
        $('#btn-all-form-Cancel').click(function (e) {
            let rowid = $(this).attr('ncr-det');
            $('#tr-non-confirmity-file-' + rowid).hide();
            //removeRework();
            $('#btn-rework-form-OK').attr('ncr-det', '');
            $('#btn-rework-form-Cancel').attr('ncr-det', '');
          //  $('#NCRDETs_' + rowid + '__DISPOSITION').val('');
            $('#non-confirmity-type-' + rowid).val('');
            $('#modelAll').modal('hide');
            $('#non-confirmity-rework-' + rowid).hide();
            ResetReworkform(rowid);
        });
       // file ok
        $('#btn-all-form-OK').click(function (e) {
            e.preventDefault();
            let rowid = $(this).attr('ncr-det');
            let fullPath = document.getElementById('non-confirmity-file-' + rowid).value;
            let filename = "";
            if (fullPath) {
                let startIndex = (fullPath.indexOf('\\') >= 0 ? fullPath.lastIndexOf('\\') : fullPath.lastIndexOf('/'));
                filename = fullPath.substring(startIndex);
                if (filename.indexOf('\\') === 0 || filename.indexOf('/') === 0) {
                    filename = filename.substring(1);
                }
                console.log(filename);
                $('#non-confirmity-file-' + rowid).prev().text(filename);
            }
            if (filename === '' & $('#modelAll').attr('disposition-role') === 'VENMI') {
                bootbox.alert('Missing File');
                return;
            }
            if (filename === '' & $('#modelAll').attr('disposition-role') === 'VENEXP') {
                bootbox.alert('Missing File');
                return;
            }
            if (filename === '' & $('#modelAll').attr('disposition-role') === 'SALVAGE') {
                bootbox.alert('Missing File');
                return;
            }
            if (filename === '') {
                bootbox.alert('Missing File');
                return;
            }
          //  $('#non-confirmity-message-' + rowid).prev().text($('#non-confirmity-message-' + rowid).val());
            $('#non-confirmity-rework-' + rowid).hide();
            $('#modelAll').modal('hide');
        });


        function addclassslitem(e) {
            debugger;
            let val = $(e).val()
            $(e).attr('class', '');
            $(e).addClass('form-control sl-dis-item-' + val);
            let btndel = $(e).parent().parent().children().last().children();
            let idex = $('.sl-dis-item-' + val).length -1;
            btndel.attr('dis-item-index', idex);
        }
        function Checkvalidateqty(e) {
            let qty = $(e).val();
            if (isNormalInteger(qty) == false) {
                bootbox.alert("Please input qty correct!!!");
                $(e).val('');
            }
        }
    </script>
    <!--END ALL-->
    <!--BEGIN TaskDetail-->
    <script>
        var mygrid = $("#gridTaskDetail").kendoGrid({
            selectable: true
        });
        //select row data catch status
        mygrid.on("click", ".ClickGrid", function () {
            var grid = $("#gridTaskDetail").data("kendoGrid");
            var selectedItem = grid.dataItem(grid.select());
            var Task = selectedItem.TaskDetail.TaskID;

            @*window.location = '@Url.Action("EditTaskManagementNcr", "TaskManagement")' + "?taskID=" + Task;*@
            //tuan lua
              window.open('@Url.Action("EditTaskManagementNcr", "TaskManagement")' + "?taskID=" + Task,'_blank');
        });
    </script>
    <!--END TaskDetail-->
}
<script>
    $("#gridChangeitemNCR").on("click", ".history", function (e) {
        var grid = $("#gridChangeitemNCR").data("kendoGrid");
        var model = grid.dataItem($(e.target).closest("tr"));
        var NCR_NUM = model.REF_NUM;
        var CRNO = model.CRNo;
        var status = model.CRStatus;
        if (status.trim() =='Acknowledged') {
                    window.open('@Url.Action("ViewApprovalHistory", "NCRApproval")' + "?NCR_NUM=" + NCR_NUM + '&CRNo=' + CRNO,'_blank');
                } else {
                    bootbox.alert('NCR_NUM does not history!');
                }
    });
    $("#gridChangeitemNCR").on("click", ".CRNo", function (e) {
        var grid = $("#gridChangeitemNCR").data("kendoGrid");
        var model = grid.dataItem($(e.target).closest("tr"));
        var NCR_NUM = model.CRNo;
        window.open('@Url.Action("ViewChangeItem", "ChangeItem")' + "?CR_NUMBER=" + NCR_NUM, '_blank');
    });

</script>
