@using II_VI_Incorporated_SCM.Models.NCRReport
@using II_VI_Incorporated_SCM.Services
@{
                /**/

                ViewBag.Title = "EscappingPPM";
                Layout = "~/Views/Shared/_Layout.cshtml";
}
<h3> Escaping PPM to Production </h3>
<br />

@using (Html.BeginForm("GetValueFile", "NCRReport", FormMethod.Post, new { id = "EEP", role = "form", enctype = "multipart/form-data" }))
{
    <div class="form-group row" style="text-align:right">
        <label class="col-md-4">Select Transaction History For EscapePPM of the month<span style="color: red">*</span> : </label>
        <div class="col-md-4 date">
            <input type="file" class="form-control" id="FILE" name="FILE" />
            <input type="hidden" value="false" name="check" id="check" />
        </div>
        <div class="col-md-2">
            @if (ViewBag.User == "696b58bb-5a9c-4877-9c9e-198fc56a7155" || ViewBag.User == "c530e6ec-f164-4699-a1c6-08bcad6e0fd6")
            {
                <input type="submit" id="getfile" class="btn btn-info" value="Save" />
            }
        </div>
    </div>

}
<br />
<button class="btn tbn-sm btn-info" id="excel">Export</button>
<h4 style="text-align:center">Escaping PPM to Production </h4>
<div class="container-fluid">
    <div class="row">
        <div class="col-xs-18 col-md-12">
            @(Html.Kendo().Grid<II_VI_Incorporated_SCM.Models.NCRReport.EEPreportviewModel>()
                                        .Name("gridPorentoraw")
                                        .Columns(columns =>
                                        {
                                            columns.Bound(p => p.TYPE).Width(200).Title("").Editable("true");
                                            columns.Bound(p => p.FY3).Width(30).Title("FY14").Editable("true");
                                            columns.Bound(p => p.FY2).Width(30).Title("FY15").Editable("true");
                                            columns.Bound(p => p.FY1).Width(30).Title("FY16").Editable("true");
                                            columns.Bound(p => p.JUL).Width(30).Title("JUL").Editable("false");
                                            columns.Bound(p => p.AUG).Width(30).Title("AUG").Editable("false");
                                            columns.Bound(p => p.SEP).Width(30).Title("SEP").Editable("false");
                                            columns.Bound(p => p.OCT).Width(30).Title("OCT").Editable("false");
                                            columns.Bound(p => p.NOV).Width(30).Title("NOV").Editable("false");
                                            columns.Bound(p => p.DEC).Width(30).Title("DEC").Editable("false");
                                            columns.Bound(p => p.JAN).Width(30).Title("JAN").Editable("false");
                                            columns.Bound(p => p.FEB).Width(30).Title("FEB").Editable("false");
                                            columns.Bound(p => p.MAR).Width(30).Title("MAR").Editable("false");
                                            columns.Bound(p => p.APR).Width(30).Title("APR").Editable("false");
                                            columns.Bound(p => p.MAY).Width(30).Title("MAY").Editable("false");
                                            columns.Bound(p => p.JUN).Width(30).Title("JUN").Editable("false");
                                            columns.Bound(p => p.FYCurrent).Width(30).Title("FY").Editable("true");
                                            columns.Bound(p => p.FY).Width(30).Hidden();
                                        })
                                                         .Editable(editable => editable.Mode(GridEditMode.InCell))
                                                         .DataSource(dataSource => dataSource
                                                         .Ajax()
                                                         .Batch(true)
                                                         .ServerOperation(false)
                                                         .Events(events => events.Error("error_handler")
                                                                         .Change("updateChart"))
                                                         .Model(model => model.Id(p => p.FY))
                                                         .Read("ReadEscapPPMToProduction", "NCRReport", new { yearselect = DateTime.Now.Subtract(DateTime.ParseExact("01/07/" + DateTime.Now.Year, "dd/MM/yyyy", System.Globalization.CultureInfo.CurrentCulture)).Minutes >= 0 ? DateTime.Now.AddYears(1).Year : DateTime.Now.Year })
                                                          .Update("EditingNCRDispositionDay", "NCRReport")
                                                         )
            )
        </div>
    </div>
</div>
<div style="text-align:center">
    @if (ViewBag.User == "696b58bb-5a9c-4877-9c9e-198fc56a7155" || ViewBag.User == "c530e6ec-f164-4699-a1c6-08bcad6e0fd6")
    {
        <button class="btn btn-sm btn-success" id="savetoproduction">Save To Production</button>
    }
</div>
<div id="chartEEPtoproduction"></div>
<br />
<h4 style="text-align:center">Escaping PPM to Component </h4>
<div class="container-fluid">
    <div class="row">
        <div class="col-xs-18 col-md-12">
            @(Html.Kendo().Grid<II_VI_Incorporated_SCM.Models.NCRReport.EEPreportviewModel>()
                                      .Name("gridPorentorawtocomponent")
                                      .Columns(columns =>
                                      {
                                          columns.Bound(p => p.TYPE).Width(200).Title("").Editable("true");
                                          columns.Bound(p => p.JUL).Width(30).Title("JUL").Editable("false");
                                          columns.Bound(p => p.AUG).Width(30).Title("AUG").Editable("false");
                                          columns.Bound(p => p.SEP).Width(30).Title("SEP").Editable("false");
                                          columns.Bound(p => p.OCT).Width(30).Title("OCT").Editable("false");
                                          columns.Bound(p => p.NOV).Width(30).Title("NOV").Editable("false");
                                          columns.Bound(p => p.DEC).Width(30).Title("DEC").Editable("false");
                                          columns.Bound(p => p.JAN).Width(30).Title("JAN").Editable("false");
                                          columns.Bound(p => p.FEB).Width(30).Title("FEB").Editable("false");
                                          columns.Bound(p => p.MAR).Width(30).Title("MAR").Editable("false");
                                          columns.Bound(p => p.APR).Width(30).Title("APR").Editable("false");
                                          columns.Bound(p => p.MAY).Width(30).Title("MAY").Editable("false");
                                          columns.Bound(p => p.JUN).Width(30).Title("JUN").Editable("false");
                                          columns.Bound(p => p.FYCurrent).Width(30).Title("FY").Editable("true");
                                          columns.Bound(p => p.FY).Width(30).Hidden();
                                      })
                                                       .Editable(editable => editable.Mode(GridEditMode.InCell))
                                                       .DataSource(dataSource => dataSource
                                                       .Ajax()
                                                       .Batch(true)
                                                       .ServerOperation(false)
                                                       .Events(events => events.Error("error_handler")
                                                       .Change("updateChartcomponent"))
                                                       .Model(model => model.Id(p => p.FY))
                                                       .Read("ReadEscapPPMToComponent", "NCRReport", new { yearselect = DateTime.Now.Subtract(DateTime.ParseExact("01/07/" + DateTime.Now.Year, "dd/MM/yyyy", System.Globalization.CultureInfo.CurrentCulture)).Minutes >= 0 ? DateTime.Now.AddYears(1).Year : DateTime.Now.Year })
                                                       )
            )
        </div>
    </div>
</div>
<div style="text-align:center">
    @if (ViewBag.User == "696b58bb-5a9c-4877-9c9e-198fc56a7155" || ViewBag.User == "c530e6ec-f164-4699-a1c6-08bcad6e0fd6")
    {
        <button class="btn btn-sm btn-success" id="savetocomponent">Save To Component</button>
    }
</div>
<br />
<div id="chartEEPtocomponent"></div>

<br />

<h4 style="text-align:center">Escaping PPM to System </h4>
<div class="container-fluid">
    <div class="row">
        <div class="col-xs-18 col-md-12">
            @(Html.Kendo().Grid<II_VI_Incorporated_SCM.Models.NCRReport.EEPreportviewModel>()
                                      .Name("gridPorentosystem")
                                      .Columns(columns =>
                                      {
                                          columns.Bound(p => p.TYPE).Width(200).Title("").Editable("true");
                                          columns.Bound(p => p.JUL).Width(30).Title("JUL").Editable("false");
                                          columns.Bound(p => p.AUG).Width(30).Title("AUG").Editable("false");
                                          columns.Bound(p => p.SEP).Width(30).Title("SEP").Editable("false");
                                          columns.Bound(p => p.OCT).Width(30).Title("OCT").Editable("false");
                                          columns.Bound(p => p.NOV).Width(30).Title("NOV").Editable("false");
                                          columns.Bound(p => p.DEC).Width(30).Title("DEC").Editable("false");
                                          columns.Bound(p => p.JAN).Width(30).Title("JAN").Editable("false");
                                          columns.Bound(p => p.FEB).Width(30).Title("FEB").Editable("false");
                                          columns.Bound(p => p.MAR).Width(30).Title("MAR").Editable("false");
                                          columns.Bound(p => p.APR).Width(30).Title("APR").Editable("false");
                                          columns.Bound(p => p.MAY).Width(30).Title("MAY").Editable("false");
                                          columns.Bound(p => p.JUN).Width(30).Title("JUN").Editable("false");
                                          columns.Bound(p => p.FYCurrent).Width(30).Title("FY").Editable("true");
                                          columns.Bound(p => p.FY).Width(30).Hidden();
                                      })
                                            .Editable(editable => editable.Mode(GridEditMode.InCell))
                                            .DataSource(dataSource => dataSource
                                            .Ajax()
                                            .Batch(true)
                                            .ServerOperation(false)
                                            .Events(events => events.Error("error_handler")
                                                            .Change("updateChartsystem"))
                                            .Model(model => model.Id(p => p.FY))
                                            .Read("ReadEscapPPMToSystem", "NCRReport", new { yearselect = DateTime.Now.Subtract(DateTime.ParseExact("01/07/" + DateTime.Now.Year, "dd/MM/yyyy", System.Globalization.CultureInfo.CurrentCulture)).Minutes >= 0 ? DateTime.Now.AddYears(1).Year : DateTime.Now.Year })
                                            )
            )
        </div>
    </div>
</div>
<div style="text-align:center">
    @if (ViewBag.User == "696b58bb-5a9c-4877-9c9e-198fc56a7155" || ViewBag.User == "c530e6ec-f164-4699-a1c6-08bcad6e0fd6")
    {
        <button class="btn btn-sm btn-success" id="savetosystem">Save To System</button>
    }
</div>
<div id="chartEEPtoSystem"></div>
<br />
<script type="text/javascript">
    var EEPGrid = $("#EEPgrid").data("kendoGrid");
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
    $(document).ready(function () {
        //to production
        settitle();
        $('#savetoproduction').click(function () {
            var data = $("#gridPorentoraw").data("kendoGrid").dataSource.data();
            var lst = [];
            data.forEach(function (item) {
                lst.push(item)
            })
            var abc = JSON.stringify(lst);
            $.blockUI();
            $.post('@Url.Action("SaveEEPToProduction", "NCRReport")', { ListDay: abc },
                function (result) {
                    if (result === true) {
                        bootbox.alert(" Save successfully!!");
                    }
                    $.unblockUI();
                }).fail(function () {
                    $.unblockUI();
                    bootbox.alert('Please contact to Administrator!');
                }).always(function () {
                    $.unblockUI();
                });
        });
        //to component
        settitlettocomponent();
        $('#savetocomponent').click(function () {
            var data = $("#gridPorentorawtocomponent").data("kendoGrid").dataSource.data();
            var lst = [];
            data.forEach(function (item) {
                lst.push(item)
            })
            var abc = JSON.stringify(lst);
            $.blockUI();
            $.post('@Url.Action("SaveEEPToProduction", "NCRReport")', { ListDay: abc },
                function (result) {
                    if (result == true) {
                        bootbox.alert(" Save successfully!!");
                    }
                    $.unblockUI();
                }).fail(function () {
                    $.unblockUI();
                    bootbox.alert('Please contact to Administrator!');
                }).always(function () {
                    $.unblockUI();
                });
        });
        //to system
        settitlettoSystem();
        $('#savetosystem').click(function () {
            var data = $("#gridPorentosystem").data("kendoGrid").dataSource.data();
            var lst = [];
            data.forEach(function (item) {
                lst.push(item)
            })
            var abc = JSON.stringify(lst);
            $.blockUI();
            $.post('@Url.Action("SaveEEPToProduction", "NCRReport")', { ListDay: abc },
                function (result) {
                    if (result == true) {
                        bootbox.alert(" Save successfully!!");
                    }
                    $.unblockUI();
                }).fail(function () {
                    $.unblockUI();
                    bootbox.alert('Please contact to Administrator!');
                }).always(function () {
                    $.unblockUI();
                });
        });
    });
    //to production
    function settitle() {
        var Xmas = new Date();
        var month = Xmas.getMonth();
        var yearselected2 = Xmas.getFullYear();

        if (month > 6) {
            yearselected2 = yearselected2 + 1;
        }
        var yearselected = yearselected2.toString();
        let setyeartitle = yearselected.substr(2, 4);
        let setyearFy1 = parseInt(setyeartitle) - 1;
        let setyearFy2 = parseInt(setyeartitle) - 2;
        let setyearFy3 = parseInt(setyeartitle) - 3;
        let title = "FY";
        let JUL = "JUL";
        let AUG = "AUG";
        let SEP = "SEP";
        let OCT = "OCT";
        let NOV = "NOV";
        let DEC = "DEC";
        let JAN = "JAN";
        let FEB = "FEB";
        let MAR = "MAR";
        let APR = "APR";
        let MAY = "MAY";
        let JUN = "JUN";
        $("#gridPorentoraw thead [data-field=FY3] .k-link").html(title + '-' + setyearFy3);
        $("#gridPorentoraw thead [data-field=FY2] .k-link").html(title + '-' + setyearFy2);
        $("#gridPorentoraw thead [data-field=FY1] .k-link").html(title + '-' + setyearFy1);
        $("#gridPorentoraw thead [data-field=JUL] .k-link").html(JUL + '-' + setyearFy1);
        $("#gridPorentoraw thead [data-field=AUG] .k-link").html(AUG + '-' + setyearFy1);
        $("#gridPorentoraw thead [data-field=SEP] .k-link").html(SEP + '-' + setyearFy1);
        $("#gridPorentoraw thead [data-field=OCT] .k-link").html(OCT + '-' + setyearFy1);
        $("#gridPorentoraw thead [data-field=NOV] .k-link").html(NOV + '-' + setyearFy1);
        $("#gridPorentoraw thead [data-field=DEC] .k-link").html(DEC + '-' + setyearFy1);
        $("#gridPorentoraw thead [data-field=JAN] .k-link").html(JAN + '-' + setyeartitle);
        $("#gridPorentoraw thead [data-field=FEB] .k-link").html(FEB + '-' + setyeartitle);
        $("#gridPorentoraw thead [data-field=MAR] .k-link").html(MAR + '-' + setyeartitle);
        $("#gridPorentoraw thead [data-field=APR] .k-link").html(APR + '-' + setyeartitle);
        $("#gridPorentoraw thead [data-field=MAY] .k-link").html(MAY + '-' + setyeartitle);
        $("#gridPorentoraw thead [data-field=JUN] .k-link").html(JUN + '-' + setyeartitle);
        $("#gridPorentoraw thead [data-field=FYCurrent] .k-link").html(title + '-' + setyeartitle);
    }

    var months = ["JUL", "AUG", "SEP", "OCT", "NOV", "DEC", "JAN", "FEB", "MAR", "APR", "MAY", "JUN","","FYCurrent"];
    $("#chartEEPtoproduction").kendoChart({
        title: {
            text: "Escaping PPM to Production"
        },
        seriesDefaults: {
            type: "line",
            missingValues: "gap"

        },
        tooltip: {
            visible: true
        },
        categoryAxis: {
            categories: months,
        }

    });

    function updateChart(dataSource) {
        var data = $("#gridPorentoraw").data("kendoGrid").dataSource.view();
        var dataItems = data.slice(2);
        var chartSeries = [];
        var chartData = [];
        dataItems.forEach(function (item) {
            var data = [];
            months.forEach(function (month) {
                //Each month value is added to the data collection
                function valueChart() {
                    if (item[month] == 0)
                        return null;
                    else
                        return item[month];
                }
                data.push(valueChart());
            })

            chartSeries.push({
                data: data,

                name: item.TYPE
            })
        })
        var chart = $("#chartEEPtoproduction").data("kendoChart");
        var options = chart.options;
        options.series = chartSeries;
        chart.setOptions(options);
    }
    //to component
    function settitlettocomponent() {
        var Xmas = new Date();
         var month = Xmas.getMonth();
        var yearselected2 = Xmas.getFullYear();

        if (month > 6) {
            yearselected2 = yearselected2 + 1;
        }
        var yearselected = yearselected2.toString();
        let setyeartitle = yearselected.substr(2, 4);
        let setyearFy1 = parseInt(setyeartitle) - 1;
        let setyearFy2 = parseInt(setyeartitle) - 2;
        let setyearFy3 = parseInt(setyeartitle) - 3;
        let title = "FY";
        let JUL = "JUL";
        let AUG = "AUG";
        let SEP = "SEP";
        let OCT = "OCT";
        let NOV = "NOV";
        let DEC = "DEC";
        let JAN = "JAN";
        let FEB = "FEB";
        let MAR = "MAR";
        let APR = "APR";
        let MAY = "MAY";
        let JUN = "JUN";
        $("#gridPorentorawtocomponent thead [data-field=FY3] .k-link").html(title + '-' + setyearFy3);
        $("#gridPorentorawtocomponent thead [data-field=FY2] .k-link").html(title + '-' + setyearFy2);
        $("#gridPorentorawtocomponent thead [data-field=FY1] .k-link").html(title + '-' + setyearFy1);
        $("#gridPorentorawtocomponent thead [data-field=JUL] .k-link").html(JUL + '-' + setyearFy1);
        $("#gridPorentorawtocomponent thead [data-field=AUG] .k-link").html(AUG + '-' + setyearFy1);
        $("#gridPorentorawtocomponent thead [data-field=SEP] .k-link").html(SEP + '-' + setyearFy1);
        $("#gridPorentorawtocomponent thead [data-field=OCT] .k-link").html(OCT + '-' + setyearFy1);
        $("#gridPorentorawtocomponent thead [data-field=NOV] .k-link").html(NOV + '-' + setyearFy1);
        $("#gridPorentorawtocomponent thead [data-field=DEC] .k-link").html(DEC + '-' + setyearFy1);
        $("#gridPorentorawtocomponent thead [data-field=JAN] .k-link").html(JAN + '-' + setyeartitle);
        $("#gridPorentorawtocomponent thead [data-field=FEB] .k-link").html(FEB + '-' + setyeartitle);
        $("#gridPorentorawtocomponent thead [data-field=MAR] .k-link").html(MAR + '-' + setyeartitle);
        $("#gridPorentorawtocomponent thead [data-field=APR] .k-link").html(APR + '-' + setyeartitle);
        $("#gridPorentorawtocomponent thead [data-field=MAY] .k-link").html(MAY + '-' + setyeartitle);
        $("#gridPorentorawtocomponent thead [data-field=JUN] .k-link").html(JUN + '-' + setyeartitle);
        $("#gridPorentorawtocomponent thead [data-field=FYCurrent] .k-link").html(title + '-' + setyeartitle);
    }

    $("#chartEEPtocomponent").kendoChart({
        title: {
            text: "Escaping PPM to Component"
        },
        seriesDefaults: {
            type: "line",
            missingValues: "gap"

        },
        tooltip: {
            visible: true
        },
        categoryAxis: {
            categories: months,
        }

    });

    function updateChartcomponent(dataSource) {
        var data = $("#gridPorentorawtocomponent").data("kendoGrid").dataSource.view();
        var dataItems = data.slice(2);
        var chartSeries = [];
        var chartData = [];
        dataItems.forEach(function (item) {
            var data = [];
            months.forEach(function (month) {
                //Each month value is added to the data collection
                function valueChart() {
                    if (item[month] == 0)
                        return null;
                    else
                        return item[month];
                }
                data.push(valueChart());
            })

            chartSeries.push({
                data: data,

                name: item.TYPE
            })
        })
        var chart = $("#chartEEPtocomponent").data("kendoChart");
        var options = chart.options;
        options.series = chartSeries;
        chart.setOptions(options);
    }
    //to system
    function settitlettoSystem() {
        var Xmas = new Date();
          var month = Xmas.getMonth();
        var yearselected2 = Xmas.getFullYear();

        if (month > 6) {
            yearselected2 = yearselected2 + 1;
        }
        var yearselected = yearselected2.toString();
        let setyeartitle = yearselected.substr(2, 4);
        let setyearFy1 = parseInt(setyeartitle) - 1;
        let setyearFy2 = parseInt(setyeartitle) - 2;
        let setyearFy3 = parseInt(setyeartitle) - 3;
        let title = "FY";
        let JUL = "JUL";
        let AUG = "AUG";
        let SEP = "SEP";
        let OCT = "OCT";
        let NOV = "NOV";
        let DEC = "DEC";
        let JAN = "JAN";
        let FEB = "FEB";
        let MAR = "MAR";
        let APR = "APR";
        let MAY = "MAY";
        let JUN = "JUN";
        $("#gridPorentosystem thead [data-field=FY3] .k-link").html(title + '-' + setyearFy3);
        $("#gridPorentosystem thead [data-field=FY2] .k-link").html(title + '-' + setyearFy2);
        $("#gridPorentosystem thead [data-field=FY1] .k-link").html(title + '-' + setyearFy1);
        $("#gridPorentosystem thead [data-field=JUL] .k-link").html(JUL + '-' + setyearFy1);
        $("#gridPorentosystem thead [data-field=AUG] .k-link").html(AUG + '-' + setyearFy1);
        $("#gridPorentosystem thead [data-field=SEP] .k-link").html(SEP + '-' + setyearFy1);
        $("#gridPorentosystem thead [data-field=OCT] .k-link").html(OCT + '-' + setyearFy1);
        $("#gridPorentosystem thead [data-field=NOV] .k-link").html(NOV + '-' + setyearFy1);
        $("#gridPorentosystem thead [data-field=DEC] .k-link").html(DEC + '-' + setyearFy1);
        $("#gridPorentosystem thead [data-field=JAN] .k-link").html(JAN + '-' + setyeartitle);
        $("#gridPorentosystem thead [data-field=FEB] .k-link").html(FEB + '-' + setyeartitle);
        $("#gridPorentosystem thead [data-field=MAR] .k-link").html(MAR + '-' + setyeartitle);
        $("#gridPorentosystem thead [data-field=APR] .k-link").html(APR + '-' + setyeartitle);
        $("#gridPorentosystem thead [data-field=MAY] .k-link").html(MAY + '-' + setyeartitle);
        $("#gridPorentosystem thead [data-field=JUN] .k-link").html(JUN + '-' + setyeartitle);
        $("#gridPorentosystem thead [data-field=FYCurrent] .k-link").html(title + '-' + setyeartitle);
    }

    $("#chartEEPtoSystem").kendoChart({
        title: {
            text: "Escaping PPM to SYSTEM"
        },
        seriesDefaults: {
            type: "line",
            missingValues: "gap"

        },
        tooltip: {
            visible: true
        },
        categoryAxis: {
            categories: months,
        }

    });

    function updateChartsystem(dataSource) {
        var data = $("#gridPorentosystem").data("kendoGrid").dataSource.view();
        var dataItems = data.slice(2);
        var chartSeries = [];
        var chartData = [];
        dataItems.forEach(function (item) {
            var data = [];
            months.forEach(function (month) {
                //Each month value is added to the data collection
                function valueChart() {
                    if (item[month] == 0)
                        return null;
                    else
                        return item[month];
                }
                data.push(valueChart());
            });

            chartSeries.push({
                data: data,

                name: item.TYPE
            });
        });
        var chart = $("#chartEEPtoSystem").data("kendoChart");
        var options = chart.options;
        options.series = chartSeries;
        chart.setOptions(options);
    }
    function isBlank(str) {
        return (!str || /^\s*$/.test(str));
    }
    //save file excel
    var $form = $('#EEP');
    $("#EEP").submit(function (e) {
        e.preventDefault();
        var file = $('#FILE').val();
        if (file == "") {
            bootbox.alert("Vui lòng chọn file");
            e.preventDefault();
            return false;
        }
        else {
            var dataString = new FormData($form[0]);

            $.blockUI();
            $.ajax({
                url: $form.attr('action'),  //Server script to process data
                type: 'POST',
                //Ajax events
                success: function (result) {
                    console.log(result);
                    console.log(result.success);
                    if (result.success === 2) {
                        $.unblockUI();
                        bootbox.confirm({
                            message: "File " + $('#EEP #FILE')[0].files[0].name + " is duplicate! Are you sure save data ?",
                            buttons: {
                                confirm: {
                                    label: 'Yes',
                                    className: 'btn-success'
                                },
                                cancel: {
                                    label: 'No',
                                    className: 'btn-danger'
                                }
                            },
                            callback: function (result) {
                                if (result === true) {
                                    $('#EEP #check').val("true");
                                    console.log($('#EEP #check').val());
                                    $.ajax({
                                        url: $form.attr('action'),
                                        type: 'post',
                                        data: new FormData($('#EEP')[0]),
                                        cache: false,
                                        contentType: false,
                                        processData: false,
                                        success: function (result) {
                                            if (result.success === 1) {
                                               // $.unblockUI();
                                                bootbox.alert("Upload and save change successfully!!", function () { location.reload(); });
                                            }
                                            else {
                                                $.unblockUI();
                                                bootbox.alert("Upload and save change unsuccessfully!!");
                                            }
                                        },
                                        error: function () {
                                            bootbox.alert('Please contact to Administrator!');
                                        },
                                        complete: function () {
                                            $.unblockUI();
                                        }
                                    });
                                }
                            }
                        });
                    }
                    else if (result.success === 1) {
                        $.unblockUI();
                        bootbox.alert("Upload and save change successfully!!", function () { location.reload(); });
                    }
                    else if (result.success === 0) {
                        $.unblockUI();
                        bootbox.alert("Upload and save change unsuccessfully!!");
                    }
                },
                error: function () {
                    bootbox.alert('Please contact to Administrator!');
                },
                complete: function () {
                    $.unblockUI();
                },
                // Form data
                data: dataString,
                //Options to tell jQuery not to process data or worry about content-type.
                cache: false,
                contentType: false,
                processData: false
            });

        }
    });

</script>
